<apex:page cache="true" showHeader="false" 
controller="BMCServiceDesk.IncidentController" contentType="{!contetnTypeForIE}" extensions="BMCServiceDesk.ClientInfo,BMCServiceDesk.JSRemoteActions">
    <c:CommonIncludes />
    <!-- overrides to base library -->
    <link rel="stylesheet" type="text/css"  href="{!$Resource.ExtJSUX}/ex/ux/css/Portal.css" />
    <link rel="stylesheet" type="text/css"  href="{!$Resource.ExtJSUX}/ex/ux/css/GroupTab.css" />
    <link rel="stylesheet" type="text/css"  href="{!$Resource.SDEFStyles}/SIStyleSheet.css" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/ux/GroupTabPanel.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/ux/GroupTab.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/ux/Portal.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/ux/PortalColumn.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/ux/Portlet.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJSUX}/ex/portal/sample-grid.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/JSTemplate.js" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/IncidentCustom.js" />
    <link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/Incident.css" />
	<link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/CustomViews.css" />

<script>
function validateMe(obj,dateType){
}
function disableMe(obj){
	obj.disabled = true;
}
var broadcastFieldIdForName;
var broadcastFieldIdForId;
var isSaveCalled = false;
var staffIdString = '';
var globalSearch = '{!JSENCODE($Label.GlobalSearch)}'; 
var KMdescription = '';
var KMids ='';
var KMSearchLabel = '{!JSENCODE($Label.IncidentKnowledgeSearchButtonToolTip)}';
var pageUrl= document.location.href.split('apex/');
var baseElementId;
var savedone;
var automaticupdateduedate = {!recalculateDueDate};
var stageHTMLPrev = '{!JSENCODE(StageHTML)}';
var stgName = '{!JSENCODE(closedStageName)}'; 
var brdCastName ; 
var brdCastNameId;
var displayIncEle = true;
var hideAccount = '{!hideAccount}';
var copymetrue = {!copyme};
var copyme='{!copyme}';
var chkBoxValue= '{!chkBoxValue}';
var incidentHeader = '{!JSENCODE($ObjectType.Incident__c.label)}';
var LinkedToClient = '{!JSENCODE($Label.LinkedToClient)}';
var dateValue = '{!filterClauseDate}';
var dateClause = escape('(end_date__c = null or end_date__c >=' + dateValue + ')');
var dueDateCalculationOptionJS = '{!$Component.incidentForm.pbarId.Incidentdetail.dueDateCalculationOption}';
var labelTooltipMaximize = '{!JSENCODE($Label.TooltipMaximize)}',
	labelTooltipRestore = '{!JSENCODE($Label.TooltipRestore)}';
var reqDefnInCIFS = false;
     Ext.ns("IncidentPage");
            IncidentPage.Labels = {
                SavedSuccessfully: '{!JSENCODE($Label.SavedSuccessfully)}',
                CIExpCIExplorer: '{!JSENCODE($Label.CIExpCIExplorer)}',
				LaunchCIExplorer:'{!JSENCODE($Label.LaunchCIExplorer)}',
                EmptyValueForChatterComment: '{!JSENCODE($Label.EmptyValueForChatterComment)}',
                ConfigurationItemsExplorer: '{!JSENCODE($Label.ConfigurationItemsExplorer)}',
                ValidDateTime: '{!JSENCODE($Label.ValidDateTime)}',
                IncidentWindowHeaderSearchPage: '{!JSENCODE($ObjectType.Incident__c.label)}',
                TextAreaOverflow: '{!JSENCODE($Label.TextAreaOverflow)}',
                Description: '{!JSENCODE($ObjectType.Incident__c.fields.incidentDescription__c.label)}',
                Resolution: '{!JSENCODE($ObjectType.Incident__c.fields.incidentResolution__c.label)}',
                Delete: '{!JSENCODE($Label.Delete)}',
                ComposeEmailPageHeader: '{!JSENCODE($Label.ComposeEmailPageHeader)}',
                DeleteIncidentPage: '{!JSENCODE($Label.DeleteConfirmMessage)}',
                SelectFrom: '{!JSENCODE($Label.SelectFrom)}',
                Queue: '{!JSENCODE($Label.Queue)}',
                IncidentProcess: '{!JSENCODE($Label.IncidentProcess)}',
                AlignabilityProcessModel: '{!JSENCODE($Label.AlignabilityProcessModel)}',
                New: '{!JSENCODE($Label.New)}',
                Save: '{!JSENCODE($Label.Save)}',
                Copy: '{!JSENCODE($Label.Copy)}',
                Delete: '{!JSENCODE($Label.Delete)}',
                Reset: '{!JSENCODE($Label.Refresh)}',
                DurationError: '{!JSENCODE($Label.DurationError)}',
                Note: '{!JSENCODE($ObjectType.Incident__c.fields.note__c.label)}',
                ViewOpenIncidentsFor: '{!JSENCODE($Label.ViewOpenIncidentsFor)}',
                IncidentsforClient: '{!JSENCODE($Label.IncidentsforClient)}',
                IncidentsforCategory: '{!JSENCODE($Label.IncidentsforCategory)}',
                AssignTo: '{!JSENCODE($Label.AssignTo)}',
                IncidentsStaff: '{!JSENCODE($Label.IncidentsStaff)}',
                IncidentsSuggestedStaff: '{!JSENCODE($Label.IncidentsSuggestedStaff)}',
                IncidentMyself: '{!JSENCODE($Label.IncidentMyself)}',
                IncidentMemberof: '{!JSENCODE($Label.IncidentMemberof)}',
                Queue: '{!JSENCODE($Label.Queue)}',
                Actions: '{!JSENCODE($Label.Actions)}',
                IncidentClose: '{!JSENCODE($Label.Close)}', 
                IncidentQuickClose: '{!JSENCODE($Label.IncidentQuickClose)}', 
                IncidentReopenIncident: '{!JSENCODE($Label.IncidentReopenIncident)}', 
                IncidentIncrementCallCounter: '{!JSENCODE($Label.IncidentIncrementCallCounter)}',
                IncidentResponded: '{!JSENCODE($Label.IncidentResponded)}', 
                Template: '{!JSENCODE($Label.Template)}',
                IncidentMgmtProcess: '{!JSENCODE($Label.IncidentMgmtProcess)}',
                Inactive: '{!JSENCODE($ObjectType.Incident__c.fields.inactive__c.label)}',
                TooltipIncidentInactive: '{!JSENCODE($ObjectType.Incident__c.fields.inactive__c.label)}',
                PreviousRecord: '{!JSENCODE($Label.PreviousRecord)}',
                NextRecord: '{!JSENCODE($Label.NextRecord)}',
                DragResizeClickCollapse: '{!JSENCODE($Label.DragResizeClickCollapse)}',
                ClickToExpand: '{!JSENCODE($Label.ClickToExpand)}',
                MsgNoAccessPerm: '{!JSENCODE($Label.MsgNoAccessPerm)}',
                SelectFrom: '{!JSENCODE($Label.SelectFrom)}',
                CloseIncident: '{!JSENCODE($Label.CloseIncident)}',
                IncidentRelatedBroadcastsChanges: '{!JSENCODE($Label.StdIncidentRelatedBroadcastsChanges)}',
                InsufficentDeletePrivilege: '{!JSENCODE($Label.InsufficentDeletePrivilege)}',
                Email: '{!JSENCODE($Label.Email)}',
                FollowUnfollow: '{!JSENCODE($Label.FollowUnfollow)}',
                PM_netwokLatency: '{!JSENCODE($Label.PM_netwokLatency)}',
                PM_PageLoad: '{!JSENCODE($Label.PM_PageLoad)}',
                DeletedRecord: '{!JSENCODE($Label.DeletedRecord)}',
                Information: '{!JSENCODE($Label.Information)}',
                TextAreaOverflowForChatter: '{!JSENCODE($Label.TextAreaOverflowForChatter)}',
                TextAreaOverflowForChatterComment: '{!JSENCODE($Label.TextAreaOverflowForChatterComment)}',
				ServiceTargets: '{!JSENCODE($Label.SLM_ServiceTargets)}',
				OverwriteWarning:'{!JSENCODE($Label.OverwriteWarning)}',
				ExtjsMessageYes:'{!JSENCODE($Label.ExtjsMessageYes)}',
				ServiceRequestLabel: '{!JSENCODE($Label.ServiceRequestDetail)}',
				ClosedStage : '{!JSENCODE($Label.ClosedStage)}',
				SuggestedExperts : '{!JSENCODE($Label.SuggestedExperts)}',
				replaceUnsaved : '{!JSENCODE($Label.replaceUnsaved)}'
            }
    Ext.ns("IncidentPageComp");
         IncidentPageComp.ComponentVars = {
            IncidentDescription: '{!$Component.incidentForm.incident_incidentDescription__c}',
            IncidentNotes: '{!$Component.incidentForm.incident_incidentNote__c}',
            IncidentDuration: '{!$Component.incidentForm.incident_incidentDuration__c}',
            IncidentResolution: '{!$Component.incidentForm.incident_incidentResolution__c}',
            IsPriorityChanged: '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c__isPriorityChanged}',
            DueDateCalculationOption: '{!$Component.incidentForm.pbarId.Incidentdetail.dueDateCalculationOption}',
            StatusId: '{!$Component.incidentForm.pbarId.Incidentdetail.Status__c_id_name}',
			Status_Id: '{!$Component.incidentForm.pbarId.Incidentdetail.Status__c_id_id}',
			StatusStage: '{!$Component.incidentForm.pbarId.Incidentdetail.Status__c_id_stage__c}',
            ImpactIDName: '{!$Component.incidentForm.pbarId.Incidentdetail.Impact__c_id_name}',
            UrgencyIDName: '{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_name}',
            IncidentForm: '{!$Component.incidentForm}',
            UserLastName: '{!$Component.incidentForm.User_id_lastname}',
            PerformancePanel: '{!$Component.incidentForm.pbarId.PerformancepanelBar.PerformancePanel}',
            TestPanelID: '{!$Component.incidentForm.testpanelId}',
            CIExpButton: '{!$Component.incidentForm.pbarId.CIDetail.CIExpBut}',
            CategoryIDName: '{!$Component.incidentForm.Category__c_id_name}',
            UserID: '{!$Component.incidentForm.User_id_id}',
			ClientTypeID:'{!$Component.incidentForm.Client_Type_ID}',
            TipUserID: '{!$Component.incidentForm.clientHiddeninput}',
            ContactID: '{!$Component.incidentForm.Contact_id_id}',
            LeadID: '{!$Component.incidentForm.Lead_id_id}',
            LeadIDcontroller: '{!$Component.incidentForm.Lead_id_controller}',
            UserName: '{!$Component.incidentForm.User_id_username}',
            CategoryID: '{!$Component.incidentForm.Category__c_id_id}',
            CategoryFKUrgency: '{!$Component.incidentForm.Category__c_id_fkurgency__c}',
            UrgencyIDName: '{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_name}',
            UrgencyID: '{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_id}',
            ImpactID: '{!$Component.incidentForm.pbarId.Incidentdetail.Impact__c_id_id}',
            BroadcastIDName: '{!BroadcastIDName}',
            ProblemIDName: '{!$Component.incidentForm.pbarId.Incidentdetail.Problem__c_id_name}',
            ProblemID: '{!$Component.incidentForm.pbarId.Incidentdetail.Problem__c_id_id}',
            clientFKUrgency: '{!$Component.incidentForm.User_id_fkurgency__c}',
            BaseElementName: '{!JSENCODE(incident.FKBMC_BaseElement__r.name)}',
            broadcastAccordionPanelId:'{!$Component.incidentForm.pbarId.broadcastDetails}',
			ciAccordionPanelId:'{!$Component.incidentForm.pbarId.CIDetail}',
			CustomFieldAccordionPanelId:'{!$Component.incidentForm.pbarId.CustomFieldspanelBar}',
            serviceName:'{!JSENCODE(incident.FKBusinessService__r.name)}',
            clientHiddenInput:'{!$Component.incidentForm.clientHiddeninput}', 
            contactHiddenInput:'{!$Component.incidentForm.contactHiddeninput}',
            leadHiddenInput:'{!$Component.incidentForm.leadHiddeninput}',
            bsName:'{!$Component.incidentForm.pbarId.CIDetail.bsName}',
            bsId:'{!$Component.incidentForm.pbarId.CIDetail.bsId}',
            reqDefnName:'{!$Component.incidentForm.pbarId.CIDetail.reqDefnName}',
            soName:'{!$Component.incidentForm.pbarId.CIDetail.soName}',
            soId:'{!$Component.incidentForm.pbarId.CIDetail.soId}',
            reqDetailID:'{!$Component.incidentForm.pbarId.CIDetail.reqDetailID}',
            reqDefinationID:'{!$Component.incidentForm.pbarId.CIDetail.reqDefinationID}',
			staff_user_id: '{!$Component.incidentForm.pbarId.staffAssignmentPanel.staffHiddeninput}',
            staff_firstname:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_firstname}',
            staff_laststname:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_laststname}',
			staff_profilename:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_profilename}',
			staff_phone:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_phone}',
			staff_extension:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_extension}',
            staff_queue:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.staff_queue}',
            incidentOwnerId:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.incidentOwnerId}',
            // Staff and Queue Assignment US
            assignToOwnerId:'{!$Component.incidentForm.pbarId.staffAssignmentPanel.assignToOwnerId}'
         }
var mailConversationHelpLink = "{!$Resource.SDEFHelp}/email_conversation.htm";
var servertime1='';

var commontime = '';
var doubleTypeFlds = '{!doubleTypeFlds}';
var doubleTypeRead = '{!doubleTypeReadProp}';

var starttime1 = '{!starttime}';
var testdate = new Date();
var testtime = testdate.getTime();
var iFrameSrc;
var cookieName= 'ConfigureSI'+'{!JSENCODE($User.Id)}';
var cookieValue = Ext.util.Cookies.get(cookieName);
var isIncInactive= '{!incident.inactive__c}';
var clientSearchPageFlag = '{!showClientSearch}';
var clientPopupInprogress = false;
var firstName = '', lastName = '', userName = '', valueChanged = false, incAccountName = '';
var tooltipHtmlResult = '';
var tooltipHtmlResultReqDetail = '';
var orgNamespace = '{!orgNamespace}';
var labelIncidentPlural = "{!JSENCODE($ObjectType.Incident__c.LabelPlural)}";
var popupInprogress = false;
var remoteCallFlag = false;
var tooltipforclientstaff = null;
var tooltipforreqdetail = null;
var cilink_record = '{!cilink}';
var categoryRequired = '{!categoryRequired}';
var accountPopupFlag = false, selectedAccountId = null, clientType = '';
        function getCookieValue(){
            return cookieValue;
        }
       
       function getapplyTemp(){
 		setcheckforTemplate = '{!showtemplatecheck}'; 
 		overwrite = '{!overwrite}';
		}
        function getWID(){
            return '{!JSENCODE($CurrentPage.parameters.wid)}';
        }

 function getModName(){
            return '{!JSENCODE($CurrentPage.parameters.moduleName)}';
        }

        function getParentWid(){
            return '{!JSENCODE($CurrentPage.parameters.parentWid)}';
        }

        function getIsLookUp(){
            return '{!JSENCODE($CurrentPage.parameters.islookup)}';
        }  

        function getIsDirect(){
            return '{!JSENCODE($CurrentPage.parameters.isDirect)}';
        }

        function getID(){
            return '{!JSENCODE($CurrentPage.parameters.id)}';
        }

        function getClientID(){
            return  '{!JSENCODE($CurrentPage.parameters.Userid)}';
        }
 function getAccountID(){
         var accName= document.getElementById('{!$Component.incidentForm.Account_id_name}').value;
         if(accName!='' && accName!=null)
         return document.getElementById('{!$Component.incidentForm.Account_id_id}').value;
         else
          return ''; 
 }
 
 function getUserID(){
         var usrName= document.getElementById('{!$Component.incidentForm.User_id_username}').value;
         if(usrName!='' && usrName!=null)
           return document.getElementById('{!$Component.incidentForm.User_id_id}').value;
         else
           return ''; 
        }
 function getSDFStylesResPath(){
          return '{!$Resource.SDEFStyles}';
        }

  function getSDEFExtJSResPath(){
          return '{!$Resource.SDEFExtJS}';
        }  
  function getPortelTemplateId(){
        return  '{!JSENCODE($CurrentPage.parameters.portletTemplateId)}';
    }
  function getSDEFCommonJSResPath(){
          return '{!$Resource.SDEFCommonJS}';
        }  
 
function getProfileID(){
            return '{!$Profile.Id}';
        }

function getAssignStaffState(){
            return {!assignStaffState};
        }

function getAssignSuggestedStaffState(){
            return {!assignSuggestedStaffState};
        }

function getProfileName(){
            return '{!userProfileName}';
        }

function getAssignMemberOfAdminState(){
            return {!assignMemberOfAdminState};
        }

function getAssignQueueState(){
            return {!assignQueueState};
        }

function getInactive(){
            return {!incident.inactive__c};
        }

function getStateVar(){
            return {!incident.BMCServiceDesk__state__c};
        }
function getNoRightsToViewEdit(){
            return {!NoRightsToViewEdit};
        }
function getIncidentFeed(){
            return {!incidentFeed};
        }
function setToolBarState(){
            var toolBarEle = Ext.getCmp('tbarPanelId').getTopToolbar();
            toolBarEle.doLayout();
        }
function isRecordDeleted(){
        return {!isRecDeleted};
    }
function getIsChangeCreatable(){
    return {!isChangeCreatable};
}
function getIncidentName(){
    return "#{!JSENCODE(incidentName)}";
}
var isAutocomplete = false;
var selectId=0;
var selectClientId=0;
var iKeyCodeEvt;
// Added for Autocomplete   
var impactData = window.parent.parent.impactData;  
var urgencyData = window.parent.parent.urgencyData;
var list= '[]';
var intVal;


var catId='{!$Component.incidentForm.Category__c_id_name}';
var impId='{!$Component.incidentForm.pbarId.Incidentdetail.Impact__c_id_name}';
var urgId='{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_name}';
var selectIdForAutoCom;
var divIdForAutoCom;
var fieldForAutoCom;
var eventFoeAutoCom;
var clUname='{!$Component.incidentForm.User_id_username}';
var clFname='{!$Component.incidentForm.User_id_firstname}';
var clLname='{!$Component.incidentForm.User_id_lastname}';
var accname='{!$Component.incidentForm.Account_id_name}';
var incAccountId='{!$Component.incidentForm.Account_id_id}';
</script>

    <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/CustomFieldsFormGeneral.js"/>
    <apex:stylesheet value="{!$Resource.BMCServiceDesk__ChatterCSS}/chatter.css" />
    <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/Autocomplete.js"/> 
    <c:UserContextComponent />
<style>
    #btnToolbar,
    #btnToolbar .x-panel,
    #btnToolbar .x-panel .x-panel-bwrap{
        *height: 37px; 
    } 
    .publisherrightcontainer{
        *height: 45px;
    }
    .chatterdiv{*width: 260px; *height: 26px;} 
    .clsInputTextArea, .clsInputTextAreaNote, .clsInputTextAreaDisabledNote{
        height:40px !important;
    }
    .infoBtnDiv{
		float: left; 
		position: absolute; 
		margin-left: 22px; 
		*margin-left:2px; 
		vertical-align: top; 
		padding-right: 0px;    
    }
    .clsInputLabelTD1{
        white-space: normal; 
        vertical-align: top;
        font-family: Tahoma, MS Sans Serif;
        color: #000000;
        margin: 0px;
        font-size: 11px;
        padding-top: 3px;
        padding-left: 10px;
        width:84px;
        
    }
    .clsFieldSetMainFormTextBoxTD 
 	{
 		padding-left: 3px;
 	}
	.x-tool-restore {
        background: url("{!$Resource.SDEFStyles}/SDEFbuttons/b_restore.png") no-repeat scroll 0 0 transparent;
        margin-bottom: 0;
        margin-top: 0;
        *height:20px;
        *width:20px;
        padding-bottom: 6px;
        padding-right: 5px;
    }
    
    .x-tool-maximize {
        background: url("{!$Resource.SDEFStyles}/SDEFbuttons/b_maximize.png") no-repeat scroll 0 0 transparent;
        margin-bottom: 0;
        margin-top: 0;
        *height:20px;
        *width:20px;
        padding-bottom: 6px;
        padding-right: 5px;
    }      	
</style>
    <script>
        var wid2 = '{!JSENCODE($CurrentPage.parameters.wid)}';
        var setdisplay = '{!CustomFieldsAccordionDisplay}';
        
        
        
        function checkSave(){
            
            if(doSave){
                saveFunctionRef();
            }
        
        }
                
	function pasteRes(res,KMId,type){
		var str = res;
		str=str.replace(/<\s*br\/*>/gi, " ");
		str=str.replace(/<\s*a.*href="(.*?)".*>(.*?)<\/a>/gi, " $2 (Link->$1) ");
		str=str.replace(/<\s*\/*.+?>/ig, " ");
		str=str.replace(/ {2,}/gi, " ");
		str=str.replace(/\n+\s*/gi, "");
		if(type == 'text'){
			str = htmlDecode(str);
		}
			
		var hiddenRes = document.getElementById('incident_incidentResolution__c');
		if(hiddenRes != null){
			if(hiddenRes.nextSibling.value ==''){
				hiddenRes.nextSibling.value += str;
			} else {
				if(type == 'text'){
					hiddenRes.nextSibling.value += ' '+ str;
				} else {
					hiddenRes.nextSibling.value += '\n'+ str;
				}
			}
			
		}
		//Rahul add
		KMids = KMId ;
		}       
    </script> 
    <apex:outputPanel id="callCounter">
        <script>
           intVal = '{!incident.call__c}';
        </script>    
      </apex:outputPanel>     
    <script>
        var templateEnable={!flagForTemplate};
        var wid = '{!JSENCODE($CurrentPage.parameters.wid)}';
        

        if(window.parent.refreshGridSI!=undefined)
            window.parent.refreshGridSI(wid,resizeGrid);
        
        var isLookup = '{!JSENCODE($CurrentPage.parameters.islookup)}';  
        var isInactive = '{!JSENCODE($CurrentPage.parameters.isinactive)}';  
        
         function ShowCIExplorer() {   
           ShowCIExplorerJS('{!JSENCODE($Label.CIExpCIExplorer)}', '{!JSENCODE($Label.ConfigurationItemsExplorer)}');            
        }
        function callCopyPage(){
            window.parent.addTab("IncidentPageCustom?copyId=" + incidentId,incidentHeader,incidentHeader);
        }
        

        function openNewTab(recId,recType) {
            window.parent.parent.addNewTab("NewsFeedPage", "{!JSENCODE($Label.IncidentChatterFeed)}", "NewsFeedPage?recordId="+recId+"&recordType="+recType);
        }
            var IncProcBtnHandler = function (button,event){
                var incProcPage = 'NavigatorPage?title={!JSENCODE($Label.IncidentProcess)}&target=IncProcMgmtPage?id=1001';
                window.parent.parent.addNewTab('Incident Process', '{!JSENCODE($Label.AlignabilityProcessModel)}', incProcPage, 'false');
            };
   var idset;
   checkIDSet(); 
    if(!isLookup)
    {
    window.parent.addStageProgression(wid, '{!JSENCODE(StageHTML)}');
    }
   
    </script>
    <apex:outputPanel id="inactivePanel">
        <script>
           isIncInactive= '{!incident.inactive__c}';
           
         function updateInactiveForTemp(){
            createControlMap();
            renderElementsByType();             
            if(hideCustomFieldAccordion){
				document.getElementById('{!$Component.incidentForm.pbarId.CustomFieldspanelBar}').style.display = 'none';
			}
        } 
    function getRequestDetailID(){
	return '{!incident.BMCServiceDesk__FKRequestDetail__c}';
}
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="descResolutionPanel">
        <script>
            var incDesc = "{!JSENCODE(incident.incidentDescription__c)}";
            var incResolution = "{!JSENCODE(incident.incidentResolution__c)}";
            
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="afterSavePanel">
        <script>
		var print_url=pageUrl[0]+'{!Incident.Id}'+'/p';
        var print_url_pdf='/apex/PrintObjectDetailPDF?id=' +'{!Incident.Id}';
        displayIncEle = {!OR(ISBLANK(TRIM(incidentName)),ISNULL(incidentName))};
		IncidentPageComp.ComponentVars.BaseElementName='{!JSENCODE(incident.FKBMC_BaseElement__r.name)}';
		IncidentPageComp.ComponentVars.serviceName='{!JSENCODE(incident.FKBusinessService__r.name)}';
        function getIncidentID(){
            return '{!Incident.Id}';
        }
        function handleSave(){
               var id = "{!incident.id}";
            window.parent.handleSave(wid, id);
        }
        function renderAddNoteAfterClose(){
             var elem = document.getElementById('{!$Component.incidentForm.incident_incidentNote__c}');
             var elemduration = document.getElementById('{!$Component.incidentForm.incident_incidentDuration__c}');
             renderAddNoteAfterClose_JS(elem,elemduration);
        }
        function renderAddNoteButton(){
            var elem = document.getElementById('{!$Component.incidentForm.incident_incidentNote__c}');
            var elemduration = document.getElementById('{!$Component.incidentForm.incident_incidentDuration__c}');
            var incidentState = "{!incident.BMCServiceDesk__state__c}";
            renderAddNoteButton_JS(elem,elemduration,incidentState);
        }   
        function renderIncidentNote(){
         renderIncidentNote_JS();   
       }    
       function disableAddNote() {
           var incidentNote = document.getElementById('{!$Component.incidentForm.incident_incidentNote__c}').value;
           var incidentDuration = document.getElementById('{!$Component.incidentForm.incident_incidentDuration__c}').value;
           disableAddNote_JS(incidentNote,incidentDuration);
       }
 
       function validateDuration(){
           var incidentDuration = document.getElementById('{!$Component.incidentForm.incident_incidentDuration__c}').value;
           validateDuration_JS(incidentDuration);
       }
       
       function enableAddNote(){
            enableAddNote_JS();
       }
       function getProblemId(){
        return '{!problem.Id}';
    }        
    function getProblemName(){
        return '{!problem.Name}';
    }  
    function getIncidentIDForPrb(){
            return '{!Incident.Id}';
        }
        function getChatterLimitErrorMessage(){
            return '{!chatterLimitErrorMessage}';
        } 
       function enableCustomAction(){
        	var instanceId = "{!incident.id}";
        	enableCustomActionJS(instanceId);
        }
        isServiceRequest = '{!JSENCODE(incident.ServiceRequest__c)}';
        function getSRDtitle(){
        	if (document.getElementById('SRM_RequestDefinition__c_id_servicerequesttitle__c') == null || document.getElementById('SRM_RequestDefinition__c_id_servicerequesttitle__c').value == '')
        		return false;
       		else
       			return true;
        }
		function clearKMIds(){
        KMIds = '';
        }
        disableSRDlookup();
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="checkUserAccessPanel">
        <script>
        function checkLoogedInUserHasAccess(){
            userHasAccesToInc = document.getElementById('{!$Component.incidentForm.checkIncidnetAccess}').value;
            if(userHasAccesToInc == 'false' && incidentId != '' && incidentId != null && incidentId != 'null'){
                window.parent.refreshList();
                window.parent.closeTab(wid);
            }
       }
       </script>    
    </apex:outputPanel>     
    <apex:outputPanel id="afterSavDelCloseReopen">
<script>
		savedone = {!quickclosedone};
        function getIsChildTempExist(){
            var isChildTempExist = '{!isChildTempExists}';
            return isChildTempExist;
        }               
</script>
</apex:outputPanel>
    <apex:outputPanel id="titlePanel">
        <script>
            isIncInactive= '{!incident.inactive__c}';
            incnState = {!incident.BMCServiceDesk__state__c};
            var incidentName='{!incident.name}';
           function getIncidentIDForSRD(){
	            return '{!Incident.Id}';
	        }  
            function resetSupportingInformation(isSave){
                var v1 = {!incident.BMCServiceDesk__state__c};
                var isDisplay = document.getElementById('SIIframeID').style.display;
                 var inactive = {!incident.inactive__c};
                if(!v1 || inactive){ 
                    if(isDisplay !='none'){
                            window.frames.SIIframeID.disableAll();
                    }
                }else{
                    if(isDisplay !='none'){
                            window.frames.SIIframeID.enableAll();
                    }
                }
            }
            
            function updateTitle(){
                var newTitle = '#'+'{!incident.name}'; 
               var StageHTML = '{!JSENCODE(StageHTML)}';
                if(StageHTML != null && StageHTML != '')
                	stageHTMLPrev = StageHTML;
                
                 if(newTitle == '#'){
                    newTitle = incidentHeader;
                }
                window.parent.changeTitle(wid,newTitle,newTitle);
                window.parent.addStageProgression(wid, stageHTMLPrev);
                
                window.parent.needsRefresh = true;

                var incidentState = "{!incident.BMCServiceDesk__state__c}";
                if(incidentState == 'false'){
                renderAddNoteAfterClose();    
            }
            	if(hideCustomFieldAccordion){
					document.getElementById('{!$Component.incidentForm.pbarId.CustomFieldspanelBar}').style.display = 'none';
				}   
            }
    
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="checkPriorityCalculationPanel">
        <script>
        function setCatData(id, name, catUrgency) {
            document.getElementById('{!$Component.incidentForm.Category__c_id_id}').value = id; 
            document.getElementById('{!$Component.incidentForm.Category__c_id_name}').value = name;
            document.getElementById('{!$Component.incidentForm.Category__c_id_fkurgency__c}').value = catUrgency;
            FetchUrgencyHTTP();
        }
        function FetchUrgencyHTTP() {
            var  catId ='';
        	if(document.getElementById('{!$Component.incidentForm.Category__c_id_id}')!=null && document.getElementById('{!$Component.incidentForm.Category__c_id_id}')!='')
        		catId = document.getElementById('{!$Component.incidentForm.Category__c_id_id}').value
        	
            var  clientId = document.getElementById('{!$Component.incidentForm.User_id_id}').value;
            if(clientId == '' || clientId == null){
            	clientId = document.getElementById('{!$Component.incidentForm.Contact_id_id}').value;
            }
            var  broadcastId = '{!incident.FKBroadcast__c}';
            //var catUrgency = document.getElementById('{!$Component.incidentForm.Category__c_id_fkurgency__c}').value;
            var clientUrgency = document.getElementById('{!$Component.incidentForm.User_id_fkurgency__c}').value;
            setIncidentForMenu();
            if( broadcastId == '' || broadcastId == null){
                	FetchUrgencyHTTPJS('{!JSENCODE(Incident.id)}', '{!$Component.incidentForm.Category__c_id_id}',
                        '{!$Component.incidentForm.User_id_id}', '{!$Component.incidentForm.pbarId.Incidentdetail.Impact__c_id_id}',
                        '{!BroadcastIDName}',
                        '{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_name}',
                        '{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_id}',
                        '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c_id_name}',
                        '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c_id_id}',
                        IncidentPageComp.ComponentVars.IsPriorityChanged,
                        '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c_id_name}',
                        '{!$Component.incidentForm.Contact_id_id}');
            }
            SetIncidentCategory(catId);            
        } 
        function FetchPriorityHTTP(){
            var impactId = document.getElementById('{!$Component.incidentForm.pbarId.Incidentdetail.Impact__c_id_id}').value;
            var urgencyId = document.getElementById('{!$Component.incidentForm.pbarId.Incidentdetail.Urgency__c_id_id}').value;
            if(impactId != null && impactId != '' && urgencyId != null && urgencyId != ''){
                FetchPriorityHTTPJS(impactId,
                urgencyId,
                '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c_id_name}',
                '{!$Component.incidentForm.pbarId.Incidentdetail.Priority__c_id_id}',
                IncidentPageComp.ComponentVars.IsPriorityChanged);
            }
        }   
        function setIsPriorityChanged(val) {
        	var prChangeVal = document.getElementById(IncidentPageComp.ComponentVars.IsPriorityChanged);
 			if(prChangeVal!=null) {
 				prChangeVal.value = val;
 			}
 		}
       </script>
    </apex:outputPanel>
    <apex:outputPanel id="panelId">
        <script>
        	incnState = {!incident.BMCServiceDesk__state__c};
            priorityChanged = '{!isPriorityChanged}';
            incidentId = '{!Incident.Id}';
            incidentClient = '{!JSENCODE(clientName)}';
            incidentCategory  = '{!JSENCODE(categoryName)}';  
            incidentCloseState = '{!closeState}';
            incidentReOpenState  = '{!reOpenState}'        
            incidentclientId = '{!JSENCODE(incident.FKClient__c)}';
            incidentCategoryId = "{!JSENCODE(incident.FKCategory__c)}";
            incAccountName = '{!JSENCODE(accountName)}';
            closeState = {!incident.BMCServiceDesk__state__c};
            cookieValue = Ext.util.Cookies.get(cookieName);
            objName = "{!JSENCODE(objName)}";
            iFrameSrc='/apex/SIContainerPage?oid='+incidentId+'&otype=Incident__c&wid='+wid+'&stateofIncident='+closeState+'&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isIncInactive;
            function getIncidentClient(){
               return incidentClient;
            }
            function getIncidentCategory(){
               return incidentCategory;
            }
            function getIncidentCloseState(){
               return incidentCloseState;
            }
            hasServiceTargets = {!HasServiceTargets};
			if(typeof(ChangeServiceTargetButtonState)!='undefined' && ChangeServiceTargetButtonState!=null) ChangeServiceTargetButtonState();
        </script>
        </apex:outputPanel>
    <apex:outputPanel id="errorId">
        <script>
           errormsg = '{!JSENCODE(messageString)}';
        </script>
        </apex:outputPanel>
        
      
   <script>
   		function DisplayMsg()
   		{
   			if((errormsg != null) && (errormsg != ''))
     			Ext.MessageBox.show({ msg: errormsg, buttons: Ext.MessageBox.OK});
   		}
        function openTab(){
            pageName = 'ProblemPage';
            var winId = getWID();
            var incId = getIncidentIDForPrb();
            var prbId = document.getElementById('{!$Component.incidentForm.pbarId.Incidentdetail.Problem__c_id_id}').value; 
            var prbName = document.getElementById('{!$Component.incidentForm.pbarId.Incidentdetail.Problem__c_id_name}').value;  
            
            var url;
			var modname = '{!JSENCODE($Label.Navigator_Incidents)}';
			var title = '{!JSENCODE($Label.Problem)}';
			var title1 = '{!JSENCODE($Label.Navigator_Problems)}';
			var pageTitle = '{!JSENCODE($Label.Problem)}';
		   	if(prbName != 'undefined')
				title =prbName;
			if(prbId != null && prbId != ''){
				url = pageName+escape('?id='+prbId+'&parentWid='+winId+'&moduleName=' + modname + '&incId='+incId+'&isPrbLink=true&columnField=name&direction=DESC');
				window.parent.parent.addNewTab(pageName,'{!JSENCODE($Label.Navigator_Problems)}', "NavigatorPage?title="+pageTitle+"&tabTitle="+title+"&target="+encodeURI(url));
			}else{ 
				url = pageName+escape('?parentWid='+winId+'&moduleName=' + modname + '&incId='+incId+'&isPrbLink=true&columnField=name&direction=DESC');
				window.parent.parent.parent.addNewTab(pageName, '{!JSENCODE($Label.Navigator_Problems)}', "NavigatorPage?title="+title1+"&target="+encodeURI(url));
			}
        }     
      function showInfoPopup(eventObject, divId , objName ){
        var recordId = '';
            var target=eventObject.target;
             if(target == null) 
                 target = eventObject.srcElement;
         
          
          if(objName == 'staff')
          {
                recordId = document.getElementById('{!$Component.incidentForm.staffHiddeninput}').value;
             tooltipstaff();
          }
        
          if(objName == 'staff' && recordId != ''){
          var tooltipforstaff = new Ext.ToolTip({
                  target: target.id,
                  title : '',
                  anchor: 'right',
                  width: 200,
                  trackMouse: false,
                  shadow :'sides',
                  bodyStyle:'font: 8pt Tahoma, Verdana, Arial; color:black;width:2%;border-color:black;',
                  dismissDelay: 15000,
                  html: document.getElementById(divId).innerHTML
               });    
            
            if (!Ext.isIE)
            {
              tooltipforstaff.show();
            }
        }    
     }
     function completeDelete(){
                if(errormsg == '{!JSENCODE($Label.InsufficentDeletePrivilege)}'){
                    showError();
                }else{
                    var modName = "{!JSENCODE($CurrentPage.parameters.moduleName)}";  
                    var parentWid = "{!JSENCODE($CurrentPage.parameters.parentWid)}";
                    if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined'){
                        window.parent.parent.refreshSupportingInformation(parentWid,modName);                       
                    }else{
                    updateTitle();
                    }
                    closeWindow();
                }
     }
     
     
        
      </script>

   <script>
  
    var stime = '{!serverstarttime}';
    var etime = '{!serverendtime}';
   
    
    var data = '';
    data += '{!JSENCODE($Label.PM_servertime)}';
    if(etime - stime == 0){
        data += 0;
    }

    function callOpenPopup(txtfieldId){ 
        var elemId = null;
        if(txtfieldId == 'User_id_lastname'){
            elemId = '{!$Component.incidentForm.User_id_lastname}';
        } else if(txtfieldId == 'User_id_firstname'){
            elemId = '{!$Component.incidentForm.User_id_firstname}';        
        } else if(txtfieldId == 'User_id_username'){
            elemId = '{!$Component.incidentForm.User_id_username}';     
        }
        var elem = document.getElementById(elemId);
        var txtToSearch = elem.value;
        var srdIdEle =  document.getElementById(IncidentPageComp.ComponentVars.reqDefinationID);
        var srdId = '';
       	if(srdIdEle != null){
       		srdId = srdIdEle.value;
        }
	    if(clientSearchPageFlag == 'true'){	    	
        	if(accountPopupFlag){      
        		selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value;  		
        		openPopupWithTitle('ClientSearchPage?str='+txtToSearch+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name&account='+selectedAccountId+'&srtempid='+srdId,setFieldsFromClientSearchPage,'{!JSENCODE($Label.SelectClients)}');
        	} else {
            	openPopupWithTitle('ClientSearchPage?str='+txtToSearch+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name&srtempid='+srdId,setFieldsFromClientSearchPage,'{!JSENCODE($Label.SelectClients)}');
            }           
        } else {
        	if(accountPopupFlag){    
        		selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value;  		
            	openPopup('SearchPage?popupId=Client&isLookup=true&accountId='+selectedAccountId+'&additional_columns=id,firstname,lastname,username&srtempid='+srdId,setClientRelatedFields);
            } else {
            		openPopup('SearchPage?popupId=Client&isLookup=true&additional_columns=id,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name&srtempid='+srdId,setClientRelatedFields);
            }
        } 
    }

    function taboutOpenPopup(objEle){
		if(taboutFlag != true){
			var srdIdEle =  document.getElementById(IncidentPageComp.ComponentVars.reqDefinationID);
	        var srdId = '';
	       	if(srdIdEle != null){
	       		srdId = srdIdEle.value;
	        }   
	        if(objEle.value != '' && !isAutocomplete && !popupInprogress) {
	            var objEleId = objEle.id;
	            if(objEleId.indexOf('lastname')>0){
	                if(objEle.value != lastName){
	                    popupInprogress = true;
	                    if(accountPopupFlag){  
			        		selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value;  		
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name&account='+selectedAccountId+'&srtempid='+srdId,setFieldsFromClientSearchPage,'{!JSENCODE($Label.SelectClients)}');
	                    } else {
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&srtempid='+srdId+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name',setFieldsFromClientSearchPage,'{!JSENCODE($Label.SelectClients)}');
	                    }  
	                }
	            }
	            if(objEleId.indexOf('username')>0){
	                if(objEle.value != userName){
	                    popupInprogress = true;
	                    if(accountPopupFlag){  
	                		selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value;  		
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&srtempid='+srdId+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name&account='+selectedAccountId,setFieldsFromClientSearchPage, '{!JSENCODE($Label.SelectClients)}');
	                    } else {
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&srtempid='+srdId+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name',setFieldsFromClientSearchPage, '{!JSENCODE($Label.SelectClients)}');
	                    }  
	                }
	            }
	            if(objEleId.indexOf('firstname')>0){
	                if(objEle.value != firstName){
	                    popupInprogress = true;
	                    if(accountPopupFlag){  
	                		selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value;  		
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&srtempid='+srdId+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name&account='+selectedAccountId,setFieldsFromClientSearchPage, '{!JSENCODE($Label.SelectClients)}');
	                    } else {
	                    	openPopupWithTitle('ClientSearchPage?str='+objEle.value+'&srtempid='+srdId+'&additional_columns=name,firstname,lastname,username,Account_ID__c,Account_Name__c,contact.accountid,contact.account.name,accountid,Account.name',setFieldsFromClientSearchPage, '{!JSENCODE($Label.SelectClients)}');
	                    }  
	                }
	            }
	        }
		}
    }

    function setElementValues(){
        popupInprogress = false;
        remoteCallFlag = false;
        //accountPopupFlag = false;
        firstName = document.getElementById('{!$Component.incidentForm.User_id_firstname}').value;    
        lastName = document.getElementById('{!$Component.incidentForm.User_id_lastname}').value;  
        userName = document.getElementById('{!$Component.incidentForm.User_id_username}').value;      
    }
    
    function setAccountNextOne(accountId,add_info){
    	selectedAccountId = accountId;
    	setAccountNext(accountId,add_info);
    }
    
</script>
    <apex:outputPanel id="formOuputPanel">
        <!-- Page body in this panel -->
        <apex:messages />  
      <script>
    //Form customization

function setReferenceFieldsId(){
     	<apex:repeat value="{!referenceFieldMap}" var="y">
                       var referenceFieldIdEle = document.getElementById('{!referenceFieldMap[y].idForId}');
                       var referenceFieldNameEle = document.getElementById('{!referenceFieldMap[y].idForName}');
                       if(referenceFieldIdEle!= null && typeof(referenceFieldIdEle) != 'undefined' && referenceFieldIdEle.value != null && referenceFieldIdEle.value != ''){
                                 	referenceFieldIdEle.nextSibling.nextSibling.previousSibling.value = referenceFieldIdEle.value;
                                 	referenceFieldNameEle.previousSibling.previousSibling.value = referenceFieldNameEle.value;
                        }
		</apex:repeat>
    }

        </script>
        <apex:form id="incidentForm" onsubmit="setReferenceFieldsId();">
 
<!--  IE7-8 Related Changes -->        
<div id="capsule" class="CapsuleDiv1">
        <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
        	<apex:actionRegion >
             <apex:actionFunction name="setAssignedTo" action="{!setAssignedTo}" rerender="varPanel,staffPanel,staffHiddeninput,staffInfobtn,staffPopupID" onComplete="checkEnable();"> 
                     <apex:param assignTo="{!savedId}" name="savedName" value=""/>
              </apex:actionFunction>
             </apex:actionRegion>
            <apex:actionFunction name="refreshFeed" action="{!doNothing}" reRender="allfeeds"></apex:actionFunction>         
            <apex:actionFunction name="shareStatusPost" action="{!shareTextFeedPost}" reRender="allfeeds">
                <apex:param name="newstatus" assignTo="{!newstatus}" value=""/>
            </apex:actionFunction> 
           <apex:actionFunction name="NewCommentValue" action="{!AddComment}" reRender="allfeeds">
                <apex:param name="newComment" assignTo="{!newComment}" value=""/>
                <apex:param name="feedId" assignTo="{!feedId}" value=""/>
            </apex:actionFunction> 
            <apex:actionFunction name="deleteComment" action="{!DeleteComment}" reRender="errorId,allfeeds" oncomplete="DisplayMsg();">
                <apex:param name="commentId" assignTo="{!commentId}" value=""/>
                <apex:param name="createdById" assignTo="{!createdById}" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="deletePost" action="{!DeletePost}" reRender="errorId,allfeeds" oncomplete="DisplayMsg();">
                <apex:param name="postId" assignTo="{!postId}" value=""/>
                <apex:param name="createdById" assignTo="{!createdById}" value=""/>
            </apex:actionFunction>
            <apex:actionFunction action="{!togglefollow}" name="followIncidentToggler" 
                reRender="checkIncidnetAccess,incident_timeSpent__c,openDateId,varPanel,incidentPanelId,titlePanel,afterSavePanel, validationComponent,panelId,errorId,CIDetailsPanel,staffPanel,Incident__c_id_duedatetime__c,staffPopupID,Priority__c__isPriorityChanged,allfeeds" 
                oncomplete="DisplayChatterLimitMessage();DisableCIExpBtn();checkEnable();afterSaveCloseAction();updateTitle();buttonValidator();justRerender();handleSave();ChangeCIExpBtnStatus();disabledatefield();disableclosedate();handleElemEvent();converdisabletoreadonly();UpdateDueDateFieldState();checkLoogedInUserHasAccess();refreshRelatedPortlets();resetSupportingInformation(false);">
            </apex:actionFunction> 
			 <apex:actionregion >           
           	<apex:actionFunction name="saveNote" action="{!saveNote}" rerender="apexMessageErrorPanel,validationComponent,panelId,errorId" oncomplete="assignApexErrorMessage();showError();renderIncidentNote();enableAddNote();afterAddNote();">
            		<apex:param name="incidentNote" assignTo="{!incNote}" value=""/>
            		<apex:param name="incDuration" assignTo="{!incDuration}" value=""/>
            	</apex:actionFunction>
            </apex:actionregion>      
            <apex:actionRegion >
            <apex:actionFunction action="{!setSelectedClientNext}" name="setClientNext"  
                rerender="User_id_fkurgency__c,User_id_id,Contact_id_id,Lead_id_id,Lead_id_controller,User_id_username,clientDetailsOutputPanel,Priority__c_id_name,clientPopupID,User_id_firstname,User_id_lastname, Urgency__c_id_name, Account_id_name, Account_id_id, panelId,CIDetailsPanel" oncomplete="DisableCIExpBtn();FetchUrgencyHTTP();setElementValues();converdisabletoreadonly();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
            </apex:actionFunction> 
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!setSelectedIncidentNext}" name="setIncidentNext" 
                    rerender="Status__c_id_name,Status__c_id_id,Status__c_id_stage__c,CustomFieldsOutputPanel,PanelbarOutputPanel,titlePanel,panelId,tablePanel,incidentDetailsPanel,afterSavePanel,varPanel,clientDetailsOutputPanel,CIDetailsPanel, BroadcastPanel,staffPanel,clientPopupID,staffPopupID" 
                    oncomplete="remoteCallFlag = false;DisableCIExpBtn();buttonValidator();checkEnable();updateTitle();resetSupportingInformation(false);handleSave();handleResetChange();handleElemEvent();converdisabletoreadonly();disableAddNote();setIncidentForMenu();renderSIComponent();disabledatefield();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
            </apex:actionFunction>
			</apex:actionRegion>
			<apex:actionRegion >			                          
             <apex:actionFunction action="{!setSelectedCloseIncidentNext}" name="setCloseIncidentNext" 
                    rerender="afterSavDelCloseReopen,Category__c_id_name,panelId,numberPanel,tablePanel,incidentDetailsPanel, clientDetailsOutputPanel,CIDetailsPanel, BroadcastPanel,staffPanel,varPanel,validationComponent,errorId,titlePanel,clientPopupID,staffPopupID" 
                    oncomplete="DisableCIExpBtn();reloadSI();buttonValidator();checkEnable();showError(); closedRelatedBroadcasts();updateTitle();resetSupportingInformation(false);handleResetChange();handleElemEvent();disableSRDlookup();disabledatefield();converdisabletoreadonly(); justRerender(); ">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!closeRelatedBroadcasts}" name="closeBroadcasts"  oncomplete="updateTitle();resetSupportingInformation(false);converdisabletoreadonly();refreshRelatedPortlets();refreshBroadcastReleatedPortlets()">
                <apex:param assignTo="{!checkedCloseBroadcast}" name="chekedCloseBroadcast" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!reopenRelatedBroadcasts}" name="reopenBroadcasts"  oncomplete="updateTitle();resetSupportingInformation(false);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets();refreshBroadcastReleatedPortlets()">
                <apex:param assignTo="{!checkedCloseBroadcast}" name="chekedreopenBroadcasts" value=""/>
            </apex:actionFunction> 
             </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!setBroadcastNext}" name="setBroadcastNext" reRender="tablePanel,incidentDetailsPanel,staffPanel,Status__c_id_name,Status__c_id_id,Status__c_id_stage__c" oncomplete="waitMsg.hide();disabledatefield();converdisabletoreadonly();">  
                <apex:param assignTo="{!savedId}" name="savedName" value=""/>
                <apex:param assignTo="{!clientLastName}" name="ln" value=""/>
                <apex:param assignTo="{!clientFirstName}" name="fn" value=""/>
                <apex:param assignTo="{!clientName}" name="cn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKClient__c}" name="cid" value=""/>
                <apex:param assignTo="{!accountName}" name="an" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKAccount__c}" name="aid" value=""/>
                <apex:param assignTo="{!reqDefnName}" name="rdn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKRequestDefinition__c}" name="rdid" value=""/>
                <apex:param assignTo="{!incident.incidentDescription__c}" name="descrption" value=""/>
                <apex:param assignTo="{!incident.incidentResolution__c}" name="resolution" value=""/>
                <apex:param assignTo="{!statusName}" name="sn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKStatus__c}" name="sid" value=""/>
                <apex:param assignTo="{!impactName}" name="iin" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKImpact__c}" name="iid" value=""/>
                <apex:param assignTo="{!urgencyName}" name="un" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKUrgency__c}" name="uid" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!setBroadcastNextFromTabout}" name="setBroadcastNextFromTabout" reRender="tablePanel,incidentDetailsPanel,staffPanel,Status__c_id_name,Status__c_id_id,Status__c_id_stage__c" oncomplete="waitMsg.hide();disabledatefield();checkSave();converdisabletoreadonly();">  
                <apex:param assignTo="{!savedId}" name="savedName" value=""/>
                <apex:param assignTo="{!clientLastName}" name="ln" value=""/>
                <apex:param assignTo="{!clientFirstName}" name="fn" value=""/>
                <apex:param assignTo="{!clientName}" name="cn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKClient__c}" name="cid" value=""/>
                <apex:param assignTo="{!accountName}" name="an" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKAccount__c}" name="aid" value=""/>
                <apex:param assignTo="{!reqDefnName}" name="rdn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKRequestDefinition__c}" name="rdid" value=""/>
                <apex:param assignTo="{!incident.incidentDescription__c}" name="descrption" value=""/>
                <apex:param assignTo="{!incident.incidentResolution__c}" name="resolution" value=""/>
                <apex:param assignTo="{!statusName}" name="sn" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKStatus__c}" name="sid" value=""/>
                <apex:param assignTo="{!impactName}" name="iin" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKImpact__c}" name="iid" value=""/>
                <apex:param assignTo="{!urgencyName}" name="un" value=""/>
                <apex:param assignTo="{!incident.BMCServiceDesk__FKUrgency__c}" name="uid" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!descriptionQuery}" name="setDescriptionNext" reRender="descResolutionPanel" oncomplete="refreshDesc();"> 
                <apex:param assignTo="{!savedId}" name="savedName" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!resolutionQuery}" name="setResolutionNext" reRender="descResolutionPanel" oncomplete="refreshResolution();"> 
               <apex:param assignTo="{!savedId}" name="savedName" value=""/>
           </apex:actionFunction>
           </apex:actionRegion>  
            <apex:actionRegion >
              <apex:actionFunction name="setIncidentPriority" action="{!setIncidentPriority}" rerender="Priority__c_id_name"> 
                     <apex:param assignTo="{!priorityStr}" name="priorityId" value=""/>
                     <apex:param assignTo="{!priorityNameStr}" name="priorityName" value=""/>
              </apex:actionFunction>
			</apex:actionRegion>
			<apex:actionRegion >
             <apex:actionFunction action="{!nextBtnHandler}" name="nextIncidentBtnHandler" oncomplete="remoteCallFlag = false;tooltipforreqdetail=null;ChangeCIExpBtnStatus();updateTitle();renderAddNoteButton();renderSIComponent();checkEnable();resetSupportingInformation(false);updateInactive();handleSave();handleResetChange();handleElemEvent();converdisabletoreadonly();reloadSupportInfo();"
                                    rerender="titlePanel,incidentDetailsPanel,incident_timeSpent__c,Account_id_name,inactivePanel,afterSavePanel, panelId,tablePanel, PanelbarOutputPanel, varPanel,CIDetailsPanel, staffPanel, User_id_lastname, User_id_firstname, User_id_username,clientPopupID,staffPopupID,CustomFieldsOutputPanel" > 
                    <apex:param assignTo="{!tempString}" name="idSetString" value=""/>          
            </apex:actionFunction>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!previousBtnHandler}" name="previousIncidentBtnHandler" oncomplete="remoteCallFlag = false;tooltipforreqdetail=null;ChangeCIExpBtnStatus();updateTitle();renderAddNoteButton();renderSIComponent();checkEnable();updateTitle();resetSupportingInformation(false); updateInactive();handleSave();handleResetChange();handleElemEvent();converdisabletoreadonly();reloadSupportInfo();"
                                    rerender="titlePanel,incidentDetailsPanel,incident_timeSpent__c,inactivePanel, panelId, tablePanel, PanelbarOutputPanel, afterSavePanel,varPanel,CIDetailsPanel, staffPanel, User_id_lastname,Account_id_name, User_id_firstname, User_id_username,clientPopupID,staffPopupID,CustomFieldsOutputPanel" > 
                                    <apex:param assignTo="{!tempString}" name="idSetString" value=""/>  
            </apex:actionFunction>
            </apex:actionRegion>
            
            <apex:actionFunction action="{!quickClose}" name="quickCloseIncidentNext"
                reRender="apexMessageErrorPanel,callCounter,afterSavDelCloseReopen,panelId,varPanel,Status__c_id_name,Status__c_id_stage__c,Status__c_id_id,validationComponent,errorId,titlePanel,CloseDateTime1,CloseDateTime2,CloseDateTime3,CloseDateTime4,CloseDateTime5,CloseDateTime6,CloseDateTime7,afterSavePanel,allfeeds,tablePanel,incidentDetailsPanel" 
                onComplete="if(savedone){renderAddNoteAfterClose();}assignApexErrorMessage();showError();buttonValidator();checkEnable();closedRelatedBroadcasts();updateTitle();resetSupportingInformation(false);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets(); justRerender();"/> 
            
			<apex:actionFunction action="{!reopenIncident}" name="reopenIncidentNext" 
                reRender="validationComponent,apexMessageErrorPanel,callCounter,varPanel,Status__c_id_id,Status__c_id_name,Status__c_id_stage__c,panelId,titlePanel,CloseDateTime1,CloseDateTime2,CloseDateTime3,CloseDateTime4,CloseDateTime5,CloseDateTime6,CloseDateTime7,afterSavePanel,afterSavDelCloseReopen, allfeeds,tablePanel,PanelbarOutputPanel" 
                onComplete="showError();assignApexErrorMessage();checkEnable();buttonValidator();reopenedRelatedBroadcasts();updateTitle();resetSupportingInformation(false);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets();justRerender();renderAddNoteButton();"/>
            <apex:actionFunction action="{!save}" name="saveIncident" 
                reRender="Account_id_name,Status__c_id_name,Status__c_id_stage__c,Status__c_id_id,callCounter,apexMessageErrorPanel,checkPriorityCalculationPanel,afterSavDelCloseReopen,titlePanel,checkIncidnetAccess,incident_timeSpent__c,openDateId,CloseDateTime1,CloseDateTime2,CloseDateTime3,CloseDateTime4,CloseDateTime5,CloseDateTime6,CloseDateTime7,varPanel,afterSavePanel, validationComponent,panelId,errorId,CIDetailsPanel,staffPanel,Incident__c_id_duedatetime__c,staffPopupID,Priority__c__isPriorityChanged,Priority__c_id_name,addNoteBtn,allfeeds,tablePanel,PanelbarOutputPanel,repeatId,reqDefnName" 
                oncomplete="waitMsg.hide();clearKMIds();enableCustomAction();assignApexErrorMessage();showError();isSaveCalled = false;refreshRelatedPortlets();updateTitle();checkEnable();disableSIMenu(); UpdateDueDateFieldState();buttonValidator();setIncidentForMenu();handleSave();handleElemEvent();converdisabletoreadonly();checkLoogedInUserHasAccess();hideEmptyAccordian();renderAddNoteButton();resetSupportingInformation(true);ChangeCIExpBtnStatus();siControlBack();convertUserCalledToInt();DisableCIExpBtn();updateInactiveForTemp();">
               <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/>
               <apex:param assignTo="{!ownerIdStr}" name="ownerName" value=""/>
			   <apex:param assignTo="{!KnowledgeIds}" name="KMIDs" value=""/>
			   <apex:param assignTo="{!staffIdStr}" name="staffIdStr" value=""/>
            </apex:actionFunction>
     
            <apex:actionFunction action="{!save}" name="saveBeforeCloseIncident" 
                reRender="Status__c_id_name,Status__c_id_id,Status__c_id_stage__c,checkIncidnetAccess,incident_timeSpent__c,openDateId,varPanel,incidentPanelId,titlePanel,afterSavePanel, validationComponent,incidentDetailsPanel,panelId,errorId,CIDetailsPanel,staffPanel,Incident__c_id_duedatetime__c,staffPopupID,Priority__c__isPriorityChanged, allfeeds" 
                oncomplete="DisableCIExpBtn();clearKMIds();checkEnable();afterSaveCloseAction();updateTitle();buttonValidator();justRerender();handleSave();ChangeCIExpBtnStatus();disabledatefield();disableclosedate();handleElemEvent();converdisabletoreadonly();checkLoogedInUserHasAccess();refreshRelatedPortlets();resetSupportingInformation(false);UpdateDueDateFieldState();">
               <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/>
			   <apex:param assignTo="{!KnowledgeIds}" name="KMIDs" value=""/>
            </apex:actionFunction>

              <apex:actionFunction name="justRerender" rerender="closeopId"/>
  
                 
        	<apex:actionFunction action="{!copyCommit}" name="copyCommit" 
                reRender="apexMessageErrorPanel,checkPriorityCalculationPanel,afterSavDelCloseReopen,titlePanel,checkIncidnetAccess,incident_timeSpent__c,openDateId,CloseDateTime1,CloseDateTime2,CloseDateTime3,CloseDateTime4,CloseDateTime5,CloseDateTime6,CloseDateTime7,varPanel,incidentPanelId,afterSavePanel, validationComponent,incidentDetailsPanel,panelId,errorId,CIDetailsPanel,staffPanel,Incident__c_id_duedatetime__c,staffPopupID,Priority__c__isPriorityChanged,Priority__c_id_name,addNoteBtn,allfeeds,tablePanel,PanelbarOutputPanel" 
                oncomplete="enableCustomAction();assignApexErrorMessage();refreshRelatedPortlets();updateTitle();checkEnable();disableSIMenu(); buttonValidator();setIncidentForMenu();handleSave();handleElemEvent();converdisabletoreadonly();checkLoogedInUserHasAccess();renderAddNoteButton();resetSupportingInformation(true);ChangeCIExpBtnStatus();siControlBack();UpdateDueDateFieldState();convertUserCalledToInt();" >        
               <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/>   
                 </apex:actionFunction>
            
            <apex:actionFunction action="{!newIncident}" name="newIncident" immediate="true" />
            <apex:actionRegion >
            <apex:actionFunction action="{!reset}" name="resetIncident" rerender="afterSavePanel,inactivePanel,tablePanel,PanelbarOutputPanel,staffPopupID,clientPopupID,CustomFieldsOutputPanel" oncomplete="DisableCIExpBtn();updateInactive();handleResetChange();handleElemEvent();converdisabletoreadonly();renderAddNoteButton(); resetSupportingInformation(false);"/>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!deleteIncident}" name="deleteIncidentNext" rerender="afterSavDelCloseReopen,errorId,validationComponent" oncomplete="refreshRelatedPortlets();completeDelete();"/>
            </apex:actionRegion>
            <!--  apex:actionFunction action="{!copyIncident}" name="copyIncidentNext" rerender="numberPanel"/--> 
            
      		<apex:actionRegion >
            <apex:actionFunction action="{!myselfBtnHandler}" name="myselfBtnHandler" rerender="firstName, profileName" oncomplete="converdisabletoreadonly();refreshRelatedPortlets()"/>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!callCounterBtnHandler}" name="callCounterBtnHandler"  rerender="callCounter" oncomplete="convertUserCalledToInt();"/>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction action="{!respondedBtnHandler}" name="respondedBtnHandler" rerender="dummypanel,respondedTime1,respondedTime2,respondedTime3,respondedTime4,respondedTime5,respondedTime6,respondedTime7"/>
            </apex:actionRegion>
            <apex:actionRegion >
            <apex:actionFunction name="FetchUrgencyDetails" action="{!FetchUrgency}" rerender="checkPriorityCalculationPanel,Impact__c_id_id,Urgency__c_id_id,Urgency__c_id_name,clientPopupID" oncomplete="converdisabletoreadonly();">
                     <apex:param assignTo="{!incident.BMCServiceDesk__FKClient__c}" name="savedName" value=""/>
            </apex:actionFunction>
            </apex:actionRegion>
           <apex:actionRegion >
           <apex:actionFunction name="fetchIncidentTemplates" action="{!fetchIncidentTemplates}"  
                                    rerender="repeatId" oncomplete="renderAddNoteButton();DisableCIExpBtn();converdisabletoreadonly();updateInactiveForTemp();" > 
                             <apex:param assignTo="{!templateId}" name="savedName" value=""/>
            </apex:actionFunction> 
			</apex:actionRegion>
			<apex:actionRegion >
        <apex:actionFunction action="{!setSelectedCINext}" name="setCINext" reRender="CIDetailsPanel" oncomplete="EnableAdditionalCILink();DisableCIExpBtn();converdisabletoreadonly();">  
                    <apex:param assignTo="{!savedId}" name="savedName" value=""/>
        </apex:actionFunction>
        </apex:actionRegion>
        <apex:actionRegion >
       <!--  <apex:actionFunction action="{!setSelectedCIFromTabout}" name="setCIFromTabout" reRender="CIDetailsPanel" oncomplete="DisableCIExpBtn();converdisabletoreadonly();">  
                    <apex:param assignTo="{!savedId}" name="savedName" value=""/>
        </apex:actionFunction>-->
        </apex:actionRegion>
        
        <apex:actionRegion >
        <apex:actionFunction action="{!setSRD}" name="setSelectedSRD" rerender="SRM_RequestDefinition__c_id_servicerequesttitle__c,SRM_RequestDefinition__c_id_id,Category__c_id_id,Category__c_id_name,bsName,bsId,soName,soId,reqDefinationID,reqDefnName" onComplete="tooltipforreqdetail=null;populateSRDrelatedValues();resetSRDtldVal();openSRDetailpopUp();disableRequestDetailBtn();">
			<apex:param name="srdId" value=""/>
		</apex:actionFunction>
		</apex:actionRegion>
		<apex:actionRegion >
		<apex:actionFunction action="{!poplateSRDvaluesTB}" name="poplateSRDvalues" rerender="SRM_RequestDefinition__c_id_servicerequesttitle__c,SRM_RequestDefinition__c_id_id,Category__c_id_id,Category__c_id_name,bsName,bsId,soName,soId,reqDefinationID,reqDefnName" onComplete="populateSRDrelatedValues();resetSRDtldVal();openSRDetailpopUp();disableRequestDetailBtn();">
			<apex:param name="srdtitle" value=""/>
		</apex:actionFunction>
		</apex:actionRegion>
		<apex:actionRegion >
		<apex:actionFunction action="{!setBusinessServiceNext}" name="setBusinessService" reRender="bsName,bsId" oncomplete="DisableCIExpBtn();">
             <apex:param assignTo="{!savedId}" name="savedName" value=""/>
        </apex:actionFunction>
		</apex:actionRegion>
		<apex:actionRegion >
        <apex:actionFunction action="{!setSelectedServiceOffering}" name="setServiceOffering" rerender="bsName,bsId,soName,soId" oncomplete="populateBusinessService();">
			<apex:param name="offeringId" value="" />
		</apex:actionFunction>
		</apex:actionRegion>
		<apex:actionRegion >
		<apex:actionFunction action="{!setSelectedServiceOfferingTB}" name="setServiceOfferingTB" rerender="bsName,bsId,soName,soId" oncomplete="populateBusinessService();">
			<apex:param name="offeringName" value="" />
		</apex:actionFunction>
		<apex:actionFunction action="{!renderRequestDetails}" name="renderRequestDetails"   
           rerender="repeatId" oncomplete="renderAddNoteButton();DisableCIExpBtn();converdisabletoreadonly();updateInactiveForTemp();" >
           <apex:param name="requestDetailId" value=""/>
       </apex:actionFunction> 
		</apex:actionRegion>
		<apex:actionregion >
			<apex:actionFunction name="linkCIIncident" action="{!linkCIIncident}"
		        reRender="dummypanel">
		        <apex:param name="ciId" value="" />
		   </apex:actionFunction>
		</apex:actionregion>
        
            <apex:outputPanel id="dummypanel"> </apex:outputPanel>
            
            
            <!--  <apex:actionFunction action="{!deleteIncident}" name="deleteIncident" /> -->
            
            
            <table class="clsMainTableSI" cellspacing="0" cellpadding="0">
                <tr class="clsRowGreyBg">
                    <td>
                        <div id="btnToolbar"></div>
                        
                    </td>
                    
                </tr>
                <tr>
                    <td>
                    
                    <table class="clsTable" cellspacing="0" cellpadding="0">
                        <tr>
                            <td class="clsTopAlignment75">
                                 <apex:outputPanel id="tablePanel">                                
                            <table class="clsTable" cellspacing="0" cellpadding="0">
                                <tr>
                                     <td colspan="3"><div class="div15pxVspacing"/></td>

                                </tr>
                                <tr>
                            <td style="vertical-align: top;">
                              <table width="340" cellspacing="0" >
                                <tr>
                                    <td><apex:inputhidden id="checkIncidnetAccess" value="{!userHasAccessToInc}" /></td>
                                </tr>
                                <tr>
                                            <td class="clsInputLabelTD1"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__clientLastName__c.label}" /></td>
                                           <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__clientLastName__c.inlineHelpText}" id="User_id_lastname" value="{!clientLastName}" styleClass="clsInputTextBox" tabindex="500" 
                                                 onKeyUp="popupInprogress = false; findClients('sel3','autocompleteClientLNameDiv',this,event);" 
                                                 onblur="disableDiv('autocompleteClientLNameDiv');if(clientSearchPageFlag=='true'){ taboutOpenPopup(this); }else{ if(accountPopupFlag){ selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value; showData(event,FetchUrgencyHTTP,escape('IsActive=true and accountId=\''+selectedAccountId+'\''));} else {showData(event,FetchUrgencyHTTP,escape('IsActive = true'));}} "/>
                                                <div id='autocompleteClientLNameDiv' class="clsAutocompleteDiv">
                                                    <select id="sel3" class="clsAutocompleteSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteClientLNameDiv');" >
                                                    </select>
                                                </div>
                                                <script>lastName = document.getElementById('{!$Component.User_id_lastname}').value;</script>
                                            </td>
                                            <td class="lookupIconTD">
                                        <div class="lookUpIconDiv">
                                        <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" onclick="if(!inProgress) {callOpenPopup('User_id_lastname');}" />
                                        </div>
                                       </td>
                                        </tr>
                                        <tr>
                                            <td class="clsInputLabelTD1"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__clientFirstName__c.label}" /></td>
                                            <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__clientFirstName__c.inlineHelpText}" id="User_id_firstname" value="{!clientFirstName}" styleClass="clsInputTextBox" tabindex="502" 
                                                onKeyUp="popupInprogress = false; findClients('sel4','autocompleteClientFNameDiv',this,event);"  
                                                onblur="disableDiv('autocompleteClientFNameDiv');if(clientSearchPageFlag=='true'){ taboutOpenPopup(this); }else{ if(accountPopupFlag){ selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value; showData(event,FetchUrgencyHTTP,escape('IsActive=true and accountId=\''+selectedAccountId+'\''));} else {showData(event,FetchUrgencyHTTP,escape('IsActive = true'));}} "/>
                                                <div id='autocompleteClientFNameDiv' class="clsAutocompleteDiv">
                                                    <select id="sel4" class="clsAutocompleteSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteClientFNameDiv');" >
                                                    </select>
                                                </div>
                                                <script>firstName = document.getElementById('{!$Component.User_id_firstname}').value;</script>
                                            </td>
                                            <td class="lookupIconTD">
                                        <div class="lookUpIconDiv">
                                        <input type="button" class="lookupIconOn" id="firstnameLookup_Id" onclick="if(!inProgress) {callOpenPopup('User_id_firstname');}"  tabindex="503" />
                                        </div>
                                       </td>
                                        </tr>
                                <tr>
                                     <td class="clsInputLabelTD1"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKClient__c.label}" /><span class="clsRequiredBlack">&nbsp;*</span></td>
                                     <td class="clsInputTextBoxTD">
                                         <apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKClient__c.inlineHelpText}" value="{!clientName}" styleClass="clsInputTextBox"  id="User_id_username"  tabindex="504" 
                                         onKeyUp="popupInprogress = false; findClients('sel5','autocompleteClientUNameDiv',this,event);" 
                                         onblur="disableDiv('autocompleteClientUNameDiv');if(clientSearchPageFlag=='true'){ taboutOpenPopup(this); }else{ if(!accountPopupFlag){ showData(event,FetchUrgencyHTTP,escape('IsActive = true'),1);}else{ selectedAccountId = document.getElementById('{!$Component.incidentForm.Account_id_id}').value; showData(event,FetchUrgencyHTTP,escape('IsActive=true and accountId=\''+selectedAccountId+'\''));}} "/>
                                         <apex:inputhidden id="User_id_id" value="{!incident.BMCServiceDesk__FKClient__c}" />     
                                         <apex:inputhidden id="Contact_id_id" value="{!incident.BMCServiceDesk__FKContact__c}" />     
                                         <apex:inputhidden id="Lead_id_id" value="{!incident.BMCServiceDesk__FKLead__c}" /> 
                                         <apex:inputhidden id="Lead_id_controller" value="{!LeadId}" />     
                                         <apex:inputhidden id="User_id_fkurgency__c" value="{!clientUrgency}"/> 
										 <apex:inputhidden id="Client_Type_ID" value="{!incident.BMCServiceDesk__Client_Type__c}"/> 
                                                <div id='autocompleteClientUNameDiv' class="clsAutocompleteDiv">
                                                    <select id="sel5" class="clsAutocompleteSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteClientUNameDiv');" >
                                                    </select>
                                                </div>
                                                <script>userName = document.getElementById('{!$Component.User_id_username}').value;</script>
                                     </td>
                                     <td class="lookupIconTD">
                                      <div class="lookUpIconDiv" style="float:left;">
                                        <input type="button" class="lookupIconOn" id="clientIdLookup_Id" onclick="if(!inProgress) {callOpenPopup('User_id_username');}"   tabindex="505" />
                                      </div>
                                      <div class="infoBtnDiv">
                                        <button  type = "button" id="infoBtn" Class="bmcUserInfoPopup" style="background-color:#ffffff;" onmouseover="callClientTooltip(event);"/>
                                      </div> 
                                    </td>
                                        
                                    <script>
                                             var clientid=  '{!JSENCODE($CurrentPage.parameters.Userid)}';
                                             var mName=  '{!JSENCODE($CurrentPage.parameters.moduleName)}';
                                             if((clientid != null && clientid != '')|| (mName != null && mName !='' && mName=='Clients') ){
                                                document.getElementById('{!$Component.incidentForm.User_id_firstname}').className = 'clsIdInputTextBoxReadOnly';
                                                document.getElementById('{!$Component.incidentForm.User_id_lastname}').className='clsIdInputTextBoxReadOnly';
                                                document.getElementById('{!$Component.incidentForm.User_id_username}').className='clsIdInputTextBoxReadOnly';              
                                                document.getElementById('{!$Component.incidentForm.User_id_firstname}').disabled=true;
                                                document.getElementById('{!$Component.incidentForm.User_id_lastname}').disabled=true;
                                                document.getElementById('{!$Component.incidentForm.User_id_username}').disabled=true;
                                                if ('{!$Component.incidentForm.clientIdLookup_Id}'!='')
                                                document.getElementById('{!$Component.incidentForm.clientIdLookup_Id}').disabled=true;
                                                if ('{!$Component.incidentForm.firstnameLookup_Id}'!='')
                                                document.getElementById('{!$Component.incidentForm.firstnameLookup_Id}').disabled=true;
                                                if ('{!$Component.incidentForm.lastnameLookup_Id}'!='')
                                                document.getElementById('{!$Component.incidentForm.lastnameLookup_Id}').disabled=true;
                                              } 
                                    </script>
                                        
                                </tr>
                                <tr style="{!IF(hideAccount==true,'display:none','')}" >
                                    <td class="clsInputLabelTD1"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKAccount__c.label}" /></td>
                                    <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKAccount__c.inlineHelpText}" id="Account_id_name" value="{!accountName}" styleClass="clsInputTextBox" tabindex="506" 
                                    onblur="isAutocomplete = false; showData(event,'',escape('inactive__c = false'));"/>
                                    <apex:inputhidden id="Account_id_id" value="{!incident.BMCServiceDesk__FKAccount__c}" />
                                    </td>
                                    <td class="lookupIconTD">
                                        <div class="lookUpIconDiv">
                                           <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" onclick="if(!inProgress) {accountPopupFlag = true; openPopup('SearchPage?popupId=Organization&isLookup=true&additional_columns=id,name',setAccountNextOne);}" />
                                        </div>
                                     </td>
                                </tr> 
                                                               
                                <tr style="{!categoryShowStyle}">
                                    <td class="clsInputLabelTD1"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKCategory__c.label}" /><apex:outputLabel value=" *" styleClass="clsRequiredBlack" rendered="{!categoryRequired}"/> </td>
                                    <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKCategory__c.inlineHelpText}" id="Category__c_id_name" value="{!categoryName}" styleClass="clsInputTextBox" tabindex="507" 
                                                    onKeyUp="if (event.keyCode != 9) { findIt('sel2','autocompleteCategoryDiv',this,event) }" 
                                                        onblur="disableDiv('autocompleteCategoryDiv');showData(event,FetchUrgencyHTTP,escape('inactive__c = false and AvailableForIncidents__c = true'));"/>
                                        <div id='autocompleteCategoryDiv' class="clsAutocompleteDiv">
                                                <select id="sel2" class="clsAutocompleteSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteCategoryDiv');" >
                                            </select>
                                        </div>
                                    </td>
                                    <td class="lookupIconTD">
                                    <div class="lookUpIconDiv">
                                        <input type="button" id="categoryLookup" class="lookupIconOn" onclick="if(!inProgress) {if (!getSRDtitle()) {openPopup('CategorySearchPage?isLookup=true&isSD=true&popupId=incident&categoryview=incident',openCategoryLookup);} else {openPopup('CategorySearchPage?isLookup=true&isSD=true&popupId=incident&categoryview=SR',openCategoryLookup);}}" tabindex="508"  />
                                    </div>

<!--  IE7-8 Related Changes -->
                                    <apex:inputhidden value="{!incident.BMCServiceDesk__FKCategory__c}" id="Category__c_id_id" /><!-- id="incidentcategoryfk" />-->
                                        <apex:inputhidden id="Category__c_id_fkurgency__c" /> 
                                    </td>

                                </tr>
                             </table>
                             </td>
                             <td style="vertical-align: top">
                                
                                <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__dormantFieldsFS}" var="dormantFsVar">
                             <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].accessible}" >
							 <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'multipicklist'))}" >
                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'area'))}" >
                             <table  width="340"  cellspacing="0" cellpadding="0" style="margin-left:5px;" class="clsFieldSetMainFormTable" >
                                    <tr >
                                            <td class="clsFieldSetMainFormLabelTD">{!$ObjectType.Incident__c.fields[dormantFsVar].label}
                                            <apex:outputPanel rendered="{!fieldIsRequired[dormantFsVar]}">
                                            <span class="clsRequiredBlack">*</span>
                                            </apex:outputPanel></td>
                                            <td class="clsFieldSetMainFormTextBoxTD" >
                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'reference')}">
                                                         <apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[dormantFsVar].localname].value}"   style="display:none"/>
                                                    <input type="text"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].inlineHelpText}" value="{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}" onblur="fieldSetTabOut(this,event);"  class="clsInputTextBox" />
                                                    <input type="text"  value="{!incident[dormantFsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForId}" style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', '')}"/> 
                                                    <apex:inputText value="{!incident[dormantFsVar]}"   id="referenceId" style="display:none"/>
                                                    <!-- <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="if(!inProgress) {openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[dormantFsVar].localname}','Incident__c'); return false;}" /> -->
                                                    <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[dormantFsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}');" />
                                                   <input type="button" class="lookupIconLaunchForm" id="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[dormantFsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')};"   onclick="if(!inProgress){openSRDetailpopUp(this);}" onmouseover="callRequestDetailTooltip(event);"/>  
						                                             		<script>
						                                             		var dorDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}').previousSibling.previousSibling.value;
						                                             		if(dorDetailEleValue  == "" || dorDetailEleValue == null)
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].referenceNameFieldSec]}";
						                                             		else
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}').value = dorDetailEleValue; 
						                                             		</script>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'reference'))}"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].inlineHelpText}">
                                                    <apex:inputField value="{!incident[dormantFsVar]}" rendered="{!NOT(readOnlyMap[dormantFsVar])}" styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type, 'boolean'), 'clsInputCheckBoxCustom', 'clsFieldSetMainFormTextBox')}" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[dormantFsVar].type}',event)"/>
													<input type="hidden" value="{!incident[dormantFsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[dormantFsVar].DependentPicklist}"/>

                                                    <apex:outputPanel rendered="{!readOnlyMap[dormantFsVar]}">
                                                            <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].localName, 'closeDateTime__c')}" id="CloseDateTime1" layout="block" styleClass="clsOutputPanelReadOnly">
																<table>
																	<tr><td>
																	<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate1" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.closeDate1}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																	</td></tr>
																</table>	
															</apex:outputPanel>
															<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].localName, 'respondedDateTime__c')}" id="respondedTime1" layout="block" styleClass="clsOutputPanelReadOnly">
																<table>
																	<tr><td>
																	<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime1" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.respondedDateTime1}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																	</td></tr>
																</table>	
															</apex:outputPanel>

                                                            <apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].localName, 'respondedDateTime__c')))}" layout="block" styleClass="clsOutputPanelReadOnly">
	                                                            <apex:inputField id="readOnlyDate1"  value="{!incident[dormantFsVar]}" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly"  />
	                                                           	    <script>
	                                                           	    var htmlElement1 = document.getElementById('{!$Component.readOnlyDate1}');
	                                                           	    if(htmlElement1 != null && typeof(htmlElement1) != 'undefined')
	                                                           	    	htmlElement1.disabled=true;</script>                                        
                                                                <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}numeric" type="hidden" value="{!incident[dormantFsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[dormantFsVar].type,'date')),"","none")}"  class="clsCustomInputFieldReadOnly" readonly="true" />
                                                                <apex:inputField value="{!incident[dormantFsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly" />                                                    
															</apex:outputPanel>

                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                    </td>
                                        </tr>           
                              </table>          
                             </apex:outputPanel>
                              <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'area')}">
                             <table width="340" cellspacing="0" cellpadding="0" style="margin-left:5px;" class="clsFieldSetMainFormTable">
                                <tr>
                                    <td class="clsInputBoldLabelTableFirstRowTD">{!$ObjectType.Incident__c.fields[dormantFsVar].label}
                                    <apex:outputPanel rendered="{!fieldIsRequired[dormantFsVar]}">
                                            <span class="clsRequiredBlack">*</span>
                                            </apex:outputPanel></td>
                                    <td colspan="2">&nbsp;</td>
                                </tr>
                                <tr>
                                    <td class="clsInputTextAreaTD clsRightPadTD" colspan="2" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].inlineHelpText}">
                                    <div class="clsRelativePosition">
                                        <input type="hidden" value="{!incident[dormantFsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[dormantFsVar].localname].idForName}" fieldType="Custom" styleClass="clsInputTextArea" />
                                        <apex:inputTextarea value="{!incident[dormantFsVar]}" styleClass="clsInputTextArea"  onBlur="validateMe(this,'{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type}');" id="dormantInputTextareaId"/>
                                    </div>
                                    </td>
                                      <td  style="vertical-align:top;padding-left:3px;" >
									  
                                        <input type="button" id="inputTxtAreaButton" class="TextboxPopupIcon" style="display:inline" onclick="viewTextEditor(this,'{!$ObjectType.Incident__c.fields[dormantFsVar].label}', '{!$ObjectType.Incident__c.fields[dormantFsVar].length}', '{!JSENCODE($Label.OK)}', '{!JSENCODE($Label.Cancel)}');"/>
										</td>
                                </tr>
                                </table> 
                             </apex:outputPanel>
							  </apex:outputPanel>
                             <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].type,'multipicklist'))}" >
                              <table  cellspacing="0" cellpadding="0" width="340" style="margin-left:5px;">
                                <tr>
                                    <td class="clsFieldSetMainFormLabelTD">{!$ObjectType.Incident__c.fields[dormantFsVar].label}</td>
                                  
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].inlineHelpText}">
                                     <apex:inputField value="{!incident[dormantFsVar]}" styleClass="multiPickListCls"/>
                                                   
                                    
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
							 		  <script>                                        
                                                                         if({!$ObjectType.BMCServiceDesk__Incident__c.fields[dormantFsVar].accessible}){
                                                                             isDormantSection = true;
                                                            }
                                                        </script>
                            </apex:outputPanel>
                            
                           </apex:repeat>
                                
                                

                                </td>
                             </tr>
                            </table>
                             <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__mainFormFS}" var="mainFormFsVar">
                             <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].accessible}" >
							 <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'multipicklist'))}" >
                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'area'))}" >
                             <table  width="350" cellspacing="0" cellpadding="0" class="clsFieldSetMainFormTable" >
                                                                         
										  <tr >
                                            <td class="clsFieldSetMainFormLabelTD1" >{!$ObjectType.Incident__c.fields[mainFormFsVar].label}
                                            <apex:outputPanel rendered="{!fieldIsRequired[mainFormFsVar]}">
                                             
                                            <span class="clsRequiredBlack">*</span>
                                            </apex:outputPanel></td>
              								<td class="clsFieldSetMainFormTextBoxTD1">
                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'reference')}" >
                                                    <apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[mainFormFsVar].localname].value}"   style="display:none"/>
													<input type="text"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].inlineHelpText}" value="{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}" onblur="fieldSetTabOut(this,event);"  class="clsInputTextBox" />
                                                    <input type="text"  value="{!incident[mainFormFsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForId}" style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', '')}"/> 
                                                    <apex:inputText value="{!incident[mainFormFsVar]}"   id="referenceId" style="display:none"/>
                                                    <!--<input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="if(!inProgress) {openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[mainFormFsVar].localname}','Incident__c'); return false;}" />  -->
                                                    <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[mainFormFsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}');" />
                                                     <input type="button" class="lookupIconLaunchForm" id="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[mainFormFsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')}"  onclick="if(!inProgress){openSRDetailpopUp(this);}" onmouseover="callRequestDetailTooltip(event);"/>  
                                            		<script>
                                            		var mfDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}').previousSibling.previousSibling.value;
                                            		if(mfDetailEleValue  == "" || mfDetailEleValue == null)
                                            			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].referenceNameFieldSec]}";
                                            		else
                                            			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}').value = mfDetailEleValue; 
                                            		</script>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'reference'))}" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].inlineHelpText}">
                                                    <apex:inputField value="{!incident[mainFormFsVar]}" rendered="{!NOT(readOnlyMap[mainFormFsVar])}" styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type, 'boolean'), 'clsInputCheckBoxCustom', 'clsFieldSetMainFormTextBox')}" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[mainFormFsVar].type}',event)" />
                                                   	<input type="hidden" value="{!incident[mainFormFsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[mainFormFsVar].DependentPicklist}" />
                                                   
                                                    <apex:outputPanel rendered="{!readOnlyMap[mainFormFsVar]}">
															
															<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].localName, 'closeDateTime__c')}" id="CloseDateTime2" layout="block" styleClass="clsOutputPanelReadOnly">
																
																	<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate2" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.closeDate2}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																		
															</apex:outputPanel>
															<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].localName, 'respondedDateTime__c')}" id="respondedTime2" layout="block" styleClass="clsOutputPanelReadOnly">
																<table>
																	<tr><td>
																	<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime2" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.respondedDateTime2}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																	</td></tr>
																</table>	
															</apex:outputPanel>


															<apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].localName, 'respondedDateTime__c')))}" layout="block"  styleClass="clsOutputPanelReadOnly" > 
																<apex:inputField value="{!incident[mainFormFsVar]}" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly"  id="readOnlyDate2" />
																 <script>
																 var htmlElement2 = document.getElementById('{!$Component.readOnlyDate2}');
	                                                           	    if(htmlElement2 != null && typeof(htmlElement2) != 'undefined')
	                                                           	    	htmlElement2.disabled='disabled';
	                                                           	    </script>                                                    	
                                                                <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}numeric" type="hidden" value="{!incident[mainFormFsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[mainFormFsVar].type,'date')),"","none")}"  class="clsCustomInputFieldReadOnly" readonly="true" />
                                                                <apex:inputField value="{!incident[mainFormFsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly"  />                                                    
                                                    		</apex:outputPanel>
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                            </td>
                                           
                                        </tr>           
                              </table>          
                             </apex:outputPanel>
                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'area')}">
                             <table width="100%" cellspacing="0" cellpadding="0" class="clsFieldSetMainFormTable">
                                <tr>
                                    <td class="clsInputBoldLabelTableFirstRowTD">{!$ObjectType.Incident__c.fields[mainFormFsVar].label}<apex:outputPanel rendered="{!NOT($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].Nillable)}">
                                            <span class="clsRequiredBlack">*</span>
                                            </apex:outputPanel></td>
                                    <td colspan="2">&nbsp;</td>
                                </tr>
                                <tr>
                                    <td class="clsInputTextAreaTD clsRightPadTD" colspan="2" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].inlineHelpText}">
                                    <div class="clsRelativePosition">
                                        
                                        <input type="hidden" value="{!incident[mainFormFsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[mainFormFsVar].localname].idForName}" fieldType="Custom" styleClass="clsInputTextArea" />
                                        <apex:inputTextarea value="{!incident[mainFormFsVar]}" styleClass="clsInputTextArea"  onBlur="validateMe(this,'{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type}');" id="inputTextareaId"/>
                                    </div>
                                    </td>
	                                    <td  style="vertical-align:top;padding-left:3px;" >
                                   
                                        <input type="button" id="inputTxtAreaButton" class="TextboxPopupIcon" style="display:inline" onclick="viewTextEditor(this,'{!$ObjectType.Incident__c.fields[mainFormFsVar].label}', '{!$ObjectType.Incident__c.fields[mainFormFsVar].length}', '{!JSENCODE($Label.OK)}', '{!JSENCODE($Label.Cancel)}');"/>
                                        
                                    </td>
                                </tr>
                                </table> 
                             </apex:outputPanel>
							 </apex:outputPanel>
                             <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].type,'multipicklist'))}" >
                              <table class="multiPickListClsTable" cellspacing="0" cellpadding="0" >
                                <tr>
                                    <td class="clsFieldSetMainFormLabelTD1">{!$ObjectType.Incident__c.fields[mainFormFsVar].label}</td>
                                    
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[mainFormFsVar].inlineHelpText}">
                                     <apex:inputField value="{!incident[mainFormFsVar]}" styleClass="multiPickListCls"/>
                                                   
                                    
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
                            </apex:outputPanel>
                           </apex:repeat>
                           <table class="clsTable" cellspacing="0" cellpadding="0">
                           <tr >
                                    <td class="clsInputBoldLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__note__c.label}" /></td>
                                    
                                </tr>
                                <tr>
                                    <td class="clsInputTextAreaTDNote">
                                    <table cellpadding="0px" cellspacing="0px" class="width100">
                                        <tr>
                                            <td colspan="2" class="clsRightPadTD">
                                                 <apex:inputTextarea title="{!$Label.bmcservicedesk__tooltipnote}" value="{!incNote}" styleClass="clsInputTextAreaNote" tabindex="510" id="incident_incidentNote__c"  onkeyup="renderAddNoteButton();"/>
                                            </td>
                                        </tr>
                                        <tr>
                                           <td class="addNoteBtnStyle1">
                                                <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__IncidentHistory__c.fields.BMCServiceDesk__duration__c.label}" styleClass="clsDurationLabel"/>
                                                <apex:inputText value="{!incDuration}" styleClass="clsDurationTextBox" id="incident_incidentDuration__c" title="{!$Label.bmcservicedesk__tooltipduration}" tabindex="511" onblur="validateDuration();" onfocus=""/><apex:outputLabel value="{!$Label.bmcservicedesk__hhmm}" styleClass="clsTimeLabel"/>
                                            </td>
                                            <td class="addNoteBtnStyle2" align="right" >
                                                <input type="button" value="{!$Label.Add}" style="width:auto;padding:4px;padding-top:2px;" class="AddButton" id="addNoteBtn" onclick="disableAddNote()" />                                                
                                            </td> 
                                        </tr>
                                    </table>
                                    </td>
                                    <td  style="vertical-align:top;padding-left:3px;" >                                   
                                        <input type="button" id="inputTxtAreaButton" class="TextboxPopupIcon" style="display:inline" onclick="showTextEditor('{!$Component.incidentForm.incident_incidentNote__c}','{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__note__c.label}', '32000', '{!JSENCODE($Label.OK)}', '{!JSENCODE($Label.Cancel)}',null,null,renderAddNoteButton);"/>                                        
                                    </td>
                                </tr>
                           </table>
                           </apex:outputPanel>
                        </td>
                        <td><div class="div17pxHspacing"/></td>
                        
                        <td class="clsTopAlignment25">
                            <div class="panelCapsule">
                            <apex:outputPanel id="PanelbarOutputPanel">
                            <apex:panelBar headerClass="clsRowBlueBgPanel" switchType="ajax" id="pbarId">
                                <apex:panelBarItem label="{!$Label.bmcservicedesk__details}" expanded="true" id="Incidentdetail" headerClass="panelHeader" contentClass="panelContent" >
								<div id="AccordionDiv"> 
                                 <apex:outputPanel id="incidentDetailsPanel">   
                                    <table class="clsTable" cellspacing="0" cellpadding="0" >
                                        <tr>                                            
                                            <td height = "15"></td>                                         
                                        </tr>
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKStatus__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD1" align="right">
                                                <apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKStatus__c.inlineHelpText}" id="Status__c_id_name" value="{!statusName}" styleClass="clsPanelInputTextbox" tabindex="511" onblur="isAutocomplete=false;showData(event,'',escape('inactive__c = false and appliesToIncident__c = true'));"/>
                                                <apex:inputHidden id="Status__c_id_id" value="{!incident.BMCServiceDesk__FKStatus__c}"/>
                                                <apex:inputHidden id="Status__c_id_stage__c" value="{!stageName}"/>
                                            </td>
                                            <td class="lookupIconPanelTD">
                                                  <div class="lookUpIconDiv">                                          
                                                      <input type="button" class="lookupIconOn" onclick="if(!inProgress) {openPopup('SearchPage?popupId=Status&isLookup=true&additional_columns=id,name,stage__c&filterClause='+escape('inactive__c = false and appliesToIncident__c = true'),setStatusField);}"  tabindex="512" />
                                                  </div>    
                                              </td>
                                        </tr>                                     
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKImpact__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD1" align="right">
                                                <apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKImpact__c.inlineHelpText}" id="Impact__c_id_name" value="{!impactName}" styleClass="clsPanelInputTextbox safariAutoComplete" tabindex="514" onKeyUp="findIt('sel','autocompleteImpactDiv',this,event)"  
                                                        onblur="disableDiv('autocompleteImpactDiv');showData(event,FetchPriorityHTTP,escape('inactive__c = false'));"/>
                                                
                                                <apex:inputhidden id="Impact__c_id_id" value="{!incident.BMCServiceDesk__FKImpact__c}"/>
                                                <div id='autocompleteImpactDiv' class="clsPanelAutocompleteDiv">
                                                    <select id="sel" class="clsPanelSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteImpactDiv');" >
                                                    </select>
                                                </div>
                                                
                                              
                                            </td>
                                            <td class="lookupIconPanelTD">
                                                  <div class="lookUpIconDiv"><input type="button" class="lookupIconOn" onclick="if(!inProgress) { openPopup('SearchPage?popupId=Impact&isLookup=true&additional_columns=id,name&filterClause='+escape('inactive__c = false'),openImpactLookup);}" tabindex="515" /></div>
                                             </td>
                                        </tr>
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKUrgency__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD1">
                                                <apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKUrgency__c.inlineHelpText}" id="Urgency__c_id_name" value="{!urgencyName}" styleClass="clsPanelInputTextbox safariAutoComplete" tabindex="516" onKeyUp="findIt('sel1','autocompleteUrgencyDiv',this,event)" 
                                                    onblur="disableDiv('autocompleteUrgencyDiv');showData(event,FetchPriorityHTTP,escape('inactive__c = false'),escape('urgencyflag'));"/>
                                                <apex:inputhidden id="Urgency__c_id_id" value="{!incident.BMCServiceDesk__FKUrgency__c}"/>
                                                <div id='autocompleteUrgencyDiv' class="clsPanelAutocompleteDiv">
                                                    <select id="sel1" class="clsPanelSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteUrgencyDiv');" >
                                                    </select>
                                                </div>
                                            </td>
                                            <td class="lookupIconPanelTD" >
                                                <div class="lookUpIconDiv">
                                                    <input type="button" class="lookupIconOn"  onclick="if(!inProgress) { openPopup('SearchPage?popupId=Urgency&isLookup=true&additional_columns=id,name&filterClause='+escape('inactive__c = false'),setUrgencyField); }" tabindex="517"  />                                                                                                 
                                                   </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKPriority__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD1"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Incident__c.fields.BMCServiceDesk__FKPriority__c.inlineHelpText}" tabindex="518" disabled="true" value="{!priorityName}"
                                                styleClass="clsPanelInputTextboxReadOnly" id="Priority__c_id_name" onfocus="this.blur();"/>
                                                <apex:inputhidden value="{!isPriorityChanged}" id="Priority__c__isPriorityChanged"/>
                                                <apex:inputhidden value="{!incident.BMCServiceDesk__FKPriority__c}" id="Priority__c_id_id"/>
                                                <apex:inputhidden value="{!dueDateCalculationOption}" id="dueDateCalculationOption"/>
                                            </td>
                                        </tr>
                                        <tr>
                                             <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.Name.label}" /></td>
                                             <td class="clsPanelInputTextboxTD1"><apex:inputText id="Problem__c_id_name" value="{!problem.name}" title="{!$Label.bmcservicedesk__tooltipincidentproblem}" styleClass="clsPanelInputTextboxReadOnly" tabindex="521" />
                                                                                 <apex:inputHidden id="Problem__c_id_id" value="{!problem.Id}"/>    
                                             </td>
                                             <td class="lookupIconPanelTD">
                                                  <div class="lookUpIconDiv"><input type="button" class="lookupIconLaunchForm" onclick="openTab();"  tabindex="522" />                                                   
                                                  </div>
                                             </td>
                                        </tr>
                                        
                                     </table>
                                        <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__detailsFS}" var="detailsFsVar">                                      
                          <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].accessible}" >
                          <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'multipicklist'))}" >
                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'area'))}" >
                              <table class="clsFieldSetAccordianTable">
                                    <tr >
                                            <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[detailsFsVar].label}
                                            <apex:outputPanel rendered="{!fieldIsRequired[detailsFsVar]}">
                                             <span class="clsRequiredBlack">*</span>
                                             </apex:outputPanel></td>
                                            <td class="clsFieldSetAccordianTextBoxTD" >
                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'reference')}">
                                                         <apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[detailsFsVar].localname].value}"   style="display:none"/>
                                                    <input type="text"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].inlineHelpText}" value="{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}" onblur="fieldSetTabOut(this,event);"  class="clsFieldSetAccordianTextBox" />
                                                    <input type="text"  value="{!incident[detailsFsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForId}" style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', '')}"/> 
                                                    <apex:inputText value="{!incident[detailsFsVar]}"   id="referenceId" style="display:none"/>
                                                    <!--  <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="if(!inProgress) {openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[detailsFsVar].localname}','Incident__c'); return false;}" /> -->
                                                    <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[detailsFsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}');" />
                                                    <input type="button" id="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[detailsFsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')}"  class="lookupIconLaunchForm" onclick="if(!inProgress){openSRDetailpopUp(this);}" onmouseover="callRequestDetailTooltip(event);"/>
						                                             		<script>
						                                             		var detailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}').previousSibling.previousSibling.value;
						                                             		if(detailEleValue == "" || detailEleValue  == null)
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].referenceNameFieldSec]}";
						                                             		else
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}').value = detailEleValue; 
						                                             		</script>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'reference'))}" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].inlineHelpText}">
                                                    <apex:inputField value="{!incident[detailsFsVar]}" rendered="{!NOT(readOnlyMap[detailsFsVar])}"  id="dueDateTime3" styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.Fields[detailsFsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox')}" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[detailsFsVar].type}',event)" />
                                                    <input type="hidden" value="{!incident[detailsFsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[detailsFsVar].DependentPicklist}" />
                                                    <script>
                                                        if ({!CONTAINS($ObjectType.Incident__c.Fields[detailsFsVar].localname, 'dueDateTime__c')})
                                                        {
                                                            dueDateElement = document.getElementById('{!$Component.dueDateTime3}'); 
                                                            if(dueDateElement != null && dueDateElement != 'undefined')
                                                                {
                                                                    UpdateDueDateFieldStateWithArgs({!HasValidServiceTargets});
                                                                    
                                                                }
                                                        }
                                                    </script>
                                                    <apex:outputPanel rendered="{!readOnlyMap[detailsFsVar]}">
                                                            
                                                            <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].localName, 'closeDateTime__c')}" layout="block" styleClass="clsAccordionOutputPanelReadOnly" id="CloseDateTime3">
																
																	<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate3" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.closeDate3}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>	
															</apex:outputPanel>
															<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].localName, 'respondedDateTime__c')}" id="respondedTime3" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																<table>
																	<tr><td>
																	<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime3" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																	<script>var dateField = document.getElementById('{!$Component.respondedDateTime3}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																	</td></tr>
																</table>	
															</apex:outputPanel>
                                                            
                                                            
	                                                        <apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].localName, 'respondedDateTime__c')))}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
															    <apex:inputField value="{!incident[detailsFsVar]}"  rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly" id="readOnlyDate3"/>                                                      
	                                                            <script>
	                                                            var htmlElement3 = document.getElementById('{!$Component.readOnlyDate3}');
	                                                           	if(htmlElement3 != null && typeof(htmlElement3) != 'undefined')
	                                                            	htmlElement3.disabled = true; </script>   
                                                                <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}numeric" type="hidden" value="{!incident[detailsFsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[detailsFsVar].type,'date')),"inline","none")}"  class="clsCustomInputFieldReadOnly" readonly="true" />
                                                              <apex:inputField value="{!incident[detailsFsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly" />                                                     
                                                    		</apex:outputPanel>
                                                            
                                                    
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                            </td>
                                            
                                  </tr>           
                                  </table>         
                             </apex:outputPanel>
                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'area')}">
                             <table class="clsFieldSetAccordianTable">
                                    <tr >
                                            <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[detailsFsVar].label}
                                            <apex:outputPanel rendered="{!fieldIsRequired[detailsFsVar]}">
                                             <span class="clsRequiredBlack">*</span>
                                             </apex:outputPanel></td>
                                            <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].inlineHelpText}" >
                                                <input type="hidden" value="{!incident[detailsFsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[detailsFsVar].localname].idForName}" fieldType="Custom" />
                                                <apex:inputTextarea value="{!incident[detailsFsVar]}" styleClass="clsFieldSetAccordianTexArea"  onBlur="validateMe();"/>
	        	                           </td>
                                           
                                </tr>
                                </table>
                             </apex:outputPanel>
                              </apex:outputPanel>
                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].type,'multipicklist'))}" >
                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
                                <tr>
                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Incident__c.fields[detailsFsVar].label}</td>
                                   
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[detailsFsVar].inlineHelpText}">
                                     <apex:inputField value="{!incident[detailsFsVar]}" styleClass="accordionMultiPickListCls"/>
                                                   
                                    
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
                        </apex:outputPanel>
                                       
                                        </apex:repeat>
                                       
                                    </apex:outputPanel>
								</div>
                                </apex:panelBarItem>
                                                                                    
                                <apex:panelBarItem label="{!$Label.bmcservicedesk__cidetails}" id="CIDetail" headerClass="panelHeader" contentClass="panelContent">
								<div id="AccordionDiv"> 
                                    <apex:outputPanel id="CIDetailsPanel">
                                                
                                       <div class="div15pxVspacing"/>
                                                          
                                         <apex:inputhidden value="{!BusinessServiceName}" id="bsName"/>
                                         <apex:inputhidden value="{!incident.BMCServiceDesk__FKBusinessService__c}" id="bsId"/>
                                         <apex:inputhidden value="{!incident.BMCServiceDesk__FKRequestDetail__c}" id="reqDetailID"/>
                                         <apex:inputhidden value="{!reqDefnName}" id="reqDefnName"/>
                                         <apex:inputhidden value="{!serviceOfferingName}" id="soName"/>
                                         <apex:inputhidden value="{!incident.BMCServiceDesk__FKServiceOffering__c}" id="soId"/>
                                         <apex:inputhidden value="{!incident.BMCServiceDesk__FKRequestDefinition__c}" id="reqDefinationID"/>
                                         <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__ciDetailsFS}" var="ciFsVar">
		                                        <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].accessible}" >
												  <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'multipicklist'))}" >
						                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'area'))}" >
                                                                    <table class="clsFieldSetAccordianTable">
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[ciFsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[ciFsVar]}">
                                                                   <span class="clsRequiredBlack">*</span>
                                                                   </apex:outputPanel></td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD" >
						                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'reference')}" >
						                                             		<apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[ciFsVar].localname].value}"   style="display:none"/>
                                                                            <input type="text"   title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].inlineHelpText}" value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[ciFsVar].localname].value}"  id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}"  name="{!$ObjectType.Incident__c.fields[ciFsVar].localname}"  onblur="fieldSetTabOut(this,event);"  class="clsFieldSetAccordianTextBox"  />
						                                                    <input type="text"  value="{!incident[ciFsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForId}"  style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', $ObjectType.Incident__c.fields[ciFsVar].localname+'_id')}"/> 
						                                                    <apex:inputText value="{!incident[ciFsVar]}"   id="referenceId" style="display:none"/>
						                                                    <!-- <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="if(!inProgress) {openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[ciFsVar].localname}','Incident__c'); return false;}" />  -->
						                                                    <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[ciFsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}');" />
						                                                    <input type="button" id="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[ciFsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')}"  class="lookupIconLaunchForm" onclick="if(!inProgress){openSRDetailpopUp(this);}"/>
						                                             		<script>
						                                             		var ciDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}').previousSibling.previousSibling.value;
						                                             		if(ciDetailEleValue == "" || ciDetailEleValue== null)
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].referenceNameFieldSec]}";
						                                             		else
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}').value = ciDetailEleValue; 
						                                             		</script>
						                                                </apex:outputPanel>
						                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'reference'))}"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].inlineHelpText}">
                                                                            <apex:inputField value="{!incident[ciFsVar]}" rendered="{!NOT(readOnlyMap[ciFsVar])}"  styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.Fields[ciFsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox')}" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[ciFsVar].type}',event)" />
						                                                    <input type="hidden" value="{!incident[ciFsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[ciFsVar].DependentPicklist}"/>
						                                                    <apex:outputPanel rendered="{!readOnlyMap[ciFsVar]}">
                                                                            	
                                                                            	<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].localName, 'closeDateTime__c')}" id="CloseDateTime5" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																					
																						<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate5" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																						<script>var dateField = document.getElementById('{!$Component.closeDate5}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																							
																				</apex:outputPanel>
																				<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].localName, 'respondedDateTime__c')}" id="respondedTime5" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																						<table>
																							<tr><td>
																							<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime5" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																							<script>var dateField = document.getElementById('{!$Component.respondedDateTime5}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																							</td></tr>
																						</table>	
																					</apex:outputPanel>        
                                                                                    
                                                                                <apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].localName, 'respondedDateTime__c')))}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																				    <apex:inputField value="{!incident[ciFsVar]}" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly" id="readOnlyDate5"/>
                                                                                    <script>
                                                                                    var htmlElement5 = document.getElementById('{!$Component.readOnlyDate5}');
                                                           	    					if(htmlElement5 != null && typeof(htmlElement5) != 'undefined')
                                                                                    	htmlElement5.disabled = true; </script>                                                        
                                                                                    <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}numeric" type="hidden" value="{!incident[ciFsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[ciFsVar].type,'date')),"","none")}"  class="clsCustomInputFieldReadOnly" readonly="true" />
                                                                                    <apex:inputField value="{!incident[ciFsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly"   />                                                    
						                                                    	</apex:outputPanel>
						                                                    	
						                                                    </apex:outputPanel>
						                                                </apex:outputPanel>
						                                            </td>
                                                                
						                                  </tr>           
                                                      </table>          
						                             </apex:outputPanel>
						                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'area')}">
                                                                   <table class="clsFieldSetAccordianTable">
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[ciFsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[ciFsVar]}">
                                                                   <span class="clsRequiredBlack">*</span>
                                                                   </apex:outputPanel></td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].inlineHelpText}" >
                                                                        <input type="hidden" value="{!incident[ciFsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[ciFsVar].localname].idForName}" fieldType="Custom" />
                                                                        <apex:inputTextarea value="{!incident[ciFsVar]}" styleClass="clsFieldSetAccordianTexArea"  onBlur="validateMe();"/>
							        	                           </td>
                                                                   
						                                </tr>
                                                        </table>
						                       </apex:outputPanel>
                                            </apex:outputPanel>
                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].type,'multipicklist'))}" >
                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
                                <tr>
                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Incident__c.fields[ciFsVar].label}</td>
                                   
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].inlineHelpText}">
                                     <apex:inputField value="{!incident[ciFsVar]}" styleClass="accordionMultiPickListCls"/>
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
	                        			</apex:outputPanel>
                                          <script>
                                        
                                            if({!$ObjectType.BMCServiceDesk__Incident__c.fields[ciFsVar].accessible}){
                                                hideCIAccordion = false;
                                            }
                                        </script>
                                        </apex:repeat>
                                 <div class="defaultFont clsPadding10 topAlignTD" style="display:none;" id="linkAddCiID"> <a id="linkAddCILink" href="JavaScript:void(0);" onclick="openPopup('SearchPage?popupId=BMC_BaseElement&amp;isLookup=true&amp;filterObjectId='+getUserID()+'&amp;isFilterObject=true&amp;parentName=Incident__c&amp;isRadioChecked=false&amp;accountId='+getAccountID()+'&amp;incidentId='+getIncidentID()+'&amp;incCiId='+getCIelemID()+'&amp;incServiceId='+getServiceElemID()+'&amp;selectedCIFilter='+LinkedToClient,linkCIIncidentJS);">{!JSENCODE($Label.LinkAdditionalCI)}</a></div>
                                    </apex:outputPanel> 
                                  </div>
                                </apex:panelBarItem>                            
<!-- Incident Chatter Feed Start -->
   <apex:panelBarItem onenter="loadChatterFeeds();" label="{!$Label.bmcservicedesk__incidentchatterfeed}" headerClass="panelHeader" contentClass="panelContent" rendered="{!IF(incidentFeed,true,false)}"  id="IncidentChatterFeedCustom">
    <div style="padding-left:10px;">                                   
    <apex:outputPanel id="chatterContent" layout="block">
    <apex:actionFunction name="showChatterFeeds" action="{!showChatterFeeds}" rerender="chatterContent" />
    <apex:outputPanel id="allfeeds" layout="block" styleClass="feedcontainer" rendered="{!renderChatterPanel}">
        <apex:outputPanel layout="block" styleClass="" id="feed" >
        <table>
            <tr><td height = "10"></td>
            </tr>
        </table>
        <div class="publishercontainer ChatterAccordionPublisherContainer">
            <div class="publisherrightcontainer">
                <div class="publishercontrols">
                     <apex:inputTextArea style="height: 0pt;" title="{!$Label.bmcservicedesk__tooltipchattershareincident}" styleclass="publishertextarea ChatterAccordionTextAreaDefaultStyle _NoHandleChange" onclick="javascript:setElHeight(this,'')" onblur="javascript:setElHeight(this,'{!newStatus}');" cols="1000" id="publishertextarea" value="{!newStatus}"></apex:inputTextArea>
                </div>
        
            </div>
            <table border="0" class="chattertable">
                <tr>
                    <td><apex:commandLink styleClass="RecordFollowUnfollowLink" value="{!FollowUnfollowLinkLabel}" onclick="followIncidentToggler(); return false;" /></td>
                    <td align="right"><apex:commandButton rerender="fullcomponentid" onclick="return shareTextPost(document.getElementById('{!$Component.publishertextarea}').value);" styleClass="btnShare"   value=" {!$Label.bmcservicedesk__share} "  title="{!$Label.bmcservicedesk__share}" /></td>
                </tr>
            </table>                     
        </div>
        
    <apex:repeat value="{!myfeed}" var="f"> 
                <apex:outputPanel layout="block" styleClass="feedcontainer cxfeeditem feeditem cxfeedcontainer feed ">
                    <apex:outputPanel layout="block" >
                    <div class="cxfeeditemcontent">
                                    <apex:outputText styleClass="ChatterAccordionCreatedBy" value="  {!f.feedItem.CreatedBy.Name}  " />
                            <apex:outputPanel styleClass="feeditemtext" rendered="{!IF(f.feedItem.Type == 'UserStatus', true, false)}">
                                <apex:outputText styleClass="ChatterAccordionFeedItem" value="{!f.displayText}" />
                            </apex:outputPanel>
                            <apex:outputPanel styleClass="feeditemtext" rendered="{!IF(f.feedItem.Type == 'TextPost', true, false)}">
                                <apex:outputText styleClass="ChatterAccordionFeedItem" value="{!f.displayText}" />
                            </apex:outputPanel>
                            <apex:outputPanel styleClass="feeditemtext" rendered="{!IF(f.feedItem.Type == 'TrackedChange', true, false)}">
                                <apex:outputText styleClass="ChatterAccordionFeedItemSmall" value=" {!f.displayText}" />
                            </apex:outputPanel>
                            <apex:outputPanel styleClass="feeditemtext" rendered="{!IF(f.feedItem.Type == 'LinkPost', true, false)}">
                                    <apex:outputText styleClass="ChatterAccordionFeedItem" value="  {!f.feedItem.CreatedBy.Name} " />
                                <apex:outputText styleClass="ChatterAccordionFeedItem" value="{!f.displayText}" />
                                <apex:outputPanel layout="block" styleClass="linkPostLinkContainer">
                                    <apex:outputLink value="{!f.feedItem.FeedPost.LinkUrl}" styleClass="linkPostLink" target="_blank">
                                        <apex:outputText styleClass="ChatterAccordionFeedItem" title="{!f.feedItem.FeedPost.LinkUrl}" value="{!f.feedItem.FeedPost.Title}" />
                                    </apex:outputLink>
                                </apex:outputPanel>
                            </apex:outputPanel>
                            <apex:outputPanel styleClass="feeditemtext" rendered="{!IF(f.feedItem.Type == 'ContentPost', true, false)}">
                                <apex:outputText styleClass="ChatterAccordionFeedItemTitle" value="  {!f.feedItem.CreatedBy.Name} " />
                                <apex:outputText styleClass="ChatterAccordionFeedItem" value="{!f.displayText}" />
                                <apex:outputPanel layout="block" styleClass="linkPostLinkContainer">
                                    <apex:outputText styleClass="ChatterAccordionFeedItemTitle"   value="{!f.feedItem.FeedPost.Title}" />
                                </apex:outputPanel>                                
                            </apex:outputPanel>
                        </div>
                        <div class="feeditemfooter">
                            <span class="cxfeeditemcontent">
                                <apex:outputText value="{!f.createdDate}  " styleClass="ChatterAccordionFeedItemSmall" >
                                </apex:outputText>
                                <apex:outputLink value="javascript:void(0);" onclick="setDisplay('{!f.feedItem.id}','block');">
                                    <apex:outputText styleClass="ChatterAccordionFeedItemActionLink"  value="  {!$Label.bmcservicedesk__comment}" />
                                </apex:outputLink>
                                    &nbsp;&nbsp;&nbsp;   
                                <apex:outputLink value="javascript:void(0);" onclick="deletePost('{!f.feedItem.FeedPostId}','{!JSENCODE(f.feedItem.CreatedById)}')" rendered="{!IF(f.feedItem.Type == 'TextPost' || f.feedItem.Type == 'LinkPost' || f.feedItem.Type == 'ContentPost', true, false)}">
                                    <apex:outputText styleClass="ChatterAccordionFeedItemActionLink" value="{!$Label.bmcservicedesk__delete}" />
                                </apex:outputLink>           
                                     
                            </span>  
                            <apex:actionRegion >
                              <div id="{!f.feedItem.id}" class="hidden feeditemcommenttext" style="padding-left:58px">
                                      
                                         <div class="cxfeeditemcontent" style="background-color:#EFF7FA; padding-top:2px">
                                               <apex:inputText styleClass="foobar cxnewcommenttext cxiswires _NoHandleChange" style="height: 20px; width:190px; padding-bottom:1px;"  value="{!currentComment}" title="{!$Label.bmcservicedesk__tooltipcomment}">
                                               </apex:inputText> <br/>
                                                <apex:outputLink value="javascript:void(0);" onclick="createNewComment(document.getElementById('{!f.feedItem.id}'),'{!f.feedItem.id}');">
                                                    <apex:outputText styleClass="ChatterAccordionFeedItemActionLink"  value="{!$Label.bmcservicedesk__addcomment}" />
                                                </apex:outputLink>   
                                                     
                                             <div class="feedclearfloat"></div>
                                         </div>
                             </div>
                            </apex:actionRegion>
                        </div>
                        <apex:outputPanel id="commPanel" layout="block" styleClass="feeditemextras">
                            <div class="cxcomments feeditemcomments">
                                <apex:repeat value="{!f.feedCommentBeanList}" var="c">
                                    <apex:outputPanel layout="block" styleClass="" style="padding-left:12px">
                                        <span class="feeditemcomment cxfeedcomment feeditemcommentbody">
                                            <span class="feedcommentuser">

                                                    <apex:outputText styleClass="ChatterAccordionFeedItemActionLink"   value="{!c.createdByName} " />
                                            </span>
                                            <span class="feedcommenttext">
                                                 <apex:outputText styleClass="ChatterAccordionFeedItemSmall" value="{!c.commentBody}" />
                                            </span>
                                            <span class="feedcommentfooter">
                                              <apex:outputText styleClass="ChatterAccordionFeedItemSmall feeditemtimestamp"  value="{!c.createdDate}">
                                               </apex:outputText>
                                            </span>
                                            <span class="feedresolutionfooter">
                                               <table border="0"><tr>
                                               <td valign="top">
                                               <apex:outputText value="  " />
                                                <apex:outputLink value="javascript:void(0);" onclick="deleteCommentFromFeed('{!JSENCODE(c.commentId)}','{!JSENCODE(c.CreatedById)}')" >
                                                    <apex:outputText styleClass="ChatterAccordionFeedItemSmall" value="{!$Label.bmcservicedesk__delete}" />
                                                </apex:outputLink>           
												</td><td>           
                                                &nbsp;&nbsp;&nbsp;<apex:outputText value="  " /> 
												</td><td valign="top"> 
                                                <apex:outputLink rendered="{!incident.BMCServiceDesk__state__c}"  value="javascript:void(0);" onclick="copyResolutionAndCloseIncident('{!JSENCODE(c.commentBody)}');" >
                                                    <apex:outputText styleClass="ChatterAccordionFeedItemSmall" value="{!$Label.bmcservicedesk__addresolutionclose}" />
                                                </apex:outputLink>                
											   </td>
											   </tr>                
                                               </table>
                                            </span> 
                                        </span>
                                    </apex:outputPanel>
                                </apex:repeat>
                            </div>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:outputPanel>
            </apex:repeat>
            <apex:outputLink value="javascript:void(0);" rendered="{!moreFeed}"  onclick="openNewTab('{!JSENCODE(incidentId)}', '{!JSENCODE(objectName)}');">
                <apex:outputText styleClass="ChatterAccordionFeedItemActionLink" value="  {!$Label.bmcservicedesk__more}" />
            </apex:outputLink>            
                                   </apex:outputPanel>
        <table class="clsTable" cellspacing="0" cellpadding="0">
        <tr>
            <td><apex:outputText styleClass="ChatterAccordionFeedLabel"  value="  {!$Label.bmcservicedesk__following}"/></td>        
        </tr>
        </table>                                    
                <apex:repeat value="{!userInfoList}" var="userInfo">
                    <apex:image id="theImage" value="{!userInfo.userImage}" title="{!userInfo.userName}" width="40" height="40" />&nbsp;
                </apex:repeat>
                                   </apex:outputPanel>
                         </apex:outputPanel>
    </div>                                             
                </apex:panelBarItem>
    <!-- Incident Chatter Feed End -->                             
                                <apex:panelBarItem label="{!$Label.bmcservicedesk__broadcastdetails}" id="broadcastDetails" headerClass="panelHeader" contentClass="panelContent">
								<div id="AccordionDiv"> 
                                <apex:outputPanel id="BroadcastPanel">
                                    <table class="clsTable" border="0" cellpadding="0" cellspacing="0">
                                    <tr>
                                        <td height="15"></td>
                                    </tr> 
									</table>
                                     <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__broadcastDetailsFS}" var="bdFsVar">
                                        <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].accessible}" >
                                         <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'multipicklist'))}" >
                                                     <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'area'))}" >
                                                     <table class="clsFieldSetAccordianTable">
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[bdFsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[bdFsVar]}">
                                                                      <span class="clsRequiredBlack">*</span>
                                                                    </apex:outputPanel></td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD">
						                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'reference')}">
                                                                            <apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[bdFsVar].localname].value}"   style="display:none"/>
                                                                            <input type="text"  title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].inlineHelpText}" value="{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}" onblur="fieldSetTabOut(this,event);"  class="clsFieldSetAccordianTextBox" />
						                                                    <input type="text"  value="{!incident[bdFsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForId}" style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', '')}"/> 
						                                                    <apex:inputText value="{!incident[bdFsVar]}"   id="referenceId" style="display:none"/>
                                                                            <!-- <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="if(!inProgress) {openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[bdFsVar].localname}','Incident__c','{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}'); return false;}" />  -->
                                                                            <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[bdFsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}');" />
                                                                            <input type="button" id="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[bdFsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')}"  class="lookupIconLaunchForm" onclick="if(!inProgress){openSRDetailpopUp(this);}" onmouseover="callRequestDetailTooltip(event);"/>
						                                             		<script>
						                                          			var bdDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}').previousSibling.previousSibling.value;
																			if('{!$ObjectType.Incident__c.Fields[bdFsVar].localname}' == 'FKBroadcast__c') {
																				broadcastFieldIdForName = '{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}';
																				broadcastFieldIdForId = '{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForId}';
																			}
						                                             		if(bdDetailEleValue == "" || bdDetailEleValue == null)
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].referenceNameFieldSec]}";
						                                             		else
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}').value = bdDetailEleValue; 
						                                             		</script>
						                                                </apex:outputPanel>
						                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'reference'))}" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].inlineHelpText}">
                                                                            <apex:inputField value="{!incident[bdFsVar]}" rendered="{!NOT(readOnlyMap[bdFsVar])}"  styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.Fields[bdFsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox')}"  onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[bdFsVar].type}',event)" />
						                                                    <input type="hidden" value="{!incident[bdFsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[bdFsVar].DependentPicklist}"/>
						                                                    <apex:outputPanel rendered="{!readOnlyMap[bdFsVar]}">
                                                                            	
                                                                            	<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].localName, 'closeDateTime__c')}" id="CloseDateTime6" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																					
																						<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate6" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																						<script>var dateField = document.getElementById('{!$Component.closeDate6}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>	
																				</apex:outputPanel>  
																				<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].localName, 'respondedDateTime__c')}" id="respondedTime6" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																						<table>
																							<tr><td>
																							<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime6" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																							<script>var dateField = document.getElementById('{!$Component.respondedDateTime6}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																							</td></tr>
																						</table>	
																					</apex:outputPanel>       
                                                                                    
                                                                                    
                                                                                <apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].localName, 'respondedDateTime__c')))}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																				    <apex:inputField value="{!incident[bdFsVar]}" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly" id="readOnlyDate6"/>
                                                                                    <script>
                                                                                    var htmlElement6 = document.getElementById('{!$Component.readOnlyDate6}');
                                                           	    					if(htmlElement6 != null && typeof(htmlElement6) != 'undefined')
                                                                                    	htmlElement6.disabled = true; </script>
                                                                                    	                                                        
                                                                                    <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}numeric" type="hidden" value="{!incident[bdFsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[bdFsVar].type,'date')),"","none")}"  class="clsCustomInputFieldReadOnly" readonly="true" />
                                                                                    <apex:inputField value="{!incident[bdFsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly"/>                                                    
						                                                    	</apex:outputPanel>
						                                                    
						                                                    </apex:outputPanel>
						                                                </apex:outputPanel>
						                                            </td>
                                                                   
                                                          </tr>  
                                                      </table>                                                        
                                                     </apex:outputPanel>
                                                     <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'area')}">
                                                     <table class="clsFieldSetAccordianTable">
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[bdFsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[bdFsVar]}">
                                                                      <span class="clsRequiredBlack">*</span>
                                                                    </apex:outputPanel>
                                                                    </td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].inlineHelpText}" >
                                                                        <input type="hidden" value="{!incident[bdFsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[bdFsVar].localname].idForName}" fieldType="Custom" />
                                                                        <apex:inputTextarea value="{!incident[bdFsVar]}" styleClass="clsFieldSetAccordianTexArea"  onBlur="validateMe();"/>
							        	                           </td>
                                                                   
						                                </tr>
														</table>
						                             </apex:outputPanel>
											   </apex:outputPanel>
                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].type,'multipicklist'))}" >
                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
                                <tr>
                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Incident__c.fields[bdFsVar].label}</td>
                                   
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].inlineHelpText}" >
                                     <apex:inputField value="{!incident[bdFsVar]}" styleClass="accordionMultiPickListCls"/>
                                                   
                                    
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
	                        			</apex:outputPanel>
                                          <script>
                                            if({!$ObjectType.BMCServiceDesk__Incident__c.fields[bdFsVar].accessible}){
                                                hideBroadcastAccordion = false;
                                            }
                                        </script>
                                        </apex:repeat>   
                                  
                               </apex:outputPanel>
							   </div>
                                </apex:panelBarItem>
                                <apex:panelBarItem label="{!$Label.bmcservicedesk__staffassignmentdetails}" headerClass="panelHeader staffAssignmentPanelHeader" id="staffAssignmentPanel" contentClass="panelContent">
                                    <script>
                                        var staffPanelBar = document.getElementById('{!$Component.staffAssignmentPanel}');
                                        var i=0;
                                        if(staffPanelBar.childNodes.length > 0){
                                            for(i=0; i<staffPanelBar.childNodes.length;i++){
                                                if(staffPanelBar.childNodes[i] != null)
                                                    if(staffPanelBar.childNodes[i].className.indexOf('staffAssignmentPanelHeader') > 0){
                                                        staffPanelBar.childNodes[i].title = '{!JSENCODE($Label.StaffAssignmentDetails)}';
                                                    }
                                            }                                           
                                        }
                                    </script>
                                    <apex:outputPanel id="staffPanel">                
                                    <apex:inputhidden id="incidentOwnerId" value="{!incident.OwnerId}" />
                                    <!-- Staff and Queue Assignment US -->
                                    <apex:inputhidden id="assignToOwnerId" value="{!assignToOwnerId}" />
                                                     
                                    <table class="clsTable" cellpadding="0" cellspacing="0">
                                                                <tr>
                                                                    <td colspan="3" class="viewMoreDtlsBg">
                                                                    <button  type ="button" id="staffInfobtn" Class="bmcUserInfoPopup" onmouseover="showInfoPopup(event,'staffPopupDiv','staff');"/></td>
                                                                </tr>
                                                                <tr>
                                                                    <td height="15"></td>
                                                                </tr> 
                                                                <tr>
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.FirstName.label}" /></td>
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_firstname}" id="staff_firstname"   value="{!user.firstName}" styleClass="clsPanelInputTextboxReadOnly" /></td>
                                                                    <td class="lookupIconPanelTD" >&nbsp;</td>
                                                                </tr>
                                                                <tr>
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.LastName.label}" /></td>
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_lastname}" id="staff_laststname" value="{!user.lastName}" styleClass="clsPanelInputTextboxReadOnly" /></td>
                                                                    <td class="lookupIconPanelTD" >&nbsp;</td>
                                                                </tr>
                                                                <tr> 
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.Profile.label}" /></td> 
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_profile}" id="staff_profilename" disabled="true" value="{!user.profile.Name}" styleClass="clsPanelInputTextboxReadOnly"/></td> 
                                                                    <td class="lookupIconPanelTD" >&nbsp;</td>
                                                                </tr>
                                                                <tr>
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Phone.label}" /></td>
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_phone}" id="staff_phone" value="{!user.phone}" styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                                                    <td class="lookupIconPanelTD" >&nbsp;</td>
                                                                </tr>
                                                                <tr>
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Extension.label}" /></td>
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_extension}" id="staff_extension" value="{!user.extension}"  styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                                                    <td class="lookupIconPanelTD" align="left">&nbsp;</td>
                                                                </tr>
                                                                <tr>
                                                                    <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$Label.bmcservicedesk__queue}" /></td>
                                                                    <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_queue}" id="staff_queue" value="{!queue}"  styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                                                    <td class="lookupIconPanelTD" align="left">&nbsp;</td>
                                                                </tr>
                                                            </table>
                                   </apex:outputPanel>
                                   <script>
                                    loggedInUserId = "{!loggedInUserId}";
                                    loggedInUserFirstName = "{!JSENCODE(loggedInUserFirstName)}";
                                    loggedInUserLastName = "{!JSENCODE(loggedInUserLastName)}";
                                    var ownerIdEle = document.getElementById('{!$Component.incidentForm.pbarId.staffAssignmentPanel.incidentOwnerId}');
                                    if(ownerIdEle != null && (ownerIdEle.value == null || ownerIdEle.value == '')){ownerIdEle.value = loggedInUserId;}
                                   </script>
                                </apex:panelBarItem>
                                <apex:panelBarItem id="CustomFieldspanelBar" label="{!$Label.bmcservicedesk__additionaldetailscustomtask}" headerClass="panelHeader" contentClass="panelContent">
								<div id="AccordionDiv"> 
                                    <table class="clsTable" border="0" cellpadding="0" cellspacing="0">
                                    <tr>
                                        <td height="15"></td>
                                    </tr> 
                                    </table>
                                     <script>var hideCustomFieldAccordion=true;</script>
                                      <apex:repeat value="{!$ObjectType.BMCServiceDesk__Incident__c.FieldSets.BMCServiceDesk__customFieldsFS}" var="fsVar">
                                               <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].accessible}" >
                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'multipicklist'))}" >
                                                     <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'area'))}" >
                                                                       <table class="clsFieldSetAccordianTable">  
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Incident__c.fields[fsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
                                                                      <span class="clsRequiredBlack">*</span>
                                                                    </apex:outputPanel></td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD" >
                                                                     <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'reference')}">
                                                                                 <apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Incident__c.Fields[fsVar].localname].value}"   style="display:none"/>
                                                                            <input title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].inlineHelpText}" type="text"  value="{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}" onblur="fieldSetTabOut(this,event);"  class="clsFieldSetAccordianTextBox" />
                                                                            <input type="text"  value="{!incident[fsVar]}" id="{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForId}" style="display:none" name="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].localname, 'FKRequestDefinition__c'), 'reqDefnIdEle', '')}"/> 
                                                                            <apex:inputText value="{!incident[fsVar]}"   id="referenceId" style="display:none"/>
                                                                            <!-- <input type="button" class="lookupIconOn" id="lastnameLookup_Id" tabindex="501" style="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].type, "reference"), 'display:inline', 'display:none')}" onclick="openLookupPopup(this,'{!$ObjectType.Incident__c.Fields[fsVar].localname}','Incident__c'); return false" />  -->
                                                                            <input type="button" class="lookupIconOn" id="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].localname, 'FKRequestDefinition__c'), 'reqDefLookupBtn', 'lastnameLookup_Id')}" style="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openPopUpFS(this,'{!$ObjectType.Incident__c.Fields[fsVar].localname}','{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}');" />
                                                                            <input type="button" id="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].localname, 'FKRequestDefinition__c'), 'reqDetailBtn', '')}" style="{!IF(contains($ObjectType.Incident__c.Fields[fsVar].localname, 'FKRequestDefinition__c'), '', 'display:none')}"  class="lookupIconLaunchForm" onclick="if(!inProgress){openSRDetailpopUp(this);}" onmouseover="callRequestDetailTooltip(event);"/>
						                                             		<script>
						                                             		var cfDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}').previousSibling.previousSibling.value;
						                                             		if(cfDetailEleValue == "" || cfDetailEleValue== "null")
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}').value = "{!incident[referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].referenceNameFieldSec]}";
						                                             		else
						                                             			document.getElementById('{!referenceFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}').value = cfDetailEleValue; 
						                                             		</script>
                                                                        </apex:outputPanel>
                                                                        <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'reference'))}" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].inlineHelpText}">
                                                                            <apex:inputField value="{!incident[fsVar]}" rendered="{!NOT(readOnlyMap[fsVar])}"  styleClass="{!IF(contains($ObjectType.BMCServiceDesk__Incident__c.Fields[fsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox')}" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Incident__c.Fields[fsVar].type}',event)" />
                                                                            <input type="hidden" value="{!incident[fsVar]}" id="{!allFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}"  fieldType="Custom" isDependent="{!$ObjectType.Incident__c.fields[fsVar].DependentPicklist}" />
                                                                            <apex:outputPanel rendered="{!readOnlyMap[fsVar]}">
                                                                            	
                                                                            	<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].localName, 'closeDateTime__c')}" id="CloseDateTime7" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																					
																						<apex:inputField value="{!incident.BMCServiceDesk__closeDateTime__c}" id="closeDate7" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																						<script>var dateField = document.getElementById('{!$Component.closeDate7}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>	
																				</apex:outputPanel> 
																				<apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].localName, 'respondedDateTime__c')}" id="respondedTime7" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																						<table>
																							<tr><td>
																							<apex:inputField value="{!incident.BMCServiceDesk__respondedDateTime__c}" id="respondedDateTime7" styleClass="clsCustomInputFieldReadOnly" onfocus="disableMe(this);" />
																							<script>var dateField = document.getElementById('{!$Component.respondedDateTime7}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true}</script>
																							</td></tr>
																						</table>	
																					</apex:outputPanel> 
																				       
                                                                                    
                                                                                <apex:outputPanel rendered="{!NOT(OR(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].localName, 'closeDateTime__c'),CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].localName, 'respondedDateTime__c')))}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
                                                                                    <apex:inputField value="{!incident[fsVar]}" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'date')}" styleClass="clsCustomInputFieldReadOnly" id="readOnlyDate7"/>
                                                                                    <script>var htmlElement7 = document.getElementById('{!$Component.readOnlyDate7}');
                                                           	    					if(htmlElement7 != null && typeof(htmlElement7) != 'undefined')
                                                                                    	htmlElement7.disabled = true; </script>                                                        
                                                                                    <input id="{!allFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}numeric" type="hidden" value="{!incident[fsVar]}"  style="display:{!IF(NOT(CONTAINS($ObjectType.Incident__c.fields[fsVar].type,'date')),"","none")}"  class="clsCustomInputFieldReadOnly" readonly="true"  />
                                                                                    <apex:inputField value="{!incident[fsVar]}" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'date'))}"   styleClass="clsCustomInputFieldReadOnly"  />                                                    
                                                                            	</apex:outputPanel>        
                                                                                
                                                                            </apex:outputPanel>
                                                                        </apex:outputPanel>
                                                                    </td>
                                                                   
                                                          </tr>           
                                                       </table>         
                                                     </apex:outputPanel>
                                                     <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'area')}">
                                                     <table class="clsFieldSetAccordianTable"> 
                                                            <tr >
                                                                    <td class="clsFieldSetAccordianLabelTD">{!$ObjectType.Incident__c.fields[fsVar].label}
                                                                    <apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
                                                                      <span class="clsRequiredBlack">*</span>
                                                                    </apex:outputPanel></td>
                                                                    <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].inlineHelpText}" >
                                                                        <input type="hidden" value="{!incident[fsVar]}" id="{!textAreaFieldMap[$ObjectType.Incident__c.Fields[fsVar].localname].idForName}" fieldType="Custom" />
                                                                        <apex:inputTextarea value="{!incident[fsVar]}" styleClass="clsFieldSetAccordianTexArea"  onBlur="validateMe();" />
                                                                   </td>
                                                                  
                                                        </tr>
                                                      </table>
                                                     </apex:outputPanel>
                                                     </apex:outputPanel>
                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].type,'multipicklist'))}" >
                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
                                <tr>
                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Incident__c.fields[fsVar].label}</td>
                                   
                                </tr>
                                <tr>
                                    <td   class="multiPickListClsTD" title="{!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].inlineHelpText}">
                                     <apex:inputField value="{!incident[fsVar]}" styleClass="accordionMultiPickListCls"/>
                                                   
                                    
                                    </td>
                                        
                                </tr>
                                </table> 
                             </apex:outputPanel>
                                        </apex:outputPanel>
                                         <script>
                                           
                                            if({!$ObjectType.BMCServiceDesk__Incident__c.fields[fsVar].accessible}){
                                              
                                                hideCustomFieldAccordion= false;
                                            }
                                        </script>
                                        </apex:repeat> 
									</div>
                               </apex:panelBarItem>                              
                            </apex:panelBar>
                             </apex:outputPanel>
                            </div>
                            </td>
                        </tr>
                    </table>
                    </td>
                </tr>

<!--  IE7-8 Related Changes -->
            </table>
            

         
<!--  IE7-8 Related Changes -->   
        <!--    <apex:outputPanel id="dummy"></apex:outputPanel>
            <c:TabOutComponent ></c:TabOutComponent> -->
 <!-- Code addded for Tool tip datoverflow bug -->
 
<!-- Addition over -->         
             <div style="display:none">
                 <apex:outputpanel id="clientPopupID">
                 <!-- Code updated by Himanshoo for tooltip -->
                     <div id="clientPopupDiv" >
                        <table cellspacing="0" cellpadding ="0">
                            <tr>
                                <td >
	                                <apex:inputHidden id="clientHiddeninput" value="{!incident.BMCServiceDesk__FKClient__c}"/>
									<apex:inputHidden id="leadHiddeninput" value="{!incident.BMCServiceDesk__FKLead__c}"/>
	                                <apex:inputHidden id="contactHiddeninput" value="{!incident.BMCServiceDesk__FKContact__c}"/>                                
                                </td>
                                <td >
                                    <table cellspacing="0" cellpadding ="0">
                                        <tr >
                                         <td style=" padding-top:3px; padding-left:4px; " class="clsInputBoldLabelTooltip1">
                                           <div id="clientNameforttdivId"></div>                                             
                                            </td>                                            
                                        </tr>
                                        
                                        <tr style="{!IF(clienttitle=='','display:none','')}">
                                        <td style=" padding-top:1px; padding-bottom: 4px; padding-left:4px;" class="clsInputLabelTooltipTitle1">
                                        <div id="clientTitleforttdivId"></div>                                       
                                        </td>
                                        </tr>
                                        

                                        <tr style="{!IF(clientaddress=='','display:none','')}">
                                        <td style="padding-left:4px; padding-top:1px;" class="clsInputLabelTooltip1">  
                                       <div id="clientAddressforttdivId">{!clientaddress}</div>
                                        </td>
                                        </tr>
                                        
                                        <tr style="{!IF(clientCity=='' && clientState =='' && clientpostalcode =='','display:none','')}"> 
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="clientCSZforttdivId"></div> </td>
                                        </tr>
                                        
                                        <tr style="{!IF(clientCountry=='','display:none','')}">
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="clientCountryforttdivId"></div></td>
                                        </tr>                                        
                                         <tr style="{!IF(clientPhone=='','display:none','')}">
                                         <td  style=" padding-top:5px; padding-left:4px;" class="clsInputLabelTooltip1">
                                         <div id="clientPhoneforttdivId"></div></td></tr>
                                         <tr style="{!IF(clientEmail=='','display:none','')}">
                                         <td style="padding-bottom: 5px; padding-top:1px; padding-left:4px;" class="clsInputLabelTooltip1">
                                         <div id="clientEmailforttdivId"></div>
                                           </td>
                                         </tr>                                                                                                                                               
                                    </table>
                                </td>
                            </tr>
                        </table>
                        </div> <div id = "loadtime"/>                                                 
                        <!-- Addition over -->
                   </apex:outputpanel>
                  
                  
                   <apex:outputpanel id="staffPopupID">
                       <div id="staffPopupDiv" >                           
                            <table  cellspacing="0" cellpadding ="0" >
                            <tr>
                                <td ><apex:inputHidden id="staffHiddeninput" value="{!user.Id}"/></td>
                                <td >
                                <table cellspacing="0" cellpadding ="0">
                                        <tr >
                                         <td style=" padding-top:3px; padding-left:4px; " class="clsInputBoldLabelTooltip1">                                        
                                         <div id="userNameforttdivId"></div> 
                                          </td>
                                        </tr>
                                        <tr style="{!IF(user.title=='','display:none','')}">
                                       
                                        <td style=" padding-top:1px; padding-bottom: 4px; padding-left:4px;" class="clsInputLabelTooltipTitle1">
                                       
                                        <div id="userTitleforttdivId"></div> 
                                        </td>
                                        </tr>
                                        <tr  style="{!IF(user.street=='','display:none','')}">
                                        <td style="padding-left:4px; padding-top:1px;" class="clsInputLabelTooltip1"> 
                                       
                                        <div id="userAddressforttdivId"> {!user.street} </div>  
                                       </td>
                                        </tr>
                                        
                                        <tr style=" {!IF(user.city =='' && user.state =='' && user.Postalcode =='','display:none','')}">
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userCSZforttdivId"></div></td>
                                                                               </tr>
                                        <tr style="{!IF(user.country=='','display:none','')}">
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userCountryforttdivId"></div> 
                                        </td>
                                        </tr>                                        
                                        <tr style=" {!IF(user.Phone=='','display:none','')}">
                                        <td  style=" padding-top:5px;  padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userPhoneforttdivId"></div> 
                                        </td>
                                        </tr>
                                        <tr style=" {!IF(user.email=='','display:none','')}">
                                        <td style="padding-bottom: 5px; padding-top: 1px; padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userEmailforttdivId"></div>
                                           </td>
                                         </tr>                                                                              
                                </table>
                                </td>
                            </tr>
                           </table>
                        
                        </div>
                        <script>
                          function tooltipstaff(){
                          	  strSingleLineText = document.getElementById('userAddressforttdivId').innerHTML.replace(new RegExp( "\\n", "g" ), ' ');
							  document.getElementById('userAddressforttdivId').innerHTML = ellipse(strSingleLineText,33);
							  document.getElementById('userNameforttdivId').innerHTML = ellipse('{!JSENCODE(user.Name)}',50);
							  document.getElementById('userTitleforttdivId').innerHTML = ellipse('{!JSENCODE(user.title)} ',40);
							  var cszstringuser = formCSZString('{!JSENCODE(user.city)}','{!JSENCODE(user.state)}','{!JSENCODE(user.Postalcode)}');
							  document.getElementById('userCSZforttdivId').innerHTML = cszstringuser ;
							  document.getElementById('userCountryforttdivId').innerHTML = ellipse('{!JSENCODE(user.country)}',33);
							  document.getElementById('userPhoneforttdivId').innerHTML = ellipse('{!JSENCODE(user.Phone)}',33);
							  document.getElementById('userEmailforttdivId').innerHTML = '<a href="{!JSENCODE(user.email)}" class="clsCmdLinkTooltip">'+ellipse('{!JSENCODE(user.email)}',33)+'</a>';
                          }
                        </script>
                        
                     </apex:outputpanel>
                     
                  </div>


</div>
   <apex:outputPanel id="repeatId">
        <script>ownerIdString=''; priorityString=''; taboutFlag=true; </script>
        <apex:repeat value="{!keyValues}" var="mapkeys"> 
             <script>
                keyName='{!mapkeys.key}';
                keyValue='{!JSENCODE(mapkeys.value)}';
                if(keyName=='incident_inactive__c'){
                    Ext.getCmp('incident_inactive__c').setValue(keyValue);
                }else if(keyName=='FKPriority'){
                    priorityString = keyValue;                  
                }else if(keyName=='FKPriorityName'){
                    priorityNameString = keyValue;                  
                }else if(keyName=='incident_OwnerId'){
                    ownerIdString = keyValue;
                }else if(keyName=='Group_id_id'){
                    ownerIdString = keyValue;
                }else if(keyName=='FKBroadcast__c'){
                    brdCastName = keyValue;
                }else if(keyName=='Broadcast__c_id_id'){
                    brdCastNameId = keyValue;
                }else{
                	if(keyName=='FKOpenBy__c'){
                		staffIdString = keyValue;
                	}
                    setTemplValForCustInc(keyName,keyValue); 
                }
             </script>
             
        </apex:repeat>    
        
            <script>taboutFlag=false;
            if(ownerIdString != null && ownerIdString != '' && ownerIdString != 'undefined'){
                setAssignedTo(ownerIdString);
            }
            if(priorityString != null && priorityString != '' && priorityString != 'undefined'){
                setIncidentPriority(priorityString,priorityNameString);
            }
            if(brdCastName != null && brdCastName != '' && brdCastName != 'undefined' ){
                document.getElementById(broadcastFieldIdForId).value =brdCastNameId ;
                document.getElementById(broadcastFieldIdForName).value = brdCastName;
                if(isSaveCalled == false)
					setBroadcastNextJS(brdCastNameId, null);
				else
					isSaveCalled = false;
            }
            
            </script>
    </apex:outputPanel>


<!--  IE7-8 Related Changes -->
                                    <div id="detailsDivSI">
                      <table  class="onDemandSITableCls" id="onDemandSITableId">
                          <tr>
                             <td id="noSIAvailTD">{!$Label.SIMessageForNewIncident}</td>
                          </tr>  
                          <tr >
                              <td id="linkSIAvailTD">
                                <table class="SICheckboxLinkInnerTable">
                                    <tr>
                                        <td id="configureSITD">
                                            <input type="checkbox" title="{!$Label.ShowSupportingInformation}" id="configureSIId" onClick="writeCookie();"/>&nbsp;{!$Label.SIMessageForConfiguration}
                                            
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <a id="getSIUrl" href="JavaScript:void(0);" onClick="SIComp('/apex/SIContainerPage?oid='+incidentId+'&otype=Incident__c&wid='+wid+'&stateofIncident='+closeState+'&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isIncInactive);" >{!$Label.SIMessageForExistingIncident}</a>
                                        </td>
                                    </tr>
                                </table>
                              
                              </td>
                          </tr>
                       </table>
                       <iframe name='SIIframeID' id='SIIframeID'  width='100%' height='100%' frameborder='0' style="display:none"/>
                        </div>
                           
          <apex:outputPanel id="dummy"></apex:outputPanel>
          <c:TabOutComponent ></c:TabOutComponent>
<!--  Ends IE7-8 Related Changes Taken div inside form-->
<script>
	taboutPageType = 'custom';
	function assignApexErrorMessage(){
			
				var elem = document.getElementById('apexMessageErrorPanelDiv');
        		if(elem != null && elem.firstChild != null){
        			var ulList = elem.firstChild;
        			var msgvalue = ulList.firstChild.innerHTML;
        			Ext.MessageBox.show({ msg: msgvalue, buttons: Ext.MessageBox.OK});
        		    isError=true;
        		}else{
        		  isError=false;
        		}
	}
</script>

<apex:outputPanel id="apexMessageErrorPanel" >
         <div id="apexMessageErrorPanelDiv" style="display:none;">
     		<apex:messages />
     	</div>
     </apex:outputPanel>
    </apex:form>
</apex:outputPanel>

<apex:outputPanel id="closeopId">
        <script>

        </script>
    </apex:outputPanel>  
<apex:outPutPanel id="srmDetails">
    <script>
		disableSRDlookup();
	</script>
</apex:outPutPanel>
    <script>
 renderAddNoteButton();
   customActionJsonString = {!customActionJsonString};
</script>
<script>
//document.getElementById('{!$Component.incidentForm.pbarId.Incidentdetail.Incident__c_id_duedatetime__c}').title = "{!$ObjectType.Incident__c.fields.dueDateTime__c.label}"; // form customization
soqlDateClause = '{!JSENCODE(filterClauseDate)}';
var endtime1 = '{!endtime}';
var etestdate = new Date();
var etesttime = etestdate.getTime();

servertime1 = (endtime1 - stime);

data +=servertime1;
data += '<br>';

    //time to calculate page rendertime 
    var pageloaddate = new Date();
    var renderingstartitme = pageloaddate.getTime();
</script>
<input type="hidden" id="dataval" name="dataval" value="qqqqqq"/>
<apex:outputPanel id="urlStringPanelId">
    <script>
    urlStringVar ="{!urlQueryString}" 
    </script>
    </apex:outputPanel> 
 <apex:outputPanel id="varPanel">
<script>
var isclosebroadcast;
		function isDueDateOverridenByServiceTarget(){
			return {!HasValidServiceTargets};
		}
		function getAssignMyselfState(){
		            return {!assignMyselfState};
		        }
		function getCloseState(){
            return {!closeState};
        }
		function getReOpenState(){
		            return {!reOpenState};
		        }
		function getRespondedState(){
		            return {!respondedState};
		        }
		function getHasRelatedBroadcasts(){
		            return {!hasRelatedBroadcasts};
		        } 
		 function getFlagForTemplate(){
		            return {!flagForTemplate};
		        }        
		function getSaveState(){
            return {!saveState};
        }
function closeIncident(){
		  var incIdTemp = '{!JSENCODE(incident.id)}';	
		  openPopupWithTitle('closeIncidentPage?incidentId=' + incIdTemp + '&isLookup=true&IncidentCat='+ incidentCategoryId,
			  setCloseIncidentNext, '{!JSENCODE($Label.CloseIncident)}', 462, 600);
	}
</script>
</apex:outputPanel>	
</apex:page>