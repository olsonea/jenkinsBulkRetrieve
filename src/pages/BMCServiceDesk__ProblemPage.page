<apex:page cache="true" showHeader="false" controller="BMCServiceDesk.ProblemController" contentType="{!problembean.contentTypeForIE}" standardStylesheets="false" extensions="BMCServiceDesk.JSRemoteActions">
    <c:CommonIncludes /> 
<style>
.clsAutocompleteDiv{
    *top: 100px !important;
    *left: 114px !important;
}
</style>
<script>
    windowloaddate = new Date();
    networklatencystart = windowloaddate.getTime();
    window.parent.needsRefresh = false;
</script>
    <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/ProblemPage.js" />
     <link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/ProblemPage.css" />
         <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/ProblemAutocomplete.js"/> 

<script>
	var closedStageVar  = '{!JSENCODE(problemBean.statusName)}';
	var automaticupdateduedate = {!recalculateDueDate};
	var labelTooltipProblemInactive = '{!JSENCODE($ObjectType.Problem__c.fields.inactive__c.label)}';
  var labelSavedSuccessfully = '{!JSENCODE($Label.SavedSuccessfully)}',
  	labelProblemMgmtProcess = '{!JSENCODE($Label.ProblemMgmtProcess)}',
	AlignabilityProcessModel = '{!JSENCODE($Label.AlignabilityProcessModel)}',
  	ProblemProcess = '{!JSENCODE($Label.ProblemProcess)}',
  	ClosedStage = '{!JSENCODE($Label.ClosedStage)}',
    labelCloseTask = '{!JSENCODE($Label.CloseTask)}',
    labelPM_netwokLatency = '{!JSENCODE($Label.PM_netwokLatency)}',
    labelTaskWindowHeaderSearchPage = '{!JSENCODE($Label.Task)}',
    labelCIExpCIExplorer = '{!JSENCODE($Label.CIExpCIExplorer)}',
    labelConfigurationItemsExplorer = '{!JSENCODE($Label.ConfigurationItemsExplorer)}',
    labelValidDateTime = '{!JSENCODE($Label.ValidDateTime)}',
    labelDelete = '{!JSENCODE($Label.Delete)}',
    labelDeleteTaskPage = '{!JSENCODE($Label.DeleteConfirmMessage)}',
    labelInactive = '{!JSENCODE($ObjectType.Problem__c.fields.Inactive__c.label)}',
    labelNew = '{!JSENCODE($Label.New)}',
    labelSave = '{!JSENCODE($Label.Save)}',
	labelOK = '{!JSENCODE($Label.OK)}',
    labelCopy = '{!JSENCODE($Label.Copy)}',
    labelReset = '{!JSENCODE($Label.Refresh)}',
    labelAssignTo = '{!JSENCODE($Label.AssignTo)}',
    labelIncidentsStaff = '{!JSENCODE($Label.IncidentsStaff)}',
    labelIncidentsSuggestedStaff = '{!JSENCODE($Label.IncidentsSuggestedStaff)}',
    labelIncidentMyself = '{!JSENCODE($Label.IncidentMyself)}',
    labelIncidentMemberofProfName = '{!JSENCODE($Label.IncidentMemberof)} {!userProfileName}',
    labelQueue = '{!JSENCODE($Label.Queue)}',
    labelActions = '{!JSENCODE($Label.Actions)}',
    labelIncidentClose = '{!JSENCODE($Label.Close)}',
    labelIncidentQuickClose = '{!JSENCODE($Label.IncidentQuickClose)}',
    labelReopenProblem = '{!JSENCODE($Label.ReopenProblem)}',
    labelTemplate = '{!JSENCODE($Label.Template)}',
    labelEmailMessage = '{!JSENCODE($Label.Email)}',
    labelComposeEmailPageHeader = '{!JSENCODE($Label.ComposeEmailProblemPageHeader)}',
    labelLaunchCIExplorer = '{!JSENCODE($Label.LaunchCIExplorer)}',
    labelPreviousRecord = '{!JSENCODE($Label.PreviousRecord)}',
    labelNextRecord = '{!JSENCODE($Label.NextRecord)}',
    labelDragResizeClickCollapse = '{!JSENCODE($Label.DragResizeClickCollapse)}',
    labelClickToExpand = '{!JSENCODE($Label.ClickToExpand)}',
    labelMsgNoAccessPerm = '{!JSENCODE($Label.MsgNoAccessPerm)}',
    labelPM_PageLoad = '{!JSENCODE($Label.PM_PageLoad)}',
    labelSelectFrom = '{!JSENCODE($Label.SelectFrom)}',
    labelServiceTargets = '{!JSENCODE($Label.SLM_ServiceTargets)}',
    wid = '{!JSENCODE($CurrentPage.parameters.wid)}',
    DeletedRecord = '{!JSENCODE($Label.DeleteConfirmMessage)}',
     labelCancel = '{!JSENCODE($Label.cancel)}',
    labelRecordDeleted ='{!JSENCODE($Label.DeletedRecord)}', 
    Information = '{!JSENCODE($Label.Information)}',
    ProblemRequestHeader= '{!JSENCODE($Label.Problem)}',
    saveState = false,
    assignStaffState = false,
    assignSuggestedStaffState = false,
    assignMyselfState = false,
    assignSuggestedStaffState = false,
    templateFlag = false,
    islookup = '{!JSENCODE($CurrentPage.parameters.islookup)}',
    cookieName= 'ConfigureSI'+'{!problemBean.currentUserId}',
    cookieValue = Ext.util.Cookies.get(cookieName),
    problemId='',
    reOpenState = false,
    wid2 = '{!JSENCODE($CurrentPage.parameters.wid)}',
    labelDescription='{!$ObjectType.Problem__c.fields.Problem_Description__c.label}',
    labelResolution='{!$ObjectType.Problem__c.fields.Problem_Resolution__c.label}',
    labelWorkAround='{!$ObjectType.Problem__c.fields.Work_Around__c.label}';
    pageUrl= document.location.href.split('apex/');
    isErrorMsg=false;
    Ext.ns("ProblemPageComp");
            ProblemPageComp.ComponentVars= {
             ProblemForm: '{!$Component.problemForm}',
             ProblemFormDescription: '{!$Component.problemForm.problem_description_textArea}',
             ProblemFormResolution: '{!$Component.problemForm.problem_resolution_textArea}',
             ProblemFormWorkAround: '{!$Component.problemForm.work_around_textArea}',
             ProblemFormKnowError: '{!$Component.problemForm.knowErrorChkId}',
            ImpactIDName: '{!$Component.problemForm.pbarId.problemdetail.Impact__c_id_name}',
            UrgencyIDName: '{!$Component.problemForm.pbarId.problemdetail.Urgency__c_id_name}',
            problemForm: '{!$Component.problemForm}',
            UserLastName: '{!$Component.problemForm.User_id_lastname}',
            PerformancePanel: '{!$Component.problemForm.pbarId.PerformancepanelBar.PerformancePanel}',
            TestPanelID: '{!$Component.problemForm.testpanelId}',
            BaseElementIDName: '{!$Component.problemForm.pbarId.CIDetail.BMC_BaseElement__c_id_name__c}',
            CIExpButton: '{!$Component.problemForm.pbarId.CIDetail.CIExpBut}',
            CategoryIDName: '{!$Component.problemForm.Category__c_id_name}',
            UserID: '{!$Component.problemForm.User_id_id}',
            UserName: '{!$Component.problemForm.User_id_username}',
            CategoryID: '{!$Component.problemForm.Category__c_id_id}',
            CategoryFKUrgency: '{!$Component.problemForm.Category__c_id_fkurgency__c}',
            UrgencyIDName: '{!$Component.problemForm.pbarId.problemdetail.Urgency__c_id_name}',
            UrgencyID: '{!$Component.problemForm.pbarId.problemdetail.Urgency__c_id_id}',
            ImpactID: '{!$Component.problemForm.pbarId.problemdetail.Impact__c_id_id}',
            BroadcastIDName: '{!$Component.problemForm.pbarId.broadcastDetails.Broadcasts__c_id_name}',
            PBarItemIDCD: '{!$Component.pbarId.pbarItemIdCD}',
            
            closedByID: '{!$Component.problemForm.ClosedBy__c_id_id}',
			statusIdName: '{!$Component.problemForm.pbarId.problemdetail.Status__c_id_name}',
			closeDateID: '{!$Component.problemForm.pbarId.problemdetail.closeDateID}',
			updateStandDescId : '{!$Component.problemForm.updateStandardDescId}',
			updateStandResId : '{!$Component.problemForm.updateStandardResId}',
			isCloseTasksId : '{!$Component.problemForm.isCloseTasksId}',
			isCloseIncidentsId : '{!$Component.problemForm.isCloseIncidentsId}'
        } 
		Ext.ns("AddNoteComp");
			AddNoteComp.ComponentVars={
					Notes:'{!$Component.problemForm.problemNotes}',
					Duration: '{!$Component.problemForm.problemDuration}'
			}
		Ext.ns("AddNote");
			AddNote.Labels ={
				DurationError:'{!JSENCODE($Label.DurationError)}',
				Note: '{!JSENCODE($Label.Note)}',
				TextAreaOverflow:'{!JSENCODE($Label.TextAreaOverflow)}'
			}
            var data = '';
            var isAutocomplete = false;
            var orgNamespace = '{!orgNamespace}';  
            var selectId=0;
            var selectClientId=0;
            var iKeyCodeEvt;
            // Added for Autocomplete   
            var impactData = window.parent.parent.impactData;  
            var urgencyData = window.parent.parent.urgencyData;
            var categoryData = window.parent.parent.categoryData;
            var list= '[]';
            var catIdVal='{!$Component.problemForm.Category__c_id_name}';
            var impId='{!$Component.problemForm.pbarId.problemdetail.Impact__c_id_name}';
            var urgId='{!$Component.problemForm.pbarId.problemdetail.Urgency__c_id_name}';
            var selectIdForAutoCom;
            var divIdForAutoCom;
            var fieldForAutoCom;
            var eventFoeAutoCom;
            var clUname='{!$Component.problemForm.User_id_username}';
            var clFname='{!$Component.problemForm.User_id_firstname}';
            var clLname='{!$Component.problemForm.User_id_lastname}';
            var txtSize;
            var problemRecId;
            var isNewlyOpened = true;
            var isInactive= '{!problemBean.problemObj.inactive__c}';
            var prevCloseClosedById;
			var prevcloseResolution;
			var prevcloseCategoryId;
			var prevcloseStatusId;
			var prevcloseCloseDate;
            function getStaffHiddeninput(){
		        var staffHiddeninput = '{!$Component.problemForm.staffHiddeninput}';
		        return staffHiddeninput;
		    }
		    function getProfileID(){
	            return '{!$Profile.Id}';
	        }
            function getSDFStylesResPath(){
        var resPath = '{!$Resource.SDEFStyles}';
        return resPath;
    }
  var cilink_record = '{!cilink}';   
  	function isRecordDeleted(){
    	return {!isRecDeleted};
    }
  function getIsDirect(){
      return '{!JSENCODE($CurrentPage.parameters.isDirect)}';
  }
      function getIsChangeCreatable(){
            var isChangeCreatable = '{!problemBean.isChangeCreatable}';
            return isChangeCreatable;
        }
  
    function getWID(){
    	return '{!JSENCODE($CurrentPage.parameters.wid)}';
    }
    function getID(){
            return '{!JSENCODE($CurrentPage.parameters.id)}';
    }

  function closeProblem(){
	var windowHeight = Ext.isIE7 ? 410 : Ext.isIE8 ? 462: 462;
  	openPopupWithTitle('closeProblemPage?Id='+problemId+'&isLookup=true',null,'{!JSENCODE($Label.CloseProblem)}', windowHeight, 600);
  } 
  
  
  
 function refreshRelatedPortlets(){
                if(typeof(window.parent.parent.refreshActionItemsPortlet) == 'function')
                		window.parent.parent.refreshActionItemsPortlet('Action Items','PRB');
            }
  
function completeDelete(){
                if(errormsg == '{!JSENCODE($Label.InsufficentDeletePrivilege)}'){
                    showError();
                }else{
                    var modName = "{!JSENCODE($CurrentPage.parameters.moduleName)}";  
                    var parentWid = "{!JSENCODE($CurrentPage.parameters.parentWid)}";
                    if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined'){
                        window.parent.parent.refreshSupportingInformation(parentWid,modName);                       
                    }else{
                    updateTitle();
                    }
                    closeWindow();
                }
     }
function setCatData(id, name, catUrgency) {
            document.getElementById('{!$Component.problemForm.Category__c_id_name}').value = name;
            document.getElementById('{!$Component.problemForm.Category__c_id_id}').value = id;
            document.getElementById('{!$Component.problemForm.Category__c_id_fkurgency__c}').value = catUrgency;
            FetchUrgencyHTTP();
      }
      var taboutFlag=false;
function FetchUrgencyHTTP(){
        var  catId = document.getElementById('{!$Component.problemForm.Category__c_id_id}').value;
        var  clientId = '';
        var catUrgency = document.getElementById('{!$Component.problemForm.Category__c_id_fkurgency__c}').value;
        var clientUrgency = '';
        if(callFetchUrgencyHTTPJS(clientId, catId, clientUrgency, catUrgency)){
                FetchProblemUrgencyHTTPJS('{!JSENCODE(problemBean.problemObj.id)}', '{!$Component.problemForm.Category__c_id_id}',
                    null, '{!$Component.problemForm.pbarId.problemDetail.Impact__c_id_id}',
                    null,
                    '{!$Component.problemForm.pbarId.problemDetail.Urgency__c_id_name}',
                    '{!$Component.problemForm.pbarId.problemDetail.Urgency__c_id_id}',
                    '{!$Component.problemForm.pbarId.problemDetail.Priority__c_id_name}',
                    '{!$Component.problemForm.pbarId.problemDetail.varFKPriority}',
                    '{!$Component.problemForm.isPriorityChanged}',
                    '{!$Component.problemForm.priorityNameVal}');
        }   

}
window.onload = function(){
	   customActionJsonString = {!customActionJsonString};
}
function FetchPriorityHTTP(){
            var impactId = document.getElementById('{!$Component.problemForm.pbarId.problemDetail.Impact__c_id_id}').value;
            var urgencyId = document.getElementById('{!$Component.problemForm.pbarId.problemDetail.Urgency__c_id_id}').value;
            if(impactId != null && impactId != '' && urgencyId != null && urgencyId != ''){
                FetchProblemPriorityHTTPJS(impactId,
                urgencyId,
                '{!$Component.problemForm.pbarId.problemDetail.Priority__c_id_name}',
                '{!$Component.problemForm.pbarId.problemDetail.varFKPriority}',
                '{!$Component.problemForm.isPriorityChanged}',
                '{!$Component.problemForm.priorityNameVal}');
            }
        }
 function autoAssignToMyself(){};
var labelProblemDescription = '{!JSENCODE($ObjectType.Problem__c.fields.Problem_Description__c.label)}',
         labelProblemResolution = '{!JSENCODE($ObjectType.Problem__c.fields.Problem_Resolution__c.label)}',
         labelWorkAround = '{!JSENCODE($ObjectType.Problem__c.fields.Work_Around__c.label)}';
     var activeTextAreaId = ProblemPageComp.ComponentVars.ProblemFormDescription,
     	 activeBtnTitle = labelProblemDescription;
   
 
 function getIsPriorityChanged() {
 	var prChangeVal = document.getElementById('{!$Component.problemForm.isPriorityChanged}');
 	if(prChangeVal==null) {
 		return 'false';
 	}
 	return prChangeVal.value;
 }
 function setIsPriorityChanged(val) {
 	var prChangeVal = document.getElementById('{!$Component.problemForm.isPriorityChanged}');
 	if(prChangeVal!=null) {
 		prChangeVal.value = val;
 	}
 }
 
 function getDueDateFldVal() {
 	var dueDateOpt = document.getElementById('{!$Component.problemForm.pbarId:problemdetail:dueDateId}');
 	if(dueDateOpt!=null) {
 		return dueDateOpt.value;
 	}
 	else {
 		return '';
 	}
 }
 
 function isNewRecord() {
 	var recordId = document.getElementById('{!$Component.problemForm.isNewRec}');
 	if(recordId!=null)
 		return recordId.value;
 	return 'true'; 
 }
 
 function setDueDateOption(opt) {
 	var dueDateOpt = document.getElementById('{!$Component.problemForm.dueDateOpt}');
 	if(dueDateOpt!=null) {
 		dueDateOpt.value = opt;
 	}
 }
 
 
 function getProblemCloseState(){
     var problemCloseState ='{!problemBean.problemObj.State__c}';
     return problemCloseState;
 }
  function getModName(){
            return '{!JSENCODE($CurrentPage.parameters.moduleName)}';
        }

        function getParentWid(){
            return '{!JSENCODE($CurrentPage.parameters.parentWid)}';
        }
  function getIncidentId(){
      return '{!JSENCODE($CurrentPage.parameters.incId)}';
  }
  function getIsPrbLink(){
      return '{!JSENCODE($CurrentPage.parameters.isPrbLink)}';
  }

function refreshIncidentTab(){
    var modName = getModName();  
    var parentWid = getParentWid();

    if(getIsPrbLink()== 'true' && !isNewlyOpened){
    	if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined' && (errormsg==labelSavedSuccessfully || errormsg == '')){
	    	var prbName = getProblemName();
	    	var isShowError = window.parent.parent.refreshProblemOnIncident(parentWid,modName,problemId,prbName);
	    		if(isShowError == true) showError();
		}
    }
}
 function afterResetSI(){
            var modName = getModName();  
            var parentWid = getParentWid();
    if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined' && (errormsg==labelSavedSuccessfully || errormsg == '') && getIsPrbLink()!= 'true'){
                window.parent.parent.refreshSupportingInformation(parentWid,modName);
	}
}
 function DisplayMessage(){
	 if(getIsPrbLink()== 'true' && errormsg==labelSavedSuccessfully ){
	 	isNewlyOpened=false;	
	 }
	 if(getIsPrbLink()!= 'true'){
	 	showError();
	  }else if(getIsPrbLink()== 'true' && errormsg!=labelSavedSuccessfully && errormsg != ''){
	  	showError();
	  }

            }
            
  function hideWaitMsg() {
  	if(waitMsg!=null && waitMsg!='') {
  		waitMsg.hide();
  	}
  }
</script>
<apex:outputPanel id="problemStatePanel">
	<script>
	problemState = {!problemBean.problemObj.State__c};
	</script>
</apex:outputPanel>
<apex:outputPanel id="problemInactivePanel">
<script>
  function getproblemInactive(){
          var problemInactive = '{!problemBean.problemObj.Inactive__c}';
          return problemInactive;
      }
</script>
</apex:outputPanel>
<apex:outputPanel id="varPanel">
            <script>
      var probName = '{!problemBean.problemObj.Name}';
  function resetSupportingInformation(isSave){
  if(!isErrorMsg){
        var isDisplay = document.getElementById('SIIframeID').style.display;
         var inactive = {!problemBean.problemObj.inactive__c};
        if(isDisplay !='none'){
            if(!problemState || inactive){ 
                    window.frames.SIIframeID.disableAll();
              }else{
                    window.frames.SIIframeID.enableAll();
            }
           // window.frames.SIIframeID.setId('{!problemBean.problemObj.Id}',isSave); 
        }  
	refreshIncidentTab();
	}
 } 
</script>
 </apex:outputPanel>
<apex:outputPanel id="panelId">
<script>
 	objName = "{!JSENCODE(objName)}";
	function getIsCopySaved(){
       return '{!problemBean.isCopySaved}';
     }
	 function getProblemID(){
            return '{!problemBean.problemObj.Id}';
    }
    function getProblemName(){
		return '{!JSENCODE(problemBean.problemObj.Name)}';
	}    
   problemId =getProblemID();
   cookieValue = Ext.util.Cookies.get(cookieName);
   var iFrameSrc='/apex/SIContainerPage?oid='+problemId+'&otype=Problem__c&wid='+2+'&stateofIncident='+problemState+'&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isInactive+'&iserror='+isErrorMsg;
  </script>
</apex:outputPanel>
<apex:outputpanel id="addNotePanel">
 <script>
  
    function renderAddNoteAfterClose(){
        	 var elem = document.getElementById('{!$Component.problemForm.problemNotes}');
        	 var elemduration = document.getElementById('{!$Component.problemForm.problemDuration}');
			 renderAddNoteAfterClose_JS(elem,elemduration);
        }
    function renderSIComponent(){
     	if(cookieValue == true || cookieValue =='true')
     		SIComp('/apex/SIContainerPage?oid='+problemId+'&otype=Problem__c&wid='+2+'&stateofIncident='+problemState+'&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isInactive+'&iserror='+isErrorMsg);
     	else     
     		removeSI('/apex/SIContainerPage?oid='+problemId+'&otype=Problem__c&wid='+2+'&stateofIncident='+problemState + '&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isInactive+'&iserror='+isErrorMsg);
     
     }
        function renderAddNoteButton(){
        	var elem = document.getElementById('{!$Component.problemForm.problemNotes}');
        	var elemduration = document.getElementById('{!$Component.problemForm.problemDuration}');
            renderAddNoteButton_JS(elem,elemduration,problemState, problemRecId);
	    }   
        function renderProblemNote(){
         renderNote_JS();
	   }	
       function disableAddNote() {
           var problemNote = document.getElementById('{!$Component.problemForm.problemNotes}').value;
           var problemDuration = document.getElementById('{!$Component.problemForm.problemDuration}').value;
		   disableAddNote_JS(problemNote,problemDuration);
       }
 
       function validateDuration(){
           var problemDurationElem = document.getElementById('{!$Component.problemForm.problemDuration}');
           validateDuration_JS(problemDurationElem);
       }
 </script>
</apex:outputpanel>
	<apex:outputPanel id="titlePanel">
        <script>
        isInactive= '{!problemBean.problemObj.inactive__c}';
        var wid = '{!JSENCODE($CurrentPage.parameters.wid)}';
			function updateTitle(){
				var newTitle = '#{!problemBean.problemObj.Name}';
            var StageHTML = '{!problemBean.stageHTML}';
				if(newTitle == '#'){
			    	newTitle = '{!JSENCODE($Label.Problem)}';
				}

				window.parent.changeTitle(wid,newTitle,newTitle);
            window.parent.addStageProgression(wid, StageHTML);
            if(!problemState){
				renderAddNoteAfterClose();    
			} 
            
			}
		function updateInactive(){
          	Ext.getCmp('problem_inactive__c').setValue('{!problemBean.problemObj.inactive__c}');
			}
        </script>
        
        
    </apex:outputPanel>

<apex:outputPanel id="afterSaveId">
  <script>
  	   var problemIdCopy = '{!problemBean.problemObj.Id}';
	   print_url=pageUrl[0]+'{!problemBean.problemObj.id}'+'/p';
       print_url_pdf='/apex/PrintObjectDetailPDF?id=' +'{!problemBean.problemObj.id}';
  	   function enableCustomAction(){
	        	var instanceId= '{!problemBean.problemObj.Id}';
	        	enableCustomActionJS(instanceId);
	        }
  	   function handleSave(){
               var id = "{!problemBean.problemObj.Id}";
            window.parent.handleSave(wid, id);
        }
  	   
    function callCopyPage(){
		window.parent.addTab("ProblemPage?copyId=" + problemIdCopy,"ProblemPage","ProblemPage");
    }            
    </script>
</apex:outputPanel>

<apex:outputPanel id="errorId">
  <script>
       errormsg = '{!JSENCODE(problemBean.messageString)}';               
       if(errormsg != null && errormsg !='' && errormsg !=labelSavedSuccessfully)
	   isErrorMsg=true;
	  else
        isErrorMsg=false;               
    </script>
</apex:outputPanel>

<apex:outputPanel id="problemFormPanel">
    <script>
    updateFieldsOnSave('{!problemBean.problemObj.Name}');
    problemRecId = '{!problemBean.problemObj.id}';
    problemOwnerId = '{!problemBean.problemObj.OwnerId}';
    </script>
</apex:outputPanel>

<apex:outputPanel id="formOuputPanel">
<apex:form id="problemForm" >
       <apex:actionFunction action="{!setSelectedStatusNext}" name="setStatusNext" rerender="Status__c_id_name,Status__c_id_id" onComplete="autoAssignToMyself();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/> 
         </apex:actionFunction> 
        <apex:actionFunction action="{!setSelectedImpactNext}" name="openImpactLookup" rerender="Impact__c_id_name,Impact__c_id_id,Priority__c_id_name, varFKPriority,isPriorityChanged" onComplete="autoAssignToMyself();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/> 
        </apex:actionFunction> 
        <apex:actionFunction action="{!setSelectedBroadcastNext}" name="setBroadcastNext" rerender="Broadcasts__c_id_name,Broadcasts__c_id_id,Broadcasts__c_id_broadcastmessage__c" onComplete="autoAssignToMyself();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/> 
        </apex:actionFunction>
         <apex:actionFunction action="{!setSelectedUrgencytNext}" name="setUrgencyNext"  
                rerender="Impact__c_id_id,Urgency__c_id_id,Urgency__c_id_name,Priority__c_id_name, varFKPriority, isPriorityChanged" oncomplete="converdisabletoreadonly(); ">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
         </apex:actionFunction>
         <apex:actionFunction action="{!descriptionQuery}" name="setDescriptionNext" reRender="problem_description_textArea"> 
                <apex:param assignTo="{!savedId}" name="savedName" value=""/>
            </apex:actionFunction>
            <apex:actionFunction action="{!resolutionQuery}" name="setResolutionNext" reRender="problem_resolution_textArea"> 
                <apex:param assignTo="{!savedId}" name="savedName" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="saveNote" action="{!saveNote}" rerender="errorId" oncomplete="afterAddNote();renderProblemNote();enableAddNote();" />
<div id="capsule" class="CapsuleDiv1">
<c:ValidationComponent errorMsgList="{!problemBean.messageString}" id="validationComponent"></c:ValidationComponent>
<apex:actionFunction action="{!deleteProblem}" name="deleteProblem" rerender="errorId,validationComponent" oncomplete="refreshRelatedPortlets();completeDelete();refreshparentList();"/>
<apex:actionFunction action="{!reset}" name="reset" rerender="problemFormPanel,tablePanel,PanelbarOutputPanel,staffPopupID,clientPopupID,titlePanel" oncomplete="updateInactive();updateTitle();renderAddNoteButton();handleResetChange();handleElemEvent(); resetSupportingInformation(false);"/>
<apex:actionFunction name="save" action="{!save}" id="saveActionFunction" reRender="isNewRec,errorId,afterSaveId,titlePanel,panelId,staffPopupID,validationComponent,problemFormPanel,problemDetailsPanel,staffPanel,problemInactivePanel,problemStatePanel,varPanel,openDateId,dueDateId" onComplete="setIsPriorityChanged('false');hideWaitMsg();refreshRelatedPortlets();handleSave();DisplayMessage();buttonValidator();renderAddNoteButton(); afterResetSI();updateTitle();enableCpDelRes();checkEnable();enableCustomAction();handleElemEvent();refreshparentList();resetSupportingInformation(true); ">
    <apex:param assignTo="{!problemBean.problemObj.Inactive__c}" name="idSetString" value=""/>
</apex:actionFunction>  

<apex:actionFunction name="saveAndCloseAction" action="{!saveAndClose}" id="saveAndCloseAction" reRender="isNewRec,errorId,afterSaveId,titlePanel,panelId,staffPopupID,validationComponent,problemFormPanel,problemDetailsPanel,staffPanel,problemInactivePanel,problemStatePanel,varPanel,openDateId,dueDateId" onComplete="setIsPriorityChanged('false');hideWaitMsg();refreshRelatedPortlets();handleSave();buttonValidator();checkEnable();renderAddNoteButton(); afterResetSI();updateTitle();enableCustomAction();handleElemEvent();refreshparentList();resetSupportingInformation(true); afterSaveAndClose();">
    <apex:param assignTo="{!problemBean.problemObj.Inactive__c}" name="idSetString" value=""/>
</apex:actionFunction>           


    
<apex:actionFunction action="{!nextBtnHandler}" name="nextProblemBtnHandler" rerender="problemFormPanel,titlePanel,tablePanel,pbarId,panelId,problemInactivePanel,afterSaveId" onComplete="checkEnable();updateTitle();handleResetChange();handleElemEvent();renderSIComponent();handleSave();"> 
        <apex:param assignTo="{!problemBean.tempString}" name="idSetString" value=""/>          
</apex:actionFunction>
<apex:actionFunction action="{!previousBtnHandler}" name="previousProblemBtnHandler" rerender="problemFormPanel,titlePanel,tablePanel,pbarId,panelId,problemInactivePanel,afterSaveId" onComplete="checkEnable();updateTitle();handleResetChange();handleElemEvent();renderSIComponent();handleSave();"> 
                        <apex:param assignTo="{!problemBean.tempString}" name="idSetString" value=""/>  
</apex:actionFunction>
<apex:actionFunction action="{!assignedToStaff}" name="assignedToStaff"  
                rerender="problemFormPanel,staffPanel,staffPopupID,problemStatePanel,varPanel" onComplete="waitMsg.hide();updateTitle();checkEnable();converdisabletoreadonly(); refreshRelatedPortlets()">
                <apex:param assignTo="{!problemBean.saveID}" name="saveID" value=""/>
</apex:actionFunction>
<apex:actionFunction action="{!assignedToMyself}" name="assignedToMyself"  
    rerender="problemFormPanel,staffPanel,staffPopupID,problemStatePanel,varPanel" onComplete="waitMsg.hide();updateTitle();checkEnable();converdisabletoreadonly(); ">
</apex:actionFunction>
<apex:actionFunction name="assignTOQueue" action="{!assignTOQueue}" rerender="problemFormPanel,staffPanel,staffPopupID,problemStatePanel,varPanel" onComplete="waitMsg.hide();checkEnable();updateTitle();converdisabletoreadonly();refreshRelatedPortlets()"> 
                     <apex:param assignTo="{!problemBean.saveId}" name="saveName" value=""/>
</apex:actionFunction>
<apex:actionFunction action="{!reopenProblem}" name="reopenProblem" rerender="problemFormPanel,Status__c_id_name,Status__c_id_id,titlePanel,problemStatePanel,varPanel,closeDateID" onComplete="refreshRelatedPortlets();updateTitle();checkEnable();window.parent.refreshList();resetSupportingInformation(false);handleResetChange();handleElemEvent();renderAddNoteButton();refreshparentList();"/>
<apex:actionFunction action="{!setSelectedCloseProblem}" name="setCloseProblemComplete" rerender="Category__c_id_name,tablePanel,titlePanel,problemDetailsPanel,BroadcastPanel,problemStatePanel,varPanel,validationComponent,errorId" oncomplete="updateTitle();showError(); checkEnable();resetSupportingInformation(false);handleResetChange();handleElemEvent();refreshparentList();">
     <apex:param assignTo="{!problemBean.saveId}" name="savedID" value=""/>
</apex:actionFunction> 

<table class="clsMainTableSI" cellspacing="0" cellpadding="0">
    <tr class="clsRowGreyBg">
        <td>
            <div id="btnToolbar"></div>
            
        </td>
        
    </tr>
<tr>
<td>

<table class="clsTable" cellspacing="0" cellpadding="0">
    <tr>
     <td class="clsTopAlignment75">
     <apex:outputPanel id="tablePanel">                                
        <table class="clsTable" cellspacing="0" cellpadding="0">
          <tr>
                 <td colspan="3"><div class="div15pxVspacing"/></td>

            </tr>
            <tr>
                        <td class="clsInputLabelTD">
                        
                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Problem_Source__c.label}"> </apex:outputLabel></td>
                       <td class="clsInputTextBoxTD">
                       <apex:inputField id="problemSource_id_name" value="{!problemBean.problemObj.BMCServiceDesk__Problem_Source__c}" styleClass="clsInputPickList" />  
                        </td>

                    </tr>
                    <tr style="{!categoryShowStyle}">
                        <td class="clsInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKCategory__c.label}" /><apex:outputLabel value=" *" styleClass="clsRequiredBlack" rendered="{!problemBean.categoryRequired}"/></td>
                        <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKCategory__c.inlineHelpText}" id="Category__c_id_name" value="{!problemBean.categoryName}" styleClass="clsInputTextBox" tabindex="502" 
                            onKeyUp="findIt('sel4','autocompleteCategoryDiv',this,event)" 
                             onblur="disableDiv('autocompleteCategoryDiv');  showDataCommon(event,FetchUrgencyHTTP,escape('inactive__c = false'));"/><!-- -->
                            <div id='autocompleteCategoryDiv' class="clsAutocompleteDiv">
                                <select id="sel4" class="clsAutocompleteSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteCategoryDiv');" >
                                </select>
                            </div>
                             <apex:inputhidden id="Category__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKCategory__c}"/><apex:inputhidden id="Category__c_id_fkurgency__c" />
                             <apex:inputHidden id="isPriorityChanged" value="{!problemBean.isPriorityChanged}"/>
                             <apex:inputHidden id="dueDateOpt" value="{!problemBean.dueDateOpt}"/>
                             <apex:inputHidden id="priorityNameVal" value="{!problemBean.priorityName}"/>
                             <apex:inputHidden id="isNewRec" value="{!isNewRec}"/>
                             
                                <apex:inputhidden id="ClosedBy__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKClosed_By__c}"/>
                             <apex:inputhidden id="updateStandardDescId" value="{!updateStandardDesc}"/>
                             <apex:inputhidden id="updateStandardResId" value="{!updateStandardRes}"/>
                             <apex:inputhidden id="isCloseTasksId" value="{!isCloseTasks}"/>
                             <apex:inputhidden id="isCloseIncidentsId" value="{!isCloseIncidents}"/>
                                
                        </td>
                        <td class="lookupIconTD">
                    <div class="lookUpIconDiv"><input type="button" id="categoryLookup" class="lookupIconOn"  onClick="if(!inProgress) {openPopup('CategorySearchPage?isLookup=true&isSD=true',openCategoryLookup);}" tabindex="503"/></div>
                   </td>
                 </tr>
         <tr>
        <td class="XcheckBoxTD">
            <apex:inputCheckbox style="vertical-align: bottom;" title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Known_Error__c.inlineHelpText}" value="{!problemBean.problemObj.BMCServiceDesk__Known_Error__c}" id="knowErrorChkId" onClick="knowErrorChkHandler(this.id);" /> 
            <label for="knowErrorLabelId"  ><apex:outputLabel styleClass="knowErrorLabelCls" value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Known_Error__c.label}" /></label>
        </td>
     </tr>
      </table>
      <table class="clsTableCls" cellspacing="0" cellpadding="0">
            <tr >
                 <td style="padding-left: 5px;">
                  <input type="button" class="problemBtnCls" id="problem_description" title = "{!$ObjectType.Problem__c.fields.Problem_Description__c.label}" value="{!$ObjectType.Problem__c.fields.Problem_Description__c.label}"  style="font-weight:bold" onclick="problemFormBtnHandler(this,32000);"  />
                 </td>
                 <td style="padding-left: 0px;">
                  <input type="button" class="problemBtnCls" id="problem_resolution" title = "{!$ObjectType.Problem__c.fields.Problem_Resolution__c.label}" value="{!$ObjectType.Problem__c.fields.Problem_Resolution__c.label}"  onclick="problemFormBtnHandler(this,32000);"  />
                 </td>
                 <td style="padding-left: 0px;">
                  <input type="button" class="problemBtnCls" id="work_around" title = "{!$ObjectType.Problem__c.fields.Work_Around__c.label}" value="{!$ObjectType.Problem__c.fields.Work_Around__c.label}"  onclick="problemFormBtnHandler(this,255);"  />
                 </td>
            </tr>
    
       </table>
       <table class="clsTable" cellspacing="0" cellpadding="0">
       <tr>
                        <td height="5">
                            
                        </td>
                    </tr>
       <tr>
                
                
                <td class="clsInputTextAreaProblemTD" colspan="2">             
                     <apex:inputTextarea title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Problem_Description__c.inlineHelpText}" value="{!problemBean.problemObj.BMCServiceDesk__Problem_Description__c}" id="problem_description_textArea" styleClass="clsInputTextAreaProblem" style="display:block;" />
                    <apex:inputTextarea title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Problem_Resolution__c.inlineHelpText}" value="{!problemBean.problemObj.BMCServiceDesk__Problem_Resolution__c}" id="problem_resolution_textArea" styleClass="clsInputTextAreaProblem" style="display:none;" />
                    <apex:inputTextarea title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Work_Around__c.inlineHelpText}" value="{!problemBean.problemObj.BMCServiceDesk__Work_Around__c}" id="work_around_textArea" styleClass="clsInputTextAreaProblem" style="display:none;" />
                </td>
                
                <td  class="ProblemTextboxPopupIconTD">
                    
                    <input type="button" class="ProblemTextboxPopupIcon" id="firstnameLookup_Id" onclick="displayTextEditor();"  tabindex="503" />
           
                </td>
             </tr>
       
            <tr >
                <td class="clsInputBoldLabelTD"  colspan="4"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem_History__c.fields.BMCServiceDesk__Note__c.label}" /></td>
                
            </tr>
          <tr>
          <td class="clsInputTextAreaTDNote">
            <table class="width100"  cellspacing="0px" cellpadding="0px">
            <tr>
                <td class="clsRightPadTD" colspan="2">
                     <apex:inputTextarea title="{!$Label.bmcservicedesk__tooltipnote}" id="problemNotes" value="{!problemBean.note}" styleClass="clsInputTextAreaNote" tabindex="509"  onkeyup="renderAddNoteButton();"/>
                </td>
          </tr>
          <tr>
          
                <td class="addNoteBtnStyle1">
                    <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem_History__c.fields.BMCServiceDesk__Duration__c.label}" styleClass="clsDurationLabel"/>
                    <apex:inputText value="{!problemBean.duration}" styleClass="clsDurationTextBox" id="problemDuration" title="{!$Label.bmcservicedesk__tooltipduration}" tabindex="511" onblur="validateDuration();" onfocus=""/><apex:outputLabel value="{!$Label.bmcservicedesk__hhmm}" styleClass="clsTimeLabel"/>
                </td>
                <td align="right" class="addNoteBtnStyle2">
                    <input type="button" value="{!$Label.Add}" class="AddButton" id="addNoteBtn" onclick="disableAddNote()" />                                                
                </td> 
          </tr>
          </table>
       	 </td>
       	 </tr>
       </table>
       </apex:outputPanel>
    </td>
            <td><div class="div15pxHspacingBR"/></td>
            
            <td class="clsTopAlignment25">
                <div class="panelCapsule">
                <apex:outputPanel id="PanelbarOutputPanel">



                <apex:panelBar headerClass="clsRowBlueBgPanel" switchType="ajax" id="pbarId">
                    <apex:panelBarItem label="{!$Label.bmcservicedesk__details}" expanded="true" id="problemdetail" headerClass="panelHeader" contentClass="panelContent">
                     <apex:outputPanel id="problemDetailsPanel">   
                        <table class="clsTable" cellspacing="0" cellpadding="0" >
                            <tr>
                                <td><div class="div15pxVspacing"/></td><td></td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKStatus__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1" align="right">
                                    <apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKStatus__c.inlineHelpText}" id="Status__c_id_name" value="{!problemBean.statusName}" styleClass="clsPanelInputTextbox" tabindex="511" onblur="showDataCommon(event,autoAssignToMyself,escape('inactive__c = false and appliesToProblem__c = true'));"/>
                                    <apex:inputhidden id="Status__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKStatus__c}"/>
                                </td>
                                <td class="lookupIconPanelTD">
                                      <div class="lookUpIconDiv">
                
                                          <input type="button" class="lookupIconOn" onclick="if(!inProgress) {openPopup('SearchPage?popupId=Status&isLookup=true&filterClause='+escape('inactive__c = false and appliesToProblem__c = true'),setStatusNext);}"  tabindex="512" />
                                      </div>    
                                  </td>
                            </tr>                         
                           
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKImpact__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1" align="right">
                                    <apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKImpact__c.inlineHelpText}" id="Impact__c_id_name" value="{!problemBean.impactName}" styleClass="clsPanelInputTextbox safariAutoComplete" tabindex="514" onKeyUp="findIt('sel','autocompleteImpactDiv',this,event)"  
                                            onblur="showDataCommon(event,FetchPriorityHTTP,escape('inactive__c = false'));disableDiv('autocompleteImpactDiv');"/>
                                    <apex:inputhidden id="Impact__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKImpact__c}"/>
                                    <div id='autocompleteImpactDiv' class="clsPanelAutocompleteDiv">
                                        <select id="sel" class="clsPanelSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteImpactDiv');" >
                                        </select>
                                    </div>
                                    
                                  
                                </td>
                                <td class="lookupIconPanelTD">
                                      <div class="lookUpIconDiv"><input type="button" class="lookupIconOn" onclick="if(!inProgress) { openPopup('SearchPage?popupId=Impact&isLookup=true&filterClause='+escape('inactive__c = false'),openImpactLookup);}" tabindex="515" /></div>
                                 </td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKUrgency__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1">
                                    <apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKUrgency__c.inlineHelpText}" id="Urgency__c_id_name" value="{!problemBean.urgencyName}" styleClass="clsPanelInputTextbox safariAutoComplete" tabindex="516" onKeyUp="findIt('sel1','autocompleteUrgencyDiv',this,event)" 
                                        onblur="showDataCommon(event,FetchPriorityHTTP,escape('inactive__c = false'),escape('urgencyflag'));disableDiv('autocompleteUrgencyDiv');"/>
                                    <apex:inputhidden id="Urgency__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKUrgency__c}"/>
                                    <div id='autocompleteUrgencyDiv' class="clsPanelAutocompleteDiv">
                                        <select id="sel1" class="clsPanelSelectOption" multiple="multiple" onmousedown="isAutocomplete = true;" onClick="SelectValue(this,'autocompleteUrgencyDiv');" >
                                        </select>
                                    </div>
                                </td>
                                <td class="lookupIconPanelTD" >
                                    <div class="lookUpIconDiv">
                                      
                                        <input type="button" class="lookupIconOn"  onclick="if(!inProgress) { openPopup('SearchPage?popupId=Urgency&isLookup=true&filterClause='+escape('inactive__c = false'),setUrgencyNext); }" tabindex="517" onblur="if(!inProgress) { }" />
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKPriority__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKPriority__c.inlineHelpText}" tabindex="518" disabled="true" value="{!problemBean.priorityName}"
                                    styleClass="clsPanelInputTextboxReadOnly" id="Priority__c_id_name" onfocus="this.blur();"/>
                                   <apex:inputhidden id="varFKPriority" value="{!problemBean.problemObj.BMCServiceDesk__FKPriority__c}"/>
                                </td>
                            </tr>
                           
                             <tr>
                                <td class="clsPanelInputLabelTD"> <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Open_Date_Time__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText id="openDateId" title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Open_Date_Time__c.inlineHelpText}" onfocus="this.blur()" value="{!problemBean.OpenDateStr}" styleClass="clsPanelInputTextboxReadOnly" /></td>
                               
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Due_Date_Time__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputField id="dueDateId"   value="{!problemBean.problemObj.BMCServiceDesk__Due_Date_Time__c}" styleClass="clsPanelInputTextbox" /></td>
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                            
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Closed_Date_Time__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__Closed_Date_Time__c.inlineHelpText}" onfocus="this.blur()" id="closeDateID" value="{!problemBean.CloseDateStr}" styleClass="clsPanelInputTextboxReadOnly" />
                                
                                </td>
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                           
                        </table>
                        </apex:outputPanel> 
                    </apex:panelBarItem>   
                    <apex:panelBarItem label="{!$Label.bmcservicedesk__broadcastdetails}" id="broadcastDetails" headerClass="panelHeader" contentClass="panelContent">
                    <apex:outputPanel id="BroadcastPanel"> 
                        <table class="clsTable" border="0" cellpadding="0" cellspacing="0">
                            
                            <tr>
                                <td height = "15"></td>
                            </tr> 
                            <tr>
                                 <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.BMCServiceDesk__FKBroadcast__c.label}" /></td>
                                 <td class="clsPanelInputTextboxTD1"><apex:inputText title="{!$Label.bmcservicedesk__tooltipproblembroadcastid}" id="Broadcasts__c_id_name" value="{!problemBean.broadcastName}" styleClass="clsPanelInputTextbox" tabindex="521" onblur="showDataCommon(event,null,escape('inactive__c = false'));"/>
                                                                     <apex:inputHidden id="Broadcasts__c_id_id" value="{!problemBean.problemObj.BMCServiceDesk__FKBroadcast__c}"/>    
                                 </td>
                                 <td class="lookupIconPanelTD">
                                      <div class="lookUpIconDiv"><input type="button" class="lookupIconOn" onclick="if(!inProgress) {openPopup('SearchPage?popupId=Broadcast&isLookup=true',setBroadcastNext);}"  tabindex="522" /></div>
                                 </td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__broadcastMessage__c.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputTextArea title="{!$Label.bmcservicedesk__tooltipbroadcastmessage}"  id="Broadcasts__c_id_broadcastmessage__c" readonly="true" value="{!problemBean.broadcastNote}" styleClass="clsPanelInputTextAreaReadOnly" /></td>
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                        </table>
                        </apex:outputPanel>
                    </apex:panelBarItem>
                    <apex:panelBarItem label="{!staffAssignmentLabel}" headerClass="panelHeader staffAssignmentPanelHeader" contentClass="panelContent" id="staffAssignmentPanel">
                   		<script>
                   			var staffPanelBar = document.getElementById('{!$Component.staffAssignmentPanel}');
                   			var i=0;
		        			if(staffPanelBar.childNodes.length > 0){
			          			for(i=0; i<staffPanelBar.childNodes.length;i++){
			          				if(staffPanelBar.childNodes[i] != null)
			          					if(staffPanelBar.childNodes[i].className.indexOf('staffAssignmentPanelHeader') > 0){
			          						staffPanelBar.childNodes[i].title = '{!JSENCODE($Label.StaffAssignmentDetails)}';
			          					}
			          			}                               			
		        			}
                   		</script>
                        <apex:outputPanel id="staffPanel">    
                       <table class="clsTable" cellpadding="0" cellspacing="0">
                            <tr>
                                <td colspan="3" class="viewMoreDtlsBg">
                                <button  type ="button" id="staffInfobtn" Class="bmcUserInfoPopup" onmouseover="showInfoPopup(event,'staffPopupDiv','staff');"/></td>
                            </tr>
                            <tr>
                                <td height = "15"></td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.FirstName.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_firstname}"  value="{!problemBean.firstName}" styleClass="clsPanelInputTextboxReadOnly" /></td>
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.LastName.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_lastname}" value="{!problemBean.lastName}" styleClass="clsPanelInputTextboxReadOnly" /></td>
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                            <tr> 
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.Profile.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_profile}" id="dummyProfile" value="{!problemBean.profile}" styleClass="clsPanelInputTextboxReadOnly"/></td> 
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Phone.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_phone}" id="assignedTo" value="{!problemBean.phone}" styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                <td class="lookupIconPanelTD" >&nbsp;</td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Extension.label}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_extension}" id="supplierName" value="{!problemBean.extension}"  styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                <td class="lookupIconPanelTD" align="left">&nbsp;</td>
                            </tr>
                            <tr>
                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$Label.bmcservicedesk__queue}" /></td>
                                <td class="clsPanelInputTextboxTD1"><apex:inputText onfocus="this.blur()" title="{!$Label.bmcservicedesk__tooltip_staffassignment_queue}" id="supplierNameOne" value="{!problemBean.queue}"  styleClass="clsPanelInputTextboxReadOnly"/></td>  
                                <td class="lookupIconPanelTD" align="left">&nbsp;</td>
                            </tr>
                        </table>
                       </apex:outputPanel>
                    </apex:panelBarItem>                           
                </apex:panelBar>
                 </apex:outputPanel>
                </div>
                </td>
            </tr>
        </table>
        </td>
    </tr>
  </table>
</div>
<div style="display:none">
           <apex:outputpanel id="staffPopupID">
          <div id="staffPopupDiv" >                           
               <table  cellspacing="0" cellpadding ="0" >
               <tr>
                   <td ><apex:inputHidden id="staffHiddeninput" value="{!problemBean.user.Id}" /></td>
                   <td>
                   <table cellspacing="0" cellpadding ="0">
                           <tr >
                            <td style=" padding-top:5px; padding-left:4px; " class="clsInputBoldLabelTooltip1">                                        
                            <div id="userNameforttdivId"></div> 
                             </td>
                           </tr>
                           <tr style="{!IF(problemBean.user.title=='','display:none','')}">
                          
                           <td style=" padding-top:1px; padding-bottom: 4px; padding-left:4px;" class="clsInputLabelTooltipTitle1">
                          
                           <div id="userTitleforttdivId"></div> 
                           </td>
                           </tr>
                           <tr  style="{!IF(problemBean.user.street=='','display:none','')}">
                           <td style="padding-left:4px; padding-top:1px;" class="clsInputLabelTooltip1"> 
                          
                           <div id="userAddressforttdivId"> {!problemBean.user.street} </div>  
                          </td>
                           </tr>
                           
                           <tr style=" {!IF(problemBean.user.city =='' && problemBean.user.state =='' && problemBean.user.Postalcode =='','display:none','')}">
                           <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                           <div id="userCSZforttdivId"></div></td>
                                                                  </tr>
                           <tr style="{!IF(problemBean.user.country=='','display:none','')}">
                           <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                           <div id="userCountryforttdivId"></div> 
                           </td>
                           </tr>                                        
                           <tr style=" {!IF(problemBean.user.Phone=='','display:none','')}">
                           <td  style=" padding-top:5px; padding-left:4px;" class="clsInputLabelTooltip1">
                           <div id="userPhoneforttdivId"></div> 
                           </td>
                           </tr>
                           <tr style=" {!IF(problemBean.user.email=='','display:none','')}">
                           <td style="padding-bottom: 5px; padding-top:1px; padding-left:4px;" class="clsInputLabelTooltip1">
                           <div id="userEmailforttdivId"></div>
                              </td>
                            </tr>                                                                              
                   </table>
                   </td>
               </tr>
              </table>
           
           </div>
           <script>
            function tooltipforstaff(){
	              var cszstringuser = formCSZString('{!JSENCODE(problemBean.user.city)}','{!JSENCODE(problemBean.user.state)}','{!JSENCODE(problemBean.user.Postalcode)}');
	              tooltipforstaffJS('{!JSENCODE(problemBean.user.Name)}','{!JSENCODE(problemBean.user.title)} ',cszstringuser,'{!JSENCODE(problemBean.user.country)}','{!JSENCODE(problemBean.user.Phone)}','{!JSENCODE(problemBean.user.email)}');                          
	        }
	        </script>
        </apex:outputpanel>

       </div>
 
<div id="detailsDivSI" >
<table  class="onDemandSITableCls" id="onDemandSITableId">
  <tr>
     <td id="noSIAvailTD" >{!$Label.SIMessageForNewIncident}</td>
  </tr>  
  <tr >
      <td id="linkSIAvailTD">
        <table class="SICheckboxLinkInnerTable">
            <tr>
                <td id="configureSITD">
                    <input type="checkbox" title="{!$Label.ShowSupportingInformation}" id="configureSIId" onClick="writeCookie();"/>&nbsp;{!$Label.SIMessageForConfiguration}
 
                </td>
            </tr>
            <tr>
                <td>
                    <a id="getSIUrl" href="JavaScript:void(0);" onClick="SIComp('/apex/SIContainerPage?oid='+getProblemID()+'&otype=Problem__c&wid='+2+'&stateofIncident='+problemState+'&isChangeCreatable='+getIsChangeCreatable()+'&isInactive='+isInactive+'&iserror='+isErrorMsg);" >{!$Label.SIMessageForExistingIncident}</a>
                </td>
            </tr>
        </table>

      </td>
  </tr>
</table>
<iframe name='SIIframeID' id='SIIframeID'  width='100%' height='100%' frameborder='0' style="display:none"/>
</div>
<c:TabOutComponent ></c:TabOutComponent>                           
</apex:form>
</apex:outputPanel>
<script>
	
	var btnProblem_DescriptionValue = '{!$ObjectType.Problem__c.fields.Problem_Description__c.label}';
	if(btnProblem_DescriptionValue.length > 11 && document.getElementById('problem_description') != 'undefined'){
		btnProblem_DescriptionValue = Ext.util.Format.ellipsis(btnProblem_DescriptionValue,14);  
		document.getElementById('problem_description').value = btnProblem_DescriptionValue;
	}
	
	var btnProblem_ResolutionValue = '{!$ObjectType.Problem__c.fields.Problem_Resolution__c.label}';
	if(btnProblem_ResolutionValue.length > 10 && document.getElementById('problem_resolution') != 'undefined'){
		btnProblem_ResolutionValue = Ext.util.Format.ellipsis(btnProblem_ResolutionValue,13);  
		document.getElementById('problem_resolution').value = btnProblem_ResolutionValue;
	}
	
	var btnWork_AroundValue = '{!$ObjectType.Problem__c.fields.Work_Around__c.label}';
	if(btnProblem_DescriptionValue.length > 10 && document.getElementById('work_around') != 'undefined'){
		btnWork_AroundValue = Ext.util.Format.ellipsis(btnWork_AroundValue,13);  
		document.getElementById('work_around').value = btnWork_AroundValue;
	}
	loggedInUserId = '{!$User.id}';
	if('{!$CurrentPage.parameters.id}' == null || '{!$CurrentPage.parameters.id}' == ''){
		disableNextPrev=true;
	} 
	var serverStart = '{!serverstart}';
	var serverEnd = '{!currenttime}';
	var TotalServerTime = serverEnd - serverStart; 
	data += '{!JSENCODE($Label.PM_servertime)}';
	data += TotalServerTime;
	data += '<br>';
	var LatencyStart = serverEnd;

</script>      
 <apex:outputPanel id="urlStringPanelId">
    <script>
    urlStringVar ="{!urlQueryString}" 
    </script>
  </apex:outputPanel>
</apex:page>