<apex:page sidebar="false" showHeader="false" standardStylesheets="false"  controller="BMCServiceDesk.FulfillmentInputDetailController">
<c:CommonIncludes />
<apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/ControllProcessPage.js" />
<style>

.x-grid3-row .x-grid-row-checker {
    width: 18px;
}
.x-grid3-row-checker, .x-grid3-hd-checker {
    width: 20px;
}
</style>
<apex:outputPanel id="dataPanel">
    <script>
        var listData = [];
        var valueData = [];
        var templateData = [];
    </script>    
</apex:outputPanel>

<script> 
    var inputId = '{!JSENCODE($CurrentPage.parameters.inputId)}';
    var isMultiSelect = '{!JSENCODE($CurrentPage.parameters.isMultiSelect)}';
    var inputValues;
    var rType;
    var EF = 'ф';
    var PE ='П';    
    var NONPRINT = '¬';
    var DZHE = 'џ';
    var andLabel = '{!JSENCODE($Label.SLM_AND)}';
    
    var lblDelete = '{!JSENCODE($Label.Delete)}';
    var lblProcess = '{!JSENCODE($Label.Template)}';
    var lblInvokeWhenValueIs = '{!JSENCODE($Label.InvokeWhenValueIs)}';
    var lblProcessMappingError = '{!JSENCODE($Label.ProcessMappingError)}';
    var lblProcessTemplateSelectionError = '{!JSENCODE($Label.SelectProcess)}';
    var lblProcessFulfillmentValueSelectionError = '{!JSENCODE($Label.ProcessFulfillmentValueSelectionError)}';
    var lblSavedSuccessfully = '{!JSENCODE($Label.SavedSuccessfully)}';
    var lblSelectProcess = '{!JSENCODE($Label.SelectProcess)}';
    var lblValue;
    if(isMultiSelect.toLowerCase()=='true')
    	lblValue = '<img title="{!JSENCODE($Label.ServiceRequestCondToInvokeToolTip)}" src="{!$Resource.Themes}/SSDefaultTheme/images/en_US/SS_Information_16.png" style="position:absolute;"/>' +  '<div style="margin-left:22px;"> {!JSENCODE($Label.Value)} </div>';
    else
    	lblValue = '{!JSENCODE($Label.Value)}';
    var isProcessCreateable = {!inputBean.isProcessCreateable};
        
    Ext.ns("ControllProcessPageComp");
    ControllProcessPageComp.ComponentVars = {
        processId : '{!$Component.controllProcessForm.process_id}',
        recordsId : '{!$Component.controllProcessForm.records_id}'
    }    
    function getSDFStylesResPath(){
          return '{!$Resource.SDEFStyles}';
    }
    '{!ProcessTemplate}';
    var pTemplate = '{!inputBean.processTemplateLst.size}';
    if (pTemplate > 0) {
        var processtemplatedata = ('{!inputBean.processtemplatedata}').split(NONPRINT);
        if (processtemplatedata.length > 0) { 
            for (i=0;i<pTemplate;i++) {
                var processtemplatesubdata = processtemplatedata[i].split(EF);
                if (processtemplatesubdata.length > 0) {
                    var templateList = new Array(2);
                    templateList[0] = processtemplatesubdata[0];
                    templateList[1] = processtemplatesubdata[1];
                    templateData.push(templateList); 
                }
            }
        }
    }
    <apex:repeat value="{!FulfillmentInput}" var="f">
        inputValues = Ext.util.Format.htmlEncode('{!JSENCODE(f.InputValues__c)}');
        rType = '{!JSENCODE(f.ResponseType__c)}';
        if(rType != null && rType != '') {
            if (rType.toLowerCase()=='radio button' || rType.toLowerCase()=='picklist') 
                createRedioStore(inputValues, 'value');
            else if(rType.toLowerCase().toLowerCase()=='lookup') {
            if (templateData.length > 0){
                var lookupdata = ('{!inputBean.lookupdata}').split(NONPRINT);
                if (lookupdata.length > 0) { 
                    for (i=0;i<lookupdata.length-1;i++) {
                        var lookupsubdata = lookupdata[i].split(EF);
                        if (lookupsubdata.length > 0) {
                            var valueList = new Array(2);
                            valueList[1] = lookupsubdata[0];
                            valueList[0] = lookupsubdata[1];
                            valueData.push(valueList); 
                        }
                    }
                }
            }
          }
            else if(rType.toLowerCase()=='check box')
            {
       	     if (templateData.length > 0){
                var inputvalueArray = new Array(2);
                inputvalueArray[0] = '{!JSENCODE($Label.True)}';
                inputvalueArray[1] = 'TRUE';                
                valueData.push(inputvalueArray);
                inputvalueArray = new Array(2);
                inputvalueArray[0] = '{!JSENCODE($Label.False)}';
                inputvalueArray[1] = 'FALSE';
                valueData.push(inputvalueArray);  
            }
           } 
            else {
          	  if (templateData.length > 0){
                var inputvalueArray = new Array(2);
                inputvalueArray[0] = '{!JSENCODE($Label.Null)}';
                inputvalueArray[1] = 'NULL' + NONPRINT;                
                valueData.push(inputvalueArray);
                inputvalueArray = new Array(2);
                inputvalueArray[0] = '{!JSENCODE($Label.NotNull)}';
                inputvalueArray[1] = 'NOT NULL' + NONPRINT;
                valueData.push(inputvalueArray);                
            }
        }
      }  
    </apex:repeat>
    
    Ext.onReady(function(){
        /*var tempInputValue = '{!ProcessControl}';
        if(tempInputValue != null && tempInputValue != ''){
            createRedioStore(tempInputValue, 'control');
        }*/
         Ext.QuickTips.init(); 
        showValueTable();
        loadInvokeValueData();
        showTemplateTable();
        loadTemplateData();
        showTable();       
        setData();
     
        if(!isProcessCreateable){
        	document.getElementById('saveBtn').disabled =true;
        }
    });    
</script>
<apex:outputPanel id="processPanel">
    <script>
    listData = [];
    '{!ProcessControl}';
    var pControl = '{!inputBean.processControlLst.size}';
    if (pControl > 0) {
        var processcontroldata = (Ext.util.Format.htmlEncode('{!inputBean.processcontroldata}')).split(PE);
        if (processcontroldata.length > 0) { 
            for (i=0;i<pControl;i++) {
                var processcontrolsubdata = processcontroldata[i].split(EF);
                if (processcontrolsubdata.length > 0) {
                    var processList = new Array(5);
                    processList[0] = processcontrolsubdata[0];
                    processList[1] = processcontrolsubdata[1];
                    processList[2] = processcontrolsubdata[2];
                    processList[3] = processcontrolsubdata[3];
                    processList[4] = processcontrolsubdata[4];
                    listData.push(processList);
                }
            }
        }
    }
    if (document.getElementById('extGridPanel') != null) {
        document.getElementById('extGridPanel').innerText = '';
        showTable();       
        setData();
    }
    </script>
</apex:outputPanel>
<apex:outputPanel >
 <apex:form id="controllProcessForm">
    <c:ValidationComponent errorMsgList="{!inputBean.messageString}" id="vComponent"></c:ValidationComponent>
    <apex:actionFunction name="saveProcessControll" action="{!saveProcessControll}" reRender="vComponent,processPanel" oncomplete="window.parent.closePopupRF()" />
     <table class="clsMainTableSI" cellspacing="0" cellpadding="0">
        <tr>
          <td>
              <table  class="clsTable" cellspacing="0" cellpadding="0" border="0">  
                  <tr>
                      <td colspan="2">
                          <div class="div15pxVspacing"></div>
                      </td>
                  </tr>
                  <tr>
                      <td style="padding-left:10px;">
                          <div id="templateData" style="width:277px"></div>
                      </td>
                      <td>
                          <div id="valueData" style="width:277px"></div>
                      </td>
                  </tr>
                  <tr> 
                      <td colspan="2"><div class="div15pxVspacing"></div>
                      </td> 
                   </tr>
                   <tr>
                        <td colspan="2" style="padding-left:7px;">
                            <input type="button" style="background-color:#dee0e0" id="addbtn_id" onclick="addDataJs();" value="{!$Label.Add}" class="clsButtonStyle clsPrvBtn bgBtnGrey" />
                            <apex:inputhidden value="{!inputBean.processRecords}" id="records_id"/>
                            <apex:inputhidden value="{!inputBean.deleteProcessIds}" id="process_id"/>
                        </td>
                    </tr>
                    <tr> 
                      <td colspan="2"><div class="div15pxVspacing"></div>
                      </td> 
                   </tr>
                   <tr>
                    <td  style="padding-left:10px; padding-right:4px;" colspan="2">
                        <div id="extGridPanel"> </div>
                    </td>
                </tr>
              </table>
          </td>
        </tr>
        
        <tr> 
          <td colspan="2"><div class="div15pxVspacing"></div>
          </td> 
       </tr>
        <tr> 
            <td>
                <div style="background-color:#dee0e0" align="bottom" class="clsBottomDiv" >
                    <table>
                        <tr style="background-color:#dee0e0;height:35px; width:100%;" >
                            <td >
                                <input type="button" style="background-color:#dee0e0" id="saveBtn" onclick="beforeSave()" value="{!$Label.OK}"  class="clsButtonStyle clsPrvBtn bgBtnGrey" />
                            </td>
                            <td >
                                <input type="button" id="cancelButton" style="background-color:#dee0e0" onclick="javascript: window.parent.closePopupRF()" value="{!$Label.Cancel}" class="clsButtonStyle clsPrvBtn bgBtnGrey"/>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
     </table>
 </apex:form>
</apex:outputPanel>
</apex:page>