<apex:page sidebar="false" showHeader="false"  controller="BMCServiceDesk.FulfillmentInputConditionalController">
<c:CommonIncludes />
<c:UserContextComponent />
<link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/Calender.css" /> 
<link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/ServiceLevelTarget.css" />
<link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/CustomViews.css" /> 
<apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/FulfillmentInputConditionPage.js"/>

<script>
var compStore = new Object(),
inputData = '[]',
booleanArray = [['True', 'True'],['False', 'False']],
listData = [],
selectedTextAreaLength = 0,
conditionOrderIndex =1,
popUpString = '',
referenceId,
referenceName,
logOpeStore,
logicalOperator,
comparisonOperator,
inputsComboStore,
postfixString,
inputsEditor,
pickListComboStore,
pickListComboBx	,
booleanComboStore,
booleanComboBx,
conditionGridStore,
ConditionGrid;
var conditionOperatorLabel =  '{!JSENCODE($Label.FulfillmentConditionOperatorMsg)}',
 conditionHeader = '{!JSENCODE($Label.serviceTargetConditionOrder)}',
 operatorHeader = '{!JSENCODE($Label.Operator)}',
 logicalConditionHeader = '{!JSENCODE($Label.LogicalOperator )}',
 operandHeader = '{!JSENCODE($Label.Value)}',
 inputHeader =  '{!JSENCODE($Label.InputNameLabel)}',
 labelOperator = '{!JSENCODE($Label.Operator)}',
 OperandErrMsg =  '{!JSENCODE($Label.ErrorMsgTemplateS)}',
 comOpErrMsg = '{!JSENCODE($Label.SelectCompOpMessage)}',
 logicalOpErrMsg	= '{!JSENCODE($Label.SelectLogicalOpMsg)}',
 enterVaErrMsg = '{!JSENCODE($Label.EnterValueMsg)}';
 var invalidNumberLabel = '{!JSENCODE($Label.TemplateInvalidNumber)}';
 var invalidDateLabel = '{!JSENCODE($Label.SS_InvalidDate)}';
var DZHE     ='џ'; //Cyrillic character
var	EF       ='ф'; //Cyrillic character
var nonPrint = '¬';
var PE = 'П';
var errorStr = '';
	function getInputTxtEle(){
   		return document.getElementById('{!$Component.cndtnMainForm.inputTxt}');
   }
   function getInputTextAreaEle(){
   		return document.getElementById('{!$Component.cndtnMainForm.inputTxtArea}');
   } 
   function getDateTimeInputEle(){
   		return document.getElementById('{!$Component.cndtnMainForm.datetimeinput}');	
   }
   function getDateTimePickerImg(){
   		return document.getElementById('{!$Component.cndtnMainForm.dateTimePopupImg}');
   }	
   function getDateInputEle(){
   		return document.getElementById('{!$Component.cndtnMainForm.inputDate}');	
   }
   function getDatePickerImg(){
   		return document.getElementById('{!$Component.cndtnMainForm.datePopupImg}');
   }
   function getLookupEle(){
   		return document.getElementById('lookUp');
   }
   function getLookUpPanelEle(){
   		return document.getElementById('{!$Component.lookUpPanel}');
   }
   function getInfixStrEle() {
   	 return document.getElementById('{!$Component.cndtnMainForm.infixStr}');
   }
    function getUpdateBtnEle(){
		return document.getElementById('updateButtonId');
	}
	function getAddBtnEle(){
		return document.getElementById('addButtonId');
	}
	function getRemoveBtnEle(){
		return document.getElementById('removeButtonId');
	}
	function getSDFStylesResPath(){
          return '{!$Resource.SDEFStyles}';
    }
	
	function loadDataToGrids(){
		conditionGridStore.loadData(listData);
	}
	
</script>
  <apex:outputpanel id="postfixPanel">
    <script>
        postfixString='{!JSENCODE(postfix)}';
        </script>
    </apex:outputpanel> 
 <apex:outputPanel id="fldTypePanel">
        <script>
        	inputData = {!inputData};
        	errorMsg = '{!JSENCODE(messageString)}';
        	
    </script>
    </apex:outputPanel>
    <apex:outputPanel id="gridStorePanel">
        <script>
        listData = {!listData};
        </script>
    </apex:outputPanel>
<apex:form id="cndtnMainForm"> 
	 <c:ValidationComponent errorMsgList="{!messageString}" id="vComponent"></c:ValidationComponent>
	<apex:actionFunction name="assignConditionData" action="{!assignToCondition}" reRender="vComponent,postfixPanel,cndtnStrPanel" oncomplete="setCondtionValue();" />
    <apex:outputPanel id="cndtnStrPanel">
              <apex:inputHidden id="infixStr"  value="{!conditionData}"/>
   </apex:outputPanel>
	<apex:actionRegion >
	<apex:actionFunction name="getData" action="{!assignData}" reRender="gridStorePanel" oncomplete="loadDataToGrids();" >
			<apex:param assignTo="{!infixCondStr}" name="condition" value="" />
		</apex:actionFunction>
	</apex:actionRegion>

	<table  class="clsTable" cellspacing="0" cellpadding="0">  
		<tr>
		    <td colspan="3">
		        <div class="div15pxVspacing"></div>
		    </td>
		</tr>
		<tr>
			<td>
				<apex:outputPanel id="consPanel">
			       <table class="output-panel-toolbar-table" bgcolor="#DEE0E0" cellpadding="0" cellspacing="0">
			       	<tr bgcolor="#DEE0E0" height="50">
			       		<td width="25%" class="pad-10px-td" title="{!$Label.ToolTipQualificationFieldlist}">
			       			<div id="extFieldList"></div>
			               </td>
			       		<td width="15%" class="pad-10px-td" title="{!$Label.ToolTipOperator}">
			       			<div id="compareOpDiv"></div>
			       		</td>
			       		<td width="30%" class="pad-10px-td" title="{!$Label.ToolTipValueField}">
			       			<table cellpadding="0" cellspacing="0">
			       				<tr>
				       				<td style="padding-right: 5px;">
				       					<apex:inputText id="inputTxt" style="display:block;"  styleClass="qualInputEle"/ >
				       					<input type="text" id="referenceID" value=""  style="display:none;" />
				       					<apex:inputText id="datetimeinput" styleClass="qualInputEle" style="display:none"/>
				       					<apex:inputText id="inputDate" styleClass="qualInputEle" style="display:none"/>
				       					<apex:inputTextarea id="inputTxtArea" style="display:none" styleClass="clsQualTextarea" />
				    				</td>
				    				<td>
				            			<input type="button" id="lookUp" class="lookupIconOn" style="display:none;" onClick="openLookupRF();"/>
				    					<input type="button" id="inputTxtAreaButtonEle" class="TextboxPopupIcon" style="display:none" onclick="showTextEditor('{!$Component.cndtnMainForm.inputTxtArea}', selectedLabel, '32000' , '{!$Label.OK}', '{!$Label.Cancel}',350);" />
				    					<apex:image id="dateTimePopupImg"  styleClass="CMDB_DatePickerImage" style="display:none" width="19px" height="19px" value="{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_calendar_popup.gif" onclick="showDateTimePicker();"/>
				            			<apex:image id="datePopupImg"  styleClass="CMDB_DatePickerImage" style="display:none" width="19px" height="19px" value="{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_calendar_popup.gif" onclick="showDatePicker();"/>
				    		   		</td>
				    				<td>
				    					<div id="picklistCombo"/>	
				    				</td>
				    				<td>
				    					<div id="booleanCombo"/>		
				    				</td>
			    				</tr>
			    			</table>
			    		</td>
			            <td width="22%" id="qualButtonTD" style="padding-left: 10px;" title="{!$Label.ToolTipLogOperator}">
			             	<div id="qualLogicalOperatorCombo"></div>
			            </td>
			            <td width="8%"> 
			                 <img src="{!$Resource.SDEFStyles}/SDEFbuttons/b_add.png" onClick="addCndData();"  id="addButtonId" title="{!$Label.Add}" />
			                 <img src="{!$Resource.SDEFStyles}/SDEFbuttons/b_update.png" onClick="upadateCndData();" id="updateButtonId" style="display:none;" title="{!$Label.Update}" />   
			                 <img src="{!$Resource.SDEFStyles}/SDEFbuttons/b_remove_disabled.png" onClick="removeSLTQData();" id="removeButtonId" disabled="true" title="{!$Label.Remove}" />                                                           
			                     
			            </td>
			      	</tr>
			     </table>
			   </apex:outputPanel>
			</td>
		</tr>
		<tr>
	      	<td>
	      		<table class="output-panel-toolbar-table" id="qual_grid_table_id"  cellpadding="0" cellspacing="0">
	      			<tr>
	      				<td>
							<div id="conditionGridDiv"/>             				
	      				</td>
	      			</tr>
	      		</table>
	      		
	      	</td>
	    </tr>
	    <tr>
	    	<td>
        		<div style="background-color:#dee0e0" align="bottom" class="clsBottomDiv" >
					<table>
						<tr style="background-color:#dee0e0;height:35px; width:100%;" >
							<td >
								<input type="button" style="background-color:#dee0e0" onclick="okBtnHandler();" value="{!$Label.Ok}"  class="clsButtonStyle clsPrvBtn bgBtnGrey" />                                          
								
							</td>
							<td >
								<input type="button" id="cancelButton" style="background-color:#dee0e0" onclick="window.parent.closeConditionPopup();" value="{!$Label.Cancel}" class="clsButtonStyle clsPrvBtn bgBtnGrey"/>
							</td>
						</tr>
					</table>
				</div>
        	</td>
	    </tr>
	</table>
</apex:form>
</apex:page>