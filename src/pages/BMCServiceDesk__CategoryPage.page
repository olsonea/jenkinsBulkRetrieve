<apex:page showHeader="false" controller="BMCServiceDesk.CategoryController" contentType="{!contetnTypeForIE}" standardStylesheets="false">
<link rel="Stylesheet" type="text/css" href="{!$Resource.BMCServiceDesk__SDEFStyles}/CategoryPage.css" />
   
    <c:CommonIncludes />

    <script>
    var wikiHelp = '{!wikiUrl}';
     var enablesavebtn={!isPageAccessible};
	var enablecopybtn = {!copybtnflag};
	var enabledeletebtn = {!deletebtnflag};
    var categoryName;               
     var categoryId;
     var isFromSRD = '{!JSENCODE($CurrentPage.parameters.isFromSRD)}';
     
     var errormsg;
     var chkBoxValue;
    var wid = '{!JSENCODE($CurrentPage.parameters.wid)}';
    var isForReqDef = '{!JSENCODE($CurrentPage.parameters.isForReqDef)}';
    var categoryHeader = '{!JSENCODE($ObjectType.Category__c.label)}';
	document.onclick = activateWindow; 
	var showSelfHelp = parent.showSelfHelp;
	function TruncateTextLen(){
		var catDescElem = document.getElementById('{!$Component.CategoryForm.catDesc}');
		if(typeof(catDescElem) != 'undefined' && catDescElem != null && catDescElem != 'undefined'){
			var desc = catDescElem.value;
			if(typeof(desc) != 'undefined' && desc != null && desc != 'undefined'){
				if(desc.length > 1000){
					desc = desc.substring(0,1000);
					catDescElem.value = desc;
				}
			}
		}		
	}
	
	
	function getWID(){
		return '{!JSENCODE($CurrentPage.parameters.wid)}';
	}
         /*
            Code for handling Data change on Page
            - START
        */
    
      	function afterResetSI(){
         	var modName = "{!JSENCODE($CurrentPage.parameters.moduleName)}";  
    		var parentWid = "{!JSENCODE($CurrentPage.parameters.parentWid)}";  
	        if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined' && errormsg=='{!JSENCODE($Label.savedSuccessfully)}'){
				window.parent.registerSave(wid);
				if(modName == 'SSCategory' || modName == 'Category'  ){
					var frame2= window.parent.frames['naviframe'+parentWid];
					if(typeof(frame2.refreshDocs) =='function' )
 						frame2.refreshDocs();
 				}else{
		           	window.parent.parent.refreshSupportingInformation(parentWid,modName);
	            }
	        }
        }
        var wid2 = '{!JSENCODE($CurrentPage.parameters.wid)}';
        var clickedOnce = false;  
        function handleChange(){
            if(!clickedOnce){
                clickedOnce = true;
                if(isFromSRD !='true')    
                window.parent.registerChange(wid2);
            }
        }
            
        function handleResetChange(){
            if(clickedOnce){
               clickedOnce = false;
              if(isFromSRD !='true')
               window.parent.registerSave(wid2);
           }
           }
           
        
         /*
            END
        */
        
        var resizeGrid= function resizeGrid(){
        if(Ext.getCmp('southPanelSI')!=undefined)
         Ext.getCmp('southPanelSI').setWidth(Ext.getCmp('southPanelSI').getWidth());
        };
        if(window.parent.refreshGridSI!=undefined)
          window.parent.refreshGridSI(wid,resizeGrid);
        
        
        var isLookup = "{!JSENCODE($CurrentPage.parameters.islookup)}";  
        var isInactive = "{!JSENCODE($CurrentPage.parameters.isinactive)}";  
        var isPopup = "{!JSENCODE($CurrentPage.parameters.isPopup)}";  
       
        function SendValueToParent(a)
        { 
        window.parent.setPopUpVar(a);
            if(!isFromSRD)
        parent.window.closePopup();
         
    }
    

       if(isLookup||isPopup){
            window.parent.changePopUpTitle('{!objLabel}');
        }


    function saveCategory(){
          if(isPopup){
            var cid=document.getElementById('{!$Component.CategoryForm.cid}').value;
            if(errormsg == null||errormsg ==''||errormsg=='{!JSENCODE($Label.savedSuccessfully)}'){
                 if(chkBoxValue==true){
                 parent.window.closePopup();
                 }
                 else{
                 var rVal = new Array(4);
                 rVal[0] = cid.toUpperCase();
                 rVal[3] = categoryId;                
                 if(isForReqDef == 'true')
                 {
                 	 var selfservice = document.getElementById('{!$Component.CategoryForm.displayInSS}').checked;                 	
                 	 if(!selfservice)
                 	 {
                 	 	rVal[0]='';
                 	 	rVal[3]='';                 	 		
                 	 }
                 }                
                 SendValueToParent(rVal);
                }  
            }
        }
    
    }
       
        function getCATid(catId,isSave){
        if((categoryName != null && categoryName != '')&&(errormsg == null||errormsg ==''||errormsg=='{!JSENCODE($Label.savedSuccessfully)}')){   
            if(isLookup){
              window.parent.refreshDocs();  
              window.parent.closePopup();
           }else{
                setId(catId,isSave); 
           }
        }
        }
        
         function callCopyPage(){
            window.parent.addTab("CategoryPage?copyId=" + categoryId,categoryHeader,categoryHeader);
        }		
        function completeDelete(){
	        if(errormsg == '{!JSENCODE($Label.InsufficentDeletePrivilege)}'){
	            showError();
	        }else{
	            closeWindow();
	        }
	     }
        function closeWindow(){
          if(isLookup){
              window.parent.refreshDocs();                
              window.parent.closePopup();
           }else{
                window.parent.refreshList();
                window.parent.closeTab(wid);
        }
        }
        var disableTrue = true;
        var hide=false;
        var disableForSRD=false;
        Ext.onReady(function(){
    
        Ext.QuickTips.init();
        if({!isRecDeleted}){
			Ext.Msg.alert('{!JSENCODE($Label.Information)}', '{!JSENCODE($Label.DeletedRecord)}', function(){
				if ((typeof(window.parent) != 'undefined') && (typeof(window.parent.popUpWindow) != 'undefined'))
					window.parent.popUpWindow.close();
					closeWindow();
			});
		}
        if(isLookup||isPopup){
            disableTrue = true;
            hide=true;
          }else{ 
          disableTrue = false; 
          hide=false;}
        if(isFromSRD=='true')
        {
            
            disableTrue = true;
            hide=true;
            disableForSRD=true;
            
        }
        // This function renders a block of buttons
        var NewBtnHandler = function(button,event) { activeAllWindowFlag=false; openPage('CategoryPage',categoryHeader,categoryHeader); };
        var SaveBtnHandler = function(button,event) {
            var toggle = false;
            var followUpCheck = document.getElementById('{!$Component.categoryForm.panelBarId1.panelBarItemId1.requireFollowUp}').checked;
            var afterHrsValue = document.getElementById('{!$Component.categoryForm.panelBarId1.panelBarItemId1.after}').value;
            if(followUpCheck === true){
                if(typeof(afterHrsValue) != undefined && afterHrsValue != null && afterHrsValue != ''){
                    toggle = true;
                }else{
                    Ext.MessageBox.show({ msg: '{!JSENCODE($Label.FollowUpCheckedAfterHrsReq)}', buttons: Ext.MessageBox.OK});
                }
            }else{
                if(typeof(afterHrsValue) != undefined && afterHrsValue != null && afterHrsValue != '' && afterHrsValue!=0){
                    Ext.MessageBox.show({ msg: '{!JSENCODE($Label.FollowUpMustChecked)}', buttons: Ext.MessageBox.OK, width:200});
                    
                }else{
                    toggle = true;
                }            
            }
            if(toggle){
                    chkBoxValue=Ext.getCmp('idInactive').getValue();
                    Ext.getCmp('saveId').setDisabled(true);
                    waitbox(0); 
                    save(chkBoxValue);
            }else{return false;}
            
                
        }  
        var CopyBtnHandler = function(button,event) {activeAllWindowFlag=false;  callCopyPage(); };
        var DeleteBtnHandler = function(button,event) { 
                                                        
                                                         Ext.MessageBox.confirm('{!JSENCODE($Label.Delete)}', '{!JSENCODE($Label.DeleteConfirmMessage)}', function(btn){
                                                           if(btn === 'yes'){
                                                                 deleteCategory();
                                                           }});
                                                      };
        var ResetBtnHandler = function(button, event) {resetCategory(); };
        var NextBtnHandler = function (button,event) { if(document.getElementById('nextId').disabled!=true) nextCategoryBtnHandler1();};
        var PreviuosBtnHandler = function (button,event) { if(document.getElementById('prevId').disabled!=true) previousCategoryBtnHandler1();};
         var HelpHandler = function(button,event){
             window.open(wikiHelp);
         }  
          var SamplePanel = Ext.extend(Ext.Panel, {
            renderTo: 'btnToolbar',
            defaults: {bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;'}
        });
        
        new SamplePanel({
            title: '',
            cls:'toolSpCls',
             bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;',
            tbar: [{
                scale: 'medium',
                iconCls: 'bmcNew',
                tooltipType : 'title',
                tooltip: '{!JSENCODE($Label.new)}',
                hidden:disableTrue,
                 id:'newId',
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcNewOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcNew');          
                     }
                     
                } ,
                handler:NewBtnHandler
             
            },' ',{
                scale: 'medium',
                iconCls: 'bmcSave',
                tooltipType : 'title',
                tooltip: '{!JSENCODE($Label.save)}',
                 id:'saveId',
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcSaveOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcSave');          
                     }
                     
                },
                handler:SaveBtnHandler
                
                
            },' ',{
                scale: 'medium',
                iconCls: 'bmcCopy',
                tooltipType : 'title',
                tooltip: '{!JSENCODE($Label.copy)}',
                id:'copyId',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcCopyOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcCopy');          
                     }
                    
                },
                handler:CopyBtnHandler
                
                
            },' ','-',' ',{
                scale: 'medium',
                iconCls: 'bmcDelete',
                tooltipType : 'title',
                hidden:hide,
                tooltip: '{!JSENCODE($Label.delete)}',
                id:'deleteId',
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcDeleteOn');    
                     },
                     mouseout: function(){
                       this.setIconClass('bmcDelete');          
                     }
                     
                },
                handler:DeleteBtnHandler
                
               
            },' ',{
                scale: 'medium',
                iconCls: 'bmcRefreshDasboard',
                tooltipType : 'title',
                 tooltip: '{!JSENCODE($Label.Refresh)}',
                 id:'resetId',
                 hidden:disableForSRD,
            handler:ResetBtnHandler                
              
            },' ',new Ext.Toolbar.Fill(), 
            {
                  id :'idInactive',
               xtype  : 'checkbox',
               width  : 93,
               align:'top',
               hidden:disableForSRD,
               checked: false,
               boxLabel:'{!JSENCODE($ObjectType.Category__c.fields.inactive__c.label)}',
               cls:'chkStyle',
               boxLabel:'<span class="checkboxLabelCls">{!JSENCODE($ObjectType.Category__c.fields.inactive__c.label)}</span>',
               listeners:{
                    render:function(){
                        Ext.QuickTips.register({
                            target:this,
                            dismissDelay:20000,                      
                            text:'{!JSENCODE($ObjectType.Category__c.fields.inactive__c.label)}'
                        });
                    }               
               }
           
            
              
            }, {
               
               
                  xtype : 'box',
                  id    : 'prevId',
                  hidden:disableForSRD,
                autoEl:  {tag: 'img', 
                          src:('{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_previous.gif'),   
                         title:'{!JSENCODE($Label.previousRecord)}'
                         },
                          
                cls:'cursorCls',
               listeners : { render: function(f){f.el.on('click', PreviuosBtnHandler);}}
                             
            },{
               
                xtype : 'box',
                id    : 'nextId', 
                hidden:disableForSRD,
                autoEl:  {tag: 'img', 
                          src:'{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFbuttons/b_next.gif',
                          title:'{!JSENCODE($Label.nextRecord)}' },
                cls:'cursorSpaceCls',
                listeners : { render: function(f){f.el.on('click', NextBtnHandler)}}
               
                
            },
            {
                xtype : 'box',
                id    : 'helpId', 
                hidden:!disableForSRD,
                autoEl:  {tag: 'img', 
                          src:'{!$Resource.BMCServiceDesk__SDEFStyles}/SDEFicons/help_icon.png',
                          title:'{!JSENCODE($Label.TooltipHelp)}' },
                cls:'cursorSpaceCls',
                listeners : { render: function(f){f.el.on('click', HelpHandler)}}
            }
            ] 
        });

        if(isInactive){     	     	
        Ext.getCmp('idInactive').setDisabled(true);       
     	}
        Ext.getCmp('idInactive').setValue('{!category.BMCServiceDesk__inactive__c}');

        
        categoryId = '{!JSENCODE(category.Id)}';
        if(categoryId == null ||categoryId == ''){
            Ext.getCmp('deleteId').setDisabled(true);
            Ext.getCmp('deleteId').setIconClass('bmcDeleteDisable');
            Ext.getCmp('copyId').setDisabled(true);
            Ext.getCmp('resetId').setDisabled(true);            
            Ext.getCmp('prevId').setDisabled(true);
            Ext.getCmp('nextId').setDisabled(true);           
        }
        
       resetbuttonstatus();
       
         
            ///////////// // IE7-8 Related Changes
                   var canvasPanel = new Ext.Panel({
                         layout:'border',
                        // width:'auto',    
                        height:Ext.isIE7 ? 670: Ext.isIE ? 674:Ext.isSafari ? 695:680,
                         border:false, 
                         id:'canvasPanelId',
                         cls:'canvasPanelCls',
                         items:[{  
                                xtype: 'panel', // TabPanel itself has no title    
                                  layout: 'fit',                                                   
                                overflow:'auto',
                                autoScroll:true,
                                split:false,
                                width:'auto',    
                                height:500, 
                                cls:'northPanelCls',
                                                                             
                                region: 'center',                   
                               // margins:'2 4 2 0',
                                                       
                                contentEl : Ext.isIE ? 'capsule' : '{!$Component.categoryForm}'
                                
                        },{                                                         
                                xtype: 'panel', // TabPanel itself has no title
                                layout: 'fit',  
                                overflow:'auto',
                                hidden:disableForSRD,
                                 border:false, 
                                 id:'southPanelSI',
                                autoScroll:true,
                                split:true,
                                collapsible: true,
                                collapseMode: 'mini',
                                width:'auto',    
                                height:Ext.isIE ?182:180,
                                minHeight:Ext.isIE ?120:150,
                                                                                  
                                region: 'south',
                               listeners : {
                                    resize:function( obj,adjWidth,adjHeight,rawWidth,rawHeight ) { 
                                    
                                        if(Ext.getCmp('south-panel')!=undefined){
                                               Ext.getCmp('south-panel').setHeight(adjHeight);
                                        }
                                   }
                               },
                              
                               contentEl :'detailsDiv' 
                        }],
                        listeners: {
                        afterlayout: function(c) {
                            c.layout.south.miniSplitEl.dom.qtip = '{!JSENCODE($Label.DragResizeClickCollapse)}';
                            c.layout.south.getCollapsedEl();
                            c.layout.south.miniCollapsedEl.dom.qtip = '{!JSENCODE($Label.ClickToExpand)}';
                        },
                        single: true
                    }
                        
                       
                         
                       
    });

                     var viewport = new Ext.Viewport({
                     layout:'anchor',
                    // renderTo:'viewPortDiv',
                     width:'auto',
                     id:'viewportId',
                     border:false, 
                     cls:'viewportCanvasCls',   
                     //items:canvasPanel
                     items:[{anchor: '100%', layout:'fit', items:canvasPanel} ]
                    });
/////////////// // End IE7-8 Related Changes
        handleElemEvent();
    if(categoryId == null ||categoryId == ''){
        document.getElementById('{!$Component.categoryForm.cid}').focus();
        }
	setRestSelectCheckbox();	
    });

	function setRestSelectCheckbox(){
		var followUpId = document.getElementById('{!$Component.categoryForm.panelBarId1.panelBarItemId1.requireFollowUp}');
		var selectAll = document.getElementById('selectAll');
		selectAll.checked = true;
		var allInput = document.getElementsByTagName('input');
		if(allInput != null && followUpId!=null){
			for (var i = 0; i < allInput.length; i++) {
				if(allInput[i].type == "checkbox" && allInput[i].id != 'selectAll' && allInput[i].id != 'idInactive' && allInput[i].id !=followUpId.id && allInput[i].checked == false){
					selectAll.checked = false;
					break;
				}
			}
		}	
	}
	
    var categoryIdSet;
	if(categoryIdSet == null || categoryIdSet == ''){
		if('{!JSENCODE($CurrentPage.parameters.isDirect)}' == ''){
		if(typeof(window.parent.returnListOfId)=='function')
			categoryIdSet=window.parent.returnListOfId();
	}else{
		if(typeof(window.parent.parent.getIdArray)=='function')
			categoryIdSet=window.parent.parent.getIdArray();
			window.parent.handleSave('{!JSENCODE($CurrentPage.parameters.wid)}','{!JSENCODE($CurrentPage.parameters.id)}');
		}
	}
	function resetbuttonstatus()
    {
    	if(!enablesavebtn)
        {
           Ext.getCmp('saveId').setDisabled(true);
             
        }
        if(!enablecopybtn)
        {
        	Ext.getCmp('newId').setDisabled(true);
        	Ext.getCmp('copyId').setDisabled(true);
        }
        if(!enabledeletebtn)
        {
        	 Ext.getCmp('deleteId').setDisabled(true);
             Ext.getCmp('deleteId').setIconClass('bmcDeleteDisable');
        }   
    }
        function previousCategoryBtnHandler1(){
            var idSetString='';
            var i=0;
            while(categoryIdSet.length > i){
                if(idSetString==''){
                    idSetString=categoryIdSet[i];
                }else{
                    idSetString=idSetString+','+categoryIdSet[i];
                }
                i++;
            }
            previousCategoryBtnHandler(idSetString);
        
        }

       function nextCategoryBtnHandler1(){
            var idSetString='';
            var i=0;
            while(categoryIdSet.length > i){
                if(idSetString==''){
                    idSetString=categoryIdSet[i];
                }else{
                    idSetString=idSetString+','+categoryIdSet[i];
                }
                i++;
            }
            nextCategoryBtnHandler(idSetString);
        
        }


    function buttonValidator() {
       if((categoryName != null && categoryName != '')&&(errormsg == null||errormsg ==''||errormsg=='{!JSENCODE($Label.savedSuccessfully)}')){   
 
        Ext.getCmp('deleteId').setDisabled(false);
        Ext.getCmp('deleteId').setIconClass('bmcDelete');
        Ext.getCmp('copyId').setDisabled(false);
        Ext.getCmp('resetId').setDisabled(false); 
        Ext.getCmp('clearId').setDisabled(false);   
      
       }  
     }
    function MakeDisplayForSS(chkAvailableForSR) {
        document.getElementById('{!$Component.CategoryForm.panelBarId1.panelBarItemId2.displayInSS}').checked = chkAvailableForSR.checked;
    }
    function uiChangesForSRD()
    {
        var availableForSRId= document.getElementById('{!$Component.CategoryForm.availableForSR}');
        availableForSRId.checked=true;
        availableForSRId.disabled=true;
        document.getElementById('{!$Component.CategoryForm.displayInSS}').checked=true;
        document.getElementById('{!$Component.CategoryForm.catDesc}').style.width='75.5%';
    }
    </script>
    
    <apex:outputPanel id="panelId">
        <script>
        
           categoryName = '{!JSENCODE(category.Name)}';               
           categoryId = '{!JSENCODE(category.Id)}';      
        
        </script>
        </apex:outputPanel>
        
        <apex:outputPanel id="errorId">
        <script>
        
           errormsg = '{!JSENCODE(messageString)}';               
                
        
        </script>
        </apex:outputPanel>
    
    <apex:outputPanel id="afterSavePanel">
        <script>
           function handleSave(){
               var id = "{!JSENCODE(category.Id)}"; 
			 if(!isPopup)
               window.parent.handleSave(wid, id);
        }
         
           function enableSaveButton() {
        		Ext.getCmp('saveId').setDisabled(false);
      		} 
    
        </script>
     </apex:outputPanel>
    <apex:outputPanel id="titlePanel">
        <script>
        enablesavebtn={!isPageAccessible};
        function resetSupportingInformation(isSave){
                var newId = '{!JSENCODE(category.Id)}'; 
                getCATid(newId,isSave);   
       	}
            function updateList(){
               // window.parent.changeTitle(wid,newTitle,categoryHeader);
                window.parent.refreshList();
            }
            function updateTitle(){
	        	var newTitle= "{!JSENCODE(category.name)}";
	        	if(newTitle != ""){						
	                window.parent.changeTitle(wid,newTitle,categoryHeader);
	            }            	
            }
        </script>
    </apex:outputPanel> 
    
    <apex:outputPanel id="inactivePanel">
        <script>
           function updateInactive(){
            Ext.getCmp('idInactive').setValue('{!category.BMCServiceDesk__inactive__c}');
        }
          
    
        </script>
    </apex:outputPanel>
  
  <apex:form id="categoryForm">
    <div id="capsule" class="CapsuleDiv1">
    <apex:outputPanel >
 
            <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
            <apex:actionFunction action="{!save}" name="save" reRender="validationComponent,panelId,errorId,titlePanel,afterSavePanel" oncomplete="waitMsg.hide();enableSaveButton();saveCategory();callIsFromSRD();">
            <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/> 
                 </apex:actionFunction>
            <apex:actionFunction action="{!newCategory}" name="newCategory" />
            <apex:actionFunction action="{!reset}" name="resetCategory" oncomplete="updateInactive();handleResetChange();handleElemEvent();" rerender="tablePanel,afterSavePanel,panelBarId1,inactivePanel" />
            <apex:actionFunction action="{!deleteCategory}" name="deleteCategory" oncomplete="completeDelete();" rerender="errorId,validationComponent"/>
            <!--  <apex:actionFunction action="{!copyCategory}" name="copyCategoryNext" rerender="dummy"/> -->
            <apex:actionFunction action="{!categoryTypeQuery}"
                name="setCategoryType" reRender="CategoryTypes__c_id_name">
                <apex:param assignTo="{!categoryType}" value=""
                    name="saveCategoryType" />
            </apex:actionFunction>

            <apex:actionFunction action="{!parentCategoryQuery}"
                name="setParentCategory" reRender="Category__c_id_name">
                <apex:param assignTo="{!parentCategory}" value=""
                    name="saveParentCategory" />
            </apex:actionFunction>

            <apex:actionFunction action="{!urgencyQuery}" name="setUrgency"
                reRender="Urgency__c_id_name">
                <apex:param assignTo="{!urgency}" value="" name="saveUrgency " />
            </apex:actionFunction>
            
            <apex:actionFunction action="{!nextBtnHandler}" name="nextCategoryBtnHandler" 
                                    rerender="validationComponent,panelId,errorId,titlePanel,afterSavePanel,tablePanel,Urgency__c_id_name,after,requireFollowUp" oncomplete="updateInactive();handleResetChange();resetSupportingInformation(false);handleElemEvent();reloadSupportInfo();updateTitle();">
                                    <apex:param assignTo="{!tempString}" name="idSetString" value=""/>  
            </apex:actionFunction>
            <apex:actionFunction action="{!previousBtnHandler}" name="previousCategoryBtnHandler" 
                                        rerender="validationComponent,panelId,errorId,titlePanel,afterSavePanel,tablePanel,Urgency__c_id_name,after,requireFollowUp" oncomplete="updateInactive();handleResetChange();resetSupportingInformation(false);handleElemEvent();reloadSupportInfo();updateTitle();">
                                        <apex:param assignTo="{!tempString}" name="idSetString" value=""/> 
            </apex:actionFunction>
      
            
            <table class="clsMainTableSI" cellspacing="0" cellpadding="0">

                <tr class="clsRowGreyBg">
                    <td>
                    <div id="btnToolbar"></div>
                    </td>
                </tr>


                <tr>
                    <td>
                    <table  class="clsTable" cellspacing="0" cellpadding="0">  
	                    <tr>
	                    	<td class="clsInputLabelTD" colspan="3">
	                     		<apex:outputpanel rendered="{!(!$ObjectType.Category__c.fields.UnAvailableForTasks__c.Accessible ||
	                                        !$ObjectType.Category__c.fields.UnAvailableForProblems__c.Accessible ||
	                                        !$ObjectType.Category__c.fields.UnAvailableForChangeRequests__c.Accessible ||
	                                        !$ObjectType.Category__c.fields.UnAvailableForReleases__c.Accessible ||
	                                        !$ObjectType.Category__c.fields.UnAvailableforBroadcasts__c.Accessible)}">
	                            <table>
	                          		<tr>
										<td style="height:10px;"></td>
	                    			</tr>
	                    		</table>
	                          	<table class="boxContainer">
		                          	<tr>
		                          		<td><img src="/img/msg_icons/warning24.png"/></td>
		                            	<td>
			                            	<apex:outputpanel rendered="{!NOT(isAdminUser)}">
			                            		<apex:outputLabel value="{!$Label.bmcservicedesk__profilenonsysadminpermission}"/>
			                            	</apex:outputpanel>
			                            	<apex:outputpanel rendered="{!isAdminUser}">
			                            		<apex:outputLabel value="{!$Label.bmcservicedesk__profilesysadminpermission}" />&nbsp;
			                            		<apex:outputLink value="https://docs.bmc.com/docs/display/REMF/Performing+minimum+post-upgrade+procedures" target="_blank">{!$Label.bmcservicedesk__here}</apex:outputLink>
			                            		<apex:outputText value="."/>
			                            	</apex:outputpanel>
		                            	</td>
		                           	</tr>
	                          	</table>
	                         </apex:outputpanel>
	                        </td>
	                    </tr>
                    
                        <tr>
                            <td class="clsTopAlignment75">
                            <apex:outputPanel id="tablePanel">
                             <table class="clsTable" cellspacing="0" cellpadding="0">
                                <tr>
                                    <td colspan="3">
                                        <div class="div15pxVspacing"></div>
                                    </td>
                                </tr>

                                <tr>
                                    <td class="clsInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.Name.label}" /><span class="clsRequiredBlack">&nbsp;*</span></td>
                                    <td class="clsInputTextBoxTD" colspan="2"><apex:inputText id="cid" title="{!$Label.bmcservicedesk__tooltipcategorycategoryid}" value="{!category.Name}"
                                        styleClass="clsIdInputTextBox" tabindex="1"/></td>
                                </tr>  
                                <tr>
                                    <td class="clsInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__Abbreviation__c.label}" /></td>
                                    <td class="clsInputTextBoxTD" colspan="2"><apex:inputText id="cid_abbreviation" title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__Abbreviation__c.InlineHelpText}" value="{!category.BMCServiceDesk__Abbreviation__c}"
                                        styleClass="clsAbbrInputTextBox" tabindex="2"/></td>
                                </tr> 
                              
                                <tr>
                                    <td class="clsInputLabelTD">
                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKCategoryType__c.label}" />
                                    </td>
                                    <td class="clsInputTextBoxTD">
                                        <apex:inputText title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKCategoryType__c.InlineHelpText}" value="{!fcategoryTypeId}"
                                                        styleClass="clsInputTextBox" id="CategoryTypes__c_id_name"
                                                        onblur="showalldata(event,'',escape('inactive__c = false'));" tabindex="3"/>
                                    </td>
                                    <td class="lookupIconTD" >
                                    <div class="lookUpIconDiv">
                                        <apex:commandButton id="categoryTypeLookup" onclick="if(!inProgress){openCategoryType();}" reRender="dummy"
                                        styleClass="lookupIconOn" tabindex="4"/></div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="clsInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKParentCategory__c.label}" /></td>

                                    <td class="clsInputTextBoxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKParentCategory__c.InlineHelpText}" value="{!fparentCategoryId}"
                                        styleClass="clsInputTextBox" id="Category__c_id_name"
                                        onblur="showalldata(event,'',escape('inactive__c = false'));" tabindex="5"/>
                                    </td>
                                    <td class="lookupIconTD" >  
                                    <div class="lookUpIconDiv">
                                        <apex:commandButton id="categoryNameLookup" onclick="if(!inProgress){openParentCategory();}" rerender="dummy"
                                            styleClass="lookupIconOn" tabindex="6"/></div>
                                    </td>
                                </tr>
                                <tr>
                                	<td class="clsInputLabelTD">
                                		<apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__Category_Description__c.label}" />
                                	</td>
                                	<td colspan="5">
                                		<apex:inputTextArea title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__Category_Description__c.InlineHelpText}" onchange="TruncateTextLen()" id="catDesc" value="{!category.BMCServiceDesk__Category_Description__c}" styleclass="clsInputTextArea" style="width:70%;margin-bottom: 8px;" tabindex="7"/>
                                	</td>
                                </tr>
                                </table>                                
                            </apex:outputPanel>
                            </td>
                            <td>
                                <div class="div17pxHspacing" />
									</td>
                           <td class="clsTopAlignment25 clsInfoHandlingSRD">
                            <div class="panelCapsule"><apex:panelBar headerClass="clsRowBlueBgPanel" headerStyle="width:318px;" switchType="ajax" id="panelBarId1"  >

                                <apex:panelBarItem label="{!$Label.bmcservicedesk__appliesto}" expanded="true" headerClass="panelHeader IncidentHandlingInfoPanelHeader" id="panelBarItemId2" contentClass="panelContent" contentStyle="height:11em;">
                                	<table class="clsTable" cellspacing="0" cellpadding="0">
										<tr>
                                            <td class="clsPanelInputCheckboxTDSA" colspan="2" style="border-bottom: thin solid;border-color:#C0C0C0">
												<input type="checkbox" id="selectAll" tabindex="8" onclick="setResetSelectAllJS(this.checked);"/> 
										<apex:outputLabel value="{!JSENCODE($Label.bmcservicedesk__all)}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                    </td>
                                </tr>								
                                <tr>
											<td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__AvailableForIncidents__c.InlineHelpText}" value="{!category.BMCServiceDesk__AvailableForIncidents__c}" id="availableForIncident" tabindex="9" onclick="setResetParentAll();"/>
                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__AvailableForIncidents__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                    </td>
                                </tr>
                                <tr>
											<td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__AvailableForServiceCatalog__c.InlineHelpText}" value="{!category.BMCServiceDesk__AvailableForServiceCatalog__c}" id="availableForSR" tabindex="10" onclick="MakeDisplayForSS(this);setResetParentAll();"/> 
                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__AvailableForServiceCatalog__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                    </td>
										</tr>
										<tr>
                                            <td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForTasks__c.InlineHelpText}" value="{!category.BMCServiceDesk__UnAvailableForTasks__c}" id="availableForTasks" tabindex="11" onclick="setResetParentAll();"/> 
										<apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForTasks__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                   </td>							   
                                </tr>	
                                <tr>
											<td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForProblems__c.InlineHelpText}" value="{!category.BMCServiceDesk__UnAvailableForProblems__c}" id="availableForProblem" tabindex="12" onclick="setResetParentAll();"/> 
										<apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForProblems__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                   </td>								   
                                </tr>
                                <tr>
											<td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForChangeRequests__c.InlineHelpText}" value="{!category.BMCServiceDesk__UnAvailableForChangeRequests__c}" id="availableForCR" tabindex="13" onclick="setResetParentAll();"/> 
										<apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForChangeRequests__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                   </td>							   
                                </tr>								
                                <tr>
											<td class="clsPanelInputCheckboxTDSA" colspan="2">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForReleases__c.InlineHelpText}" value="{!category.BMCServiceDesk__UnAvailableForReleases__c}" id="availableForRelease" tabindex="14" onclick="setResetParentAll();"/> 
                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableForReleases__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                    </td>
                                </tr>								
                                <tr>
                                            <td class="clsPanelInputCheckboxTDSA" colspan="2" style="border-bottom: thin solid;border-color:#C0C0C0;padding-bottom:4px">
												<apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableforBroadcasts__c.InlineHelpText}" value="{!category.BMCServiceDesk__UnAvailableforBroadcasts__c}" id="availableForBR" tabindex="15" onclick="setResetParentAll();"/> 
                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__UnAvailableforBroadcasts__c.label}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                    </td>
                                </tr>							
                                        <tr>
                                            <td class="clsPanelInputCheckboxTDSA" colspan="2">
                                                <apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__Display_In_SelfService__c.InlineHelpText}" value="{!category.BMCServiceDesk__Display_In_SelfService__c}" id="displayInSS" tabindex="16" onclick="setResetParentAll();"/> 
                                                <apex:outputLabel value="{!$Label.bmcservicedesk__displayinselfservicedesk}" styleClass="clsPanelCheckBoxLabel" style="vertical-align:5px;"/>
                                            </td>
                                        </tr>
                                        
                                </table>                                
                                </apex:panelBarItem>
                                
                            
                                <apex:panelBarItem label="{!incidentHandlingInfoLabel}"
                                    expanded="true" headerClass="panelHeader IncidentHandlingInfoPanelHeader" id="panelBarItemId1" contentClass="panelContent">
                                    <script>
                              			var IncidentInfoPanelBar = document.getElementById('{!$Component.panelBarItemId1}');
                              			var i=0;
			                			if(IncidentInfoPanelBar.childNodes.length > 0){
				                 			for(i=0; i<IncidentInfoPanelBar.childNodes.length;i++){
				                 				if(IncidentInfoPanelBar.childNodes[i] != null){
				                 					if(IncidentInfoPanelBar.childNodes[i].className.indexOf('IncidentHandlingInfoPanelHeader') > 0){
				                 						IncidentInfoPanelBar.childNodes[i].title = '{!JSENCODE($Label.IncidentHandlingInfo)}';
				                 					}
			                 					}
				                 			}                               			
			                			}
                              		</script>
                                    <table class="clsTable" cellspacing="0" cellpadding="0">

                                        <tr>
                                            <td >
                                                <div class="div14pxVspacing" />
                                            </td>
                                        </tr>
                                        <tr>
                                           <td class="clsPanelInputCheckboxTD" colspan="2"><apex:inputCheckbox title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__requireFollowUp__c.InlineHelpText}" value="{!category.BMCServiceDesk__requireFollowUp__c}" id="requireFollowUp" tabindex="7"/> <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__requireFollowUp__c.label}" styleClass="clsPanelCheckBoxLabel" />
                                        </td>
                                        </tr>
                                         
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__followUpAfter__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD"><apex:inputText id="after" title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__followUpAfter__c.InlineHelpText}" styleClass="clsPanelInputTextbox"
                                                value="{!category.BMCServiceDesk__followUpAfter__c}" tabindex="8"/> </td><td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$Label.bmcservicedesk__followupafter}" /></td>


                                        </tr>
                                       
                                        <tr>
                                            <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKUrgency__c.label}" /></td>
                                            <td class="clsPanelInputTextboxTD"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Category__c.fields.BMCServiceDesk__FKUrgency__c.InlineHelpText}" styleClass="clsPanelInputTextbox"
                                                value="{!furgencyId}" id="Urgency__c_id_name"
                                                onblur="showalldata(event,'',escape('inactive__c = false'));" tabindex="9"/>
                                            </td>
                                            <td class="lookupIconPanelTD"> 
                                            <div class="lookUpIconDiv">                                         
                                            <apex:commandButton id="urgencyLookup" onclick="if(!inProgress){openUrgency();}" rerender="dummy"
                                                styleClass="lookupIconOn" tabindex="10"/></div></td>
                                            
                                        </tr>
                                        <tr>
                                        </tr>
                                       

                                    </table>
                                </apex:panelBarItem>
                            </apex:panelBar></div>
                            </td>


                        </tr>
                    </table>
                    </td>
                </tr>
            </table>

            </apex:outputPanel> 
            </div>
               <!--  IE7-8 Related Changes -->
           <div class="detailSectinDivCls">
                      <table>
                <tr>
                    <td>
                                           <c:SupportInformationComponent setinactive="{!category.BMCServiceDesk__inactive__c}" objectName="Category__c" fKeyValue="{!categoryId}" urlForStaticResource="{!$Resource.BMCServiceDesk__SDEFStyles}"/>
                    </td>
                </tr>
            </table>
           </div>
           <apex:outputPanel id="dummy"></apex:outputPanel>
           <c:TabOutComponent ></c:TabOutComponent>
<!--  Ends IE7-8 Related Changes Taken div inside form-->
        </apex:form>
<script>
if(isFromSRD=='true')
{
    uiChangesForSRD();
    window.onchange = setDirtyFlag(true);
    window.onkeypress  = setDirtyFlag(true);
}   
function callIsFromSRD()
{
    if(isFromSRD=='true')
    {
        var cid=document.getElementById('{!$Component.CategoryForm.cid}').value;
        
        /* Construncting message box for is SRD*/
        if(errormsg == null||errormsg ==''||errormsg=='{!JSENCODE($Label.SavedSuccessfully)}')
        {
			window.parent.popUpWindow.setTitle(cid);
			Ext.Msg.show({
            title : "",
            msg : "{!JSENCODE($Label.SavedSuccessfully)}",
                     buttons: Ext.Msg.OK,
                     fn : function(btn)
                {
                    setDirtyFlag(false);
					var rVal = new Array(4);
                    rVal[0] = cid;
                    rVal[3] = categoryId;                              
                    SendValueToParent(rVal);
                }
            });
        }
        else
            showError();
    }
    else{ /*Original Sequesnce Will Execute as it is*/
        showError();
        handleSave();
        updateList();
        updateTitle();
        resetSupportingInformation(true);
        buttonValidator();
        resetbuttonstatus();
        handleElemEvent();
    }
}
function openCategoryType()
{
if(isFromSRD=='true')
    openPopupWithTitle('SearchPage?popupId=CategoryType&isLookup=true',setCategoryType,'',250,600);
else
    openPopupWithTitle('SearchPage?popupId=CategoryType&isLookup=true',setCategoryType,'',407,600);   
}
function openParentCategory()
{
 var left = (screen.width/2)-(500/2);
 var top = (screen.height/2)-(400/2);
window.open('StdLayoutCategoryTree?frm=catDtlFrm&state=true',"_blank","width=500,height=400,top="+top+",left="+left);
}
function categoryfields(catId,catName, isCustom){
     var categoryField = document.getElementById('{!$Component.categoryForm.Category__c_id_name}');
     categoryField.value = catName; 
	 if(catId != undefined && catId != 'undefined')    
         setParentCategory(catId);
}
function openUrgency()
{
    if(isFromSRD=='true')
        openPopupWithTitle('SearchPage?popupId=Urgency&isLookup=true',setUrgency,'',250,600);
    else  
        openPopupWithTitle('SearchPage?popupId=Urgency&isLookup=true',setUrgency,'',407, 600);
} 
function setDirtyFlag(value)
{
    window.parent.setDirtyFlag(value);
} 

function setResetSelectAllJS(chkVal){
		var followUpId = document.getElementById('{!$Component.categoryForm.panelBarId1.panelBarItemId1.requireFollowUp}');
        var allInput = document.getElementsByTagName('input');
        if(allInput != null && followUpId!=null){
            for (var i = 0; i < allInput.length; i++) {
                if(allInput[i].type == "checkbox" && allInput[i].id != 'idInactive' && allInput[i].id !=followUpId.id){
                    if(chkVal){
                        allInput[i].checked = true; 
					}else{
                        allInput[i].checked = false;
					}	
				}
			}
        }
}

function setResetParentAll(){
	var followUpId = document.getElementById('{!$Component.categoryForm.panelBarId1.panelBarItemId1.requireFollowUp}');
    var allInput = document.getElementsByTagName('input');
    var parentAllEle = document.getElementById('selectAll');
    if(parentAllEle != null && allInput != null && followUpId!=null){
    	var totalElements = 0;
    	var checkedElemets = 0;
    	var unCheckedElemets = 0;
    	for (var i = 0; i < allInput.length; i++) {
        	if(allInput[i].type == "checkbox" && allInput[i].id != 'idInactive' && allInput[i].id != followUpId.id && allInput[i].id != parentAllEle.id){
            	totalElements = totalElements + 1;
            	if(allInput[i].checked){
					checkedElemets = checkedElemets + 1;
				}else{
					unCheckedElemets = unCheckedElemets + 1;
				}
			}
		}
		
		if(checkedElemets == totalElements && totalElements != 0)
        	parentAllEle.checked = true;
    	else
        	parentAllEle.checked = false;
	}
}

</script>
<script type="text/javascript" src="{!$Resource.SDEFCommonJS}/WhatFixScript.js"></script>           
</apex:page>