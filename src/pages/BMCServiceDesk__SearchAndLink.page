<apex:page id="linkingPage" controller="BMCServiceDesk.SearchAndLinkController" extensions="BMCServiceDesk.ConsoleRemoteActions"  standardStylesheets="true" showHeader="false" sidebar="false" tabStyle="BMCServiceDesk__Change_Request__c">
	<head>
    <link rel="stylesheet" type="text/css" href="{!$Resource.BMCRFSDEFStyles}/LinkMultipleCIPage.css" />               
    <link href="{!$Resource.BMCRFSDEFStyles}/Images" />  
    <link rel="stylesheet" type="text/css" href="{!$Resource.ExtJS4_1_3}/resources/css/ext-all.css" id="ext-all-css-4-1-3"/>
	<apex:outputPanel layout="none" rendered="{!$User.UIThemeDisplayed=='PortalDefault'}">
        <link rel="stylesheet" type="text/css" href="{!$Resource.BMCRFSDEFStyles}/LinkMultipleCIPagePortalOverrides.css" />  
    </apex:outputPanel>
    </head>  
    <apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJS4_1_3}/ext-all.js" />
      
    <body onresize="setResultListHeightJS()"> 
    <apex:form id="theForm">
        <apex:actionFunction action="{!showAllRecords}" name="showAllRecords" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();">                        
            <apex:param assignTo="{!filteredFieldsForMatching}" name="filteredFieldsForMatching" value=""/> 
            <apex:param assignTo="{!searchText}" name="searchText" value=""/> 
         </apex:actionFunction>   
        <apex:actionFunction action="{!reApplyLKFilter}" name="reApplyLKFilter" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();">
            <apex:param assignTo="{!filteredFieldsForMatching}" name="filteredFieldsForMatching" value=""/> 
            <apex:param assignTo="{!searchText}" name="searchText" value=""/> 
        </apex:actionFunction>    
        <apex:actionFunction action="{!setResetSelectAll}" name="setResetSelectAll" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons(); setIdsForLink(null);hideWaitMsgBar();" >
            <apex:param assignTo="{!selectAllCheckBox}" name="selectAllCheckBox" value=""/>           
        </apex:actionFunction>                    
        <apex:actionFunction action="{!searchCIs}" name="searchCIs" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();">            
            <apex:param assignTo="{!searchString}" name="searchString" value=""/>
            <apex:param assignTo="{!pageSize}" name="pageSize" value=""/>    
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>          
            <apex:param assignTo="{!isCJKChar}" name="isCJKVar" value=""/>    
        </apex:actionFunction>
        <apex:actionFunction action="{!sortData}" name="sortData" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();" status="waitMsg">            
            <apex:param assignTo="{!searchString}" name="searchString" value=""/>
            <apex:param assignTo="{!pageSize}" name="pageSize" value=""/>
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>   
			<apex:param assignTo="{!isCJKChar}" name="isCJKVar" value=""/> 			
        </apex:actionFunction>           
        <apex:actionFunction action="{!link}" name="link"  rerender="thepageblock,linkPanel,messagePanel" oncomplete="oncompleteCall();refreshCIWrapperList();">
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
        </apex:actionFunction>            
		<apex:actionstatus id="waitMsg">
            <apex:facet name="start">
                <div class="waitingSearchDiv" id="el_loading"> 
                    <div class="waitingHolder">
                        <img class="waitingImage" src="/img/loading.gif" />
                        <span class="waitingDescription">{!JSENCODE($Label.SSLoading)}...</span>
                    </div>
                </div>
            </apex:facet>
        </apex:actionstatus>
        <apex:actionFunction action="{!refreshCIWrapperList}" name="refreshCIWrapperList"  rerender="tableOutputpanel" status="waitMsg" />
        <apex:actionFunction action="{!first}" name="firstPage"  rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();">
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
        </apex:actionFunction>            
        <apex:actionFunction action="{!previous}" name="previousPage"  rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();">
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
        </apex:actionFunction>            
        <apex:actionFunction action="{!next}" name="nextPage"  rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();" >  
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
        </apex:actionFunction>          
        <apex:actionFunction action="{!last}" name="lastPage"  rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();" >
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
        </apex:actionFunction>    
                  
        <apex:actionFunction action="{!fetchPage}" name="fetchPage" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();">
            <apex:param assignTo="{!pageSize}" name="pageSize" value=""/> 
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>             
        </apex:actionFunction>
        <apex:actionFunction action="{!goToPage}" name="goToPageJS" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();prepareButtons();">                                         
            <apex:param assignTo="{!currPage}" name="currPage" value=""/>              
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/> 
        </apex:actionFunction>
        <apex:actionFunction action="{!applyFilterOnMaching}" name="applyFilterOnMaching" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS(); setResetButtons();prepareButtons();">                                         
            <apex:param assignTo="{!filteredFieldsForMatching}" name="filteredFieldsForMatching" value=""/> 
            <apex:param assignTo="{!searchText}" name="searchText" value=""/> 
        </apex:actionFunction>
     <apex:actionFunction action="{!applyCIFilterOnMaching}" name="applyCIFilterOnMaching" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();">                                         
            <apex:param assignTo="{!filteredFieldsForMatching}" name="filteredFieldsForMatching" value=""/> 
            <apex:param assignTo="{!searchText}" name="searchText" value=""/> 
        </apex:actionFunction>
        <apex:actionFunction action="{!applyInstanceTypeFilter}" name="applyInstanceTypeFilter" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();hideWaitMsgBar();">                                         
            <apex:param assignTo="{!instanceTypeFilter}" name="instanceTypeFilter" value=""/> 
            <apex:param assignTo="{!filteredFieldsForMatching}" name="filteredFieldsForMatching" value=""/>
            <apex:param assignTo="{!searchText}" name="searchText" value=""/>
        </apex:actionFunction>
        <apex:actionFunction action="{!mergeIncidents}" name="mergeIncidents" rerender="messagePanel" >
            <apex:param assignTo="{!selectedId}" name="selectedCIids" value=""/>
            <apex:param assignTo="{!unSelectedId}" name="unSelectedCIids" value=""/>
            <apex:param assignTo="{!mergeStatus}" name="mergeStatus" value=""/>
            <apex:param assignTo="{!linkParent}" name="linkParent" value=""/>
        </apex:actionFunction>
         <apex:actionFunction action="{!applyFilterProblem}" name="applyFilterProblemAF" rerender="thepageblock,messagePanel" oncomplete="setResultListHeightJS();">                                         
            <apex:param assignTo="{!filterFlags}" name="filterFlags" value=""/> 
            <apex:param assignTo="{!searchString}" name="searchText" value=""/> 
        </apex:actionFunction>         
        <apex:actionFunction action="{!addCustomObjectIdentifier}" name="addCustomObjectIdentifier" rerender="">
        </apex:actionFunction>          

		<apex:actionFunction action="{!updateNormRule}" name="updateNormRule" rerender="" oncomplete="openNormalizationRule();">
			<apex:param assignTo="{!SelectedNormRuleID}" name="SelectedNormRuleID" value=""/>
		</apex:actionFunction>
        <apex:outputPanel id="linkPanel">            
            <script>         
                function oncompleteCall(){ 
                    document.getElementById('linkButton').disabled = false;                       
                    if('{!atleastOneSelected}' == 'true'){   
                       if(getUrlParameter('isCalledFromConsole')=='true')
                        {	
                        	window.opener.refreshRelatedLists();
                        	//auto pop-up for collision detection 
                        	if(window.opener.parent.isChangeFormFrameLoaded){ // for change request only
                        		var isCollision='{!isCollision}';
                        		if(isCollision == 'true'){ //if collision is detected reload change detail form showing the  collision alert
                                    window.opener.parent.showCollisionMessage();
									window.opener.loadChangeDetailsForCollision();
	                        	}
                        	}
                       	}else{
                            window.opener.parent.location.href = '/'+'{!filterObjectId}';                                         
                         }                                      
                        window.close();
                    } 
                    setResultListHeightJS();                            
                }           
            </script>       
        </apex:outputPanel>
        <apex:outputPanel id="messagePanel" styleClass="messageContainer">            
        	<script>
        		var enableMerge = {!enableMerge};
        		if ({!mergeSuccessful} != null && {!mergeSuccessful}) {
        			if(getUrlParameter('isCalledFromConsole')=='true'){
						if(window.opener.isFocusOnRelatedList){
        		    		window.opener.loadIncidentRelatedList(filterObjectId);
						}else{
							window.opener.isNeedToRefreshRelatedList = true;
						}
					}else
					{
					window.opener.parent.location.href = '/'+'{!filterObjectId}';
					}
		           	window.close();
	           	}
        	</script>
            <apex:pageMessages id="pageMessage" />            
        </apex:outputPanel>
        <script>
        	var recordCount = '{!recordCount}';
			var nameVal='';
        </script>
        <div id='topdiv'>
        <div id="toolbarPanel" style="display:{!iF(or(parentName=='Matching',AND($CurrentPage.parameters.childName=='BMC_BaseElement__c',OR(parentName=='Incident__c',parentName=='Problem__c',parentName=='Release__c',parentName=='Change_Request__c',parentName=='Task__c',parentName=='AdminLocation'),NOT(isFromSS)),showCloseOpenFilter),'block','none')}"></div>
        <table style="display:{!if (OR(parentName=='Matching',AND($CurrentPage.parameters.childName=='BMC_BaseElement__c',OR(parentName=='Incident__c',parentName=='Problem__c',parentName=='Release__c',parentName=='Change_Request__c',parentName=='Task__c',parentName=='AdminLocation'),NOT(isFromSS)),showCloseOpenFilter),'none','block')};width:90%">  
            <tr>
                <td class="top20pxPadding"></td>                 
            </tr>
            <tr>   
                <td id="tdSearch" class="leftright10pxPadding" style="width:50%;">   
                    <apex:outputLabel value="{!$Label.bmcservicedesk__sssearch}" styleClass="searchClass"></apex:outputLabel>
                    <apex:inputText id="searchField" value="{!searchString}"  onkeypress="return searchOnKeyPress(event)" disabled="{!objNotSupported}" title="{!$Label.bmcservicedesk__ss_searchtext}"/>
                    <script type="text/javascript">
                    	(function setFocusOnPageInit()
						{
							var objSearchField = document.getElementById('{!$Component.searchField}');
							if(objSearchField) objSearchField.focus();
						})();
                    </script>
                </td>
                <td class="goBtnClass" style="width:10px;"> 
                    <input type="button" class="btn btnCls" value="{!$Label.Go}" id="goButton" onclick="searchCI();" />
                </td>
                <td class="goBtnClass" style="display:{!iF(AND($CurrentPage.parameters.childName=='User',$CurrentPage.parameters.parentName=='Incident__c', $CurrentPage.parameters.isNewIncident=='true' , $CurrentPage.parameters.isCreateNewClientAllowed=='true'),'block','none')}"> 
                    <input type="button" class="btn btnCls" value="{!$Label.CreateNewClient}" id="createNewClientBtn" onclick="createNewClient();"/>
                </td>
                <td class="leftright10pxPadding">
                	<a id="clearLink" href="#" style="display:none; width: 1px;" onclick="clearText();return false;" >{!$Label.Clear}</a>
                </td>
            </tr>
            <tr>
                <td class="bottom20pxPadding"></td>                
            </tr>
        </table>
        </div>           
        <input type="hidden" id="hidMergedIncidents" />
        <input type="hidden" id="listChild" />
        <input type="hidden" id="hideParentInc" />
        <input type="hidden" id="listParent" />
        <div id="headerMessage" class="headerMessage"></div>                  
        <apex:pageBlock id="thepageblock" title="{!objectNameLabel} [{!resultSize}]">
        <div id="link" style="display:{!iF(parentName=='Matching','block','none')}"></div> 
            <apex:pageBlockButtons id="linkButtonBlock" location="top" rendered="{!if (parentName=='Matching' || isLookup,false,true)}">                
                <!-- input type="button" class="btn" value="{!$Label.Link}" id="linkButton" onclick="callLinkJS();" /-->
                <input type="button" class="btn btnCls" value="{!if((NOT(isLookup)),$Label.Link,$Label.Ok)}" id="linkButton" onclick="callLinkJS1();" style="{!IF(parentName=='Matching' || isLookup || isFromSR,'display:none', 'display:inline')}" />
                <input type="button" class="btn btnCls" value="{!$Label.Fulfill_Service_Request}" id="fulfillButton" onclick="openMultiInstanceEditor();" style="{!IF(isFromSR,'display:inline', 'display:none')}" />
            </apex:pageBlockButtons>  
				<apex:outputPanel layout="block" rendered="{!isForNormalizationExcep}" styleclass="MaptoRuleBtnSec">
					<input type="button" class="btnCls MaptoRuleBtn" value="{!$Label.MapToRule}" id="MapNormRule" onclick="MapAndOpenRule(false);"  disabled="true"/>
					<input type="button" class="btnCls MaptoRuleBtn" value="{!$Label.MapAndOpenRule}" id="MapAndOpenNormRule" onclick="MapAndOpenRule(true);" disabled="true"/>
				</apex:outputPanel> 			
			<apex:outputPanel rendered="{!isOptionalFilter}" >
			<table height="30" width="100%" >
			 <tr>
				<td  style="background-color:#FFFFCC;border-radius:5px;padding-left:10px;">
					<apex:outputPanel rendered="{!showAllRecordsLink}">
						{!$Label.ShowAllResultsMsg}
						<a style="padding-left:10px;" href="javascript:toggleFilter(true)">{!$Label.ShowAllResultsLink}</a>
					</apex:outputPanel>
					<apex:outputPanel rendered="{!NOT(showAllRecordsLink)}">
					{!$Label.ReapplyCriteriaMsg}
					<a style="padding-left:10px;" href="javascript:toggleFilter(false)">{!$Label.ReapplyCriteriaLink}</a>
					</apex:outputPanel>
				</td>	
             </tr>	
			 <tr>
                <td height="5"></td>                
            </tr>
			</table>
           </apex:outputPanel>				
            <apex:outputPanel id="tableOutputpanel" layout="block" styleclass="container" rendered="{!if (resultSize == 0,false,true)}">                     
                <apex:pageblockTable id="thepageblocktable" rows="{!pageSize}" value="{!CIWrapperList}" var="c" width="100%">                         
                    <apex:column id="chkboxColumn" width="25px" rendered="{!NOT(isLookup)}">
                         <apex:facet name="header">
                             <input type="checkbox" id="selectAllcheckBox" value="{!selectAllCheckBox}" onclick="setResetSelectAllJS(this.checked);"/>
                              <script>
                                recordCount = '{!recordCount}';
                                var selAllChk = '{!selectAllCheckBox}';
                                if(selAllChk == 'true'){
                                    document.getElementById("selectAllcheckBox").checked=true;
                                }
                                else{
                                    document.getElementById("selectAllcheckBox").checked=false;
                                }                                
                             </script>
                         </apex:facet>                         
						 <input type="checkbox" id="checkedone" name="{!c.CIobj.Id}:{!JSENCODE(c.sName)}" value="{!c.checked}" onclick="return checkone(this);" style="{!IF(isFromSR,'display:none', 'display:inline')}"/>
						  <apex:outputpanel rendered="{!isFromSR}"> 
                         <input type="checkbox" id="checkedFulfill" name="{!c.CIobj.Id}:{!c.CIobj['class__c']}:{!c.CIobj['instanceType__c']}" value="{!c.checked}" onclick="return checkone(this);" style="{!IF(isFromSR,'display:inline', 'display:none')}"/>
						 <script>
                                nameVal = "{!c.CIobj.Id}:{!c.CIobj['class__c']}:{!c.CIobj['instanceType__c']}";
						 </script>
						 </apex:outputpanel>
						
                         <script>
                            var chk = '{!c.checked}';
							var isFromSR = {!isFromSR};
							if(!isFromSR){
								nameVal = "{!c.CIobj.Id}:{!JSENCODE(c.sName)}";
							}
                            if(chk == 'true'){
                                document.getElementsByName(nameVal)[0].checked=true;
                            }
                            else{
                                document.getElementsByName(nameVal)[0].checked=false;
                            }                            
                            if (!{!c.state})
                                document.getElementsByName(nameVal)[0].disabled = true;
                            else if ('{!c.parentIncident}' != '' && document.getElementById("hidMergedIncidents").value.indexOf(nameVal) == -1){
                                document.getElementById("hidMergedIncidents").value += nameVal+',';
                                document.getElementById("listChild").value += '{!JSENCODE(c.sName)}'+',';
                            }
                            else if ({!c.isParentInc}){
                                document.getElementById("hideParentInc").value += nameVal+',';
                                document.getElementById("listParent").value += '{!JSENCODE(c.sName)}'+',';
                            }
                         </script>                                                   
                    </apex:column>                
                    <apex:column rendered="{!NOT(isLookup)}">
                        <apex:facet name="header">   
                            <apex:commandLink onclick="sortDataJSFunc();" value="{!firstColumnName}" id="CISort" oncomplete="null" > 
                            	<apex:outputPanel layout="none" rendered="{!sortExpression=='Name__c' && sortDirection=='ASC'}">&#9650;</apex:outputPanel>
                        		<apex:outputPanel layout="none" rendered="{!sortExpression=='Name__c' && sortDirection!='ASC'}">&#9660;</apex:outputPanel>
                        	</apex:commandLink>
                        </apex:facet>       
                         <apex:outputLink value="#" onclick="openPopupRecord('{!c.CIobj.Id}','{!c.sName}',objAPINm,null,null,null,'{!c.additionalInfo}');">{!c.sName}</apex:outputLink>                     
                    </apex:column> 
                    <apex:column rendered="{!if (parentName=='Matching',true,false)}">
                        <apex:facet name="header">{!JSENCODE($Label.bmcservicedesk__parent)}</apex:facet>
                        <apex:outputLink value="#" onclick="openPopupRecord('{!JSENCODE(c.parentInc.BMCServiceDesk__FKIncident__c)}','{!JSENCODE(c.parentInc.FKIncident__r.Name)}','Incident__c',null,null,null);">{!JSENCODE(c.parentInc.FKIncident__r.Name)}</apex:outputLink>
                    </apex:column>                  
                    <apex:column rendered="{!isLookup}"   ondblclick="if(isBusinessServiceObj) { setIdOnDBClick('{!c.fkObjectId}','{!JSENCODE(c.sName)}');} else { if(!isForNormalizationExcep){setIdOnClick('{!c.CIobj.id}','{!JSENCODE(c.sName)}','{!JSENCODE(c.userEmailId)}');}} callLinkJS1(); ">
                         <apex:facet name="header">
                             <apex:commandLink onclick="sortDataJSFunc();" value="{!firstColumnName}" id="CISort1" oncomplete="null"  > 
                            	<apex:outputPanel layout="none" rendered="{!sortExpression=='Name__c' && sortDirection=='ASC'}">&#9650;</apex:outputPanel>
                        		<apex:outputPanel layout="none" rendered="{!sortExpression=='Name__c' && sortDirection!='ASC'}">&#9660;</apex:outputPanel>
                        	</apex:commandLink>
                        </apex:facet>
                        
                      <apex:outputpanel rendered="{!vip}"> <a class="" onclick=" var sName = '{!JSENCODE(c.sName)}';if('{!populateUserFullName}' == 'true'){sName = '{!JSENCODE(c.additionalInfo)}';}if(isBusinessServiceObj){setIdOnDBClick('{!c.fkObjectId}',sName);}else{setIdOnClick('{!c.CIobj.id}',sName,'{!JSENCODE(c.userEmailId)}');}if('{!JSENCODE(TextBox)}' == 'calledFromReport') { setSrcCIIDFromReport('{!c.SrcCIId}');} if('{!JSENCODE(TextBox)}' == 'customLookup'){selectClientAccountDtls('{!c.fkObjectId}','{!JSENCODE(c.fkObjectName)}');}   checkVIPClient({!c.CIobj['VIP__C']}); callLinkJS1();" href="#">{!c.sName}</a>
                       </apex:outputpanel>
					   <apex:outputpanel rendered="{!isForNormalizationExcep}"> 
                           <input type="checkbox"  id = "{!c.CIobj['Id']}" value="true" onclick="enableNormBtn(this,'{!c.CIobj['Id']}','{!c.CIobj['Name']}');" style="margin-right: 5px;" />{!c.sName}
                       </apex:outputpanel>
                       <apex:outputpanel rendered="{!not(vip) && not(isForNormalizationExcep) && not(isFromSR)}"> <a class="" onclick=" if(isBusinessServiceObj) { setIdOnDBClick('{!c.fkObjectId}','{!JSENCODE(c.sName)}');}  else { setIdOnClick('{!c.CIobj.id}','{!JSENCODE(c.sName)}','{!JSENCODE(c.userEmailId)}'); } if('{!JSENCODE(TextBox)}' == 'calledFromReport'){ setSrcCIIDFromReport('{!c.SrcCIId}');} if('{!JSENCODE(TextBox)}' == 'customLookup'){selectClientAccountDtls('{!c.fkObjectId}','{!c.fkObjectName}');} callLinkJS1();" href="#">{!c.sName}</a>
                       </apex:outputpanel>

                    </apex:column>                      
                    <apex:repeat value="{!IF(dynamicFieldList== null, CIGridColumns, dynamicFieldList)}" var="f">
                        <apex:column rendered="{!IF(f == 'BMCServiceDesk__Source__c', true, false)}">
							<apex:facet name="header">{!$Label.bmcservicedesk__source}</apex:facet>
							<apex:outputLink value="{!ciURL}{!c.CIobj[f]}" target="_blank">
								<apex:outputText value="{!c.CIobj['Source_InstanceName__c']}"/> 
							</apex:outputLink>
						</apex:column>
						<apex:column rendered="{!IF(f == 'BMCServiceDesk__Destination__c', true, false)}">
							<apex:facet name="header">{!$Label.bmcservicedesk__destination}</apex:facet>
							<apex:outputLink value="{!ciURL}{!c.CIobj[f]}" target="_blank">
								<apex:outputText value="{!c.CIobj['Destination_InstanceName__c']}"/> 
							</apex:outputLink>
						</apex:column>
						
						<apex:column rendered="{!IF(NOT(OR(f == 'BMCServiceDesk__incidentDescription__c',f == 'BMCServiceDesk__Change_Description__c' ,f == 'BMCServiceDesk__Problem_Description__c',f == 'BMCServiceDesk__taskDescription__c')),false,IF(isShortDescInFS, true, false))}" value="{!c.CIobj[descriptionFieldAPI]}"/>
						
						<apex:column rendered="{!IF(NOT(OR(f == 'BMCServiceDesk__incidentDescription__c',f == 'BMCServiceDesk__Change_Description__c' ,f == 'BMCServiceDesk__Problem_Description__c',f == 'BMCServiceDesk__taskDescription__c')),false,IF(!isShortDescInFS, true, false))}" value="{!c.CIobj['BMCServiceDesk__shortdescription__c']}" />
						
						<apex:column rendered="{!NOT(OR(f == 'BMCServiceDesk__name__c' ,f == 'BMCServiceDesk__incidentDescription__c',f == 'BMCServiceDesk__Change_Description__c' ,f == 'BMCServiceDesk__Problem_Description__c',f == 'BMCServiceDesk__taskDescription__c',f == 'BMCServiceDesk__Source__c',f == 'BMCServiceDesk__Destination__c', f == 'BMCServiceDesk__Destination_InstanceName__c', f == 'BMCServiceDesk__Source_InstanceName__c'))}" value="{!c.CIobj[f]}" />
                    </apex:repeat>       
                </apex:pageblockTable> 
            </apex:outputPanel>
            <div id="toolbarDiv" class="border1px"  style="display:{!if (resultSize == 0,'none','block')}">
            <div id="innertoolbar" align="center" class="padding5px">           
                <span class="leftClass">
                    <apex:selectList id="choosePageSize" value="{!pageSize}" size="1" onchange="fetchPageJS(this.value)" >
                        <apex:selectOptions value="{!availablePageSizes}"/>
                    </apex:selectList>
                    {!$Label.Records_per_page}
                </span> 
                <span class="paginatorClass">                                  
                <span >
                <apex:outputPanel rendered="{!IF(hasPrevious == true,true,false)}">
                <img class="firstPageEnableClass" title="{!$Label.FirstPage}" src="/s.gif"  onClick="first();"/> 
                    <span class="prevClass" onClick="return previous();">
                        <img class="previousPageEnableClass" title="{!$Label.PreviousPage}" src="/s.gif"/>                                                                                                                           
                        <apex:outputText value="{!$Label.bmcservicedesk__previous}" styleclass="prevLinkEnableClass"/> 
                    </span >
                </apex:outputPanel>
                <apex:outputPanel rendered="{!IF(hasPrevious == false,true,false)}">
                    <span >
                        <img class="firstPageDisableClass" title="{!$Label.FirstPage}" src="/s.gif"  onClick="first();"/> 
                        <img class="previousPageDisableClass" title="{!$Label.PreviousPage}" src="/s.gif"/>                                                                                               
                        <apex:outputText value="{!$Label.bmcservicedesk__previous}" styleClass="prevLinkDisableClass"/> 
                    </span >
                </apex:outputPanel>
                </span >
                &nbsp;&nbsp;                    
                <span >
                    <apex:outputPanel rendered="{!IF(hasNext == true,true,false)}">
                        <span class="nextClass" onClick="return next();">                                                                                                                                                           
                            <apex:outputText value="{!$Label.bmcservicedesk__next}" styleclass="nextLinkEnableClass"/> 
                            <img class="nextPageEnableClass" title="{!$Label.NextPage}" src="/s.gif"/>
                        </span >
                            <img class="lastPageEnableClass" title="{!$Label.LastPage}" src="/s.gif"  onClick="last();"/> 
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!IF(hasNext == false,true,false)}">
                        <span >                                
                            <apex:outputText value="{!$Label.bmcservicedesk__next}" styleClass="nextLinkDisableClass"/> 
                            <img class="nextPageDisableClass" title="{!$Label.NextPage}" src="/s.gif"/> 
                            <img class="lastPageDisableClass" title="{!$Label.LastPage}" src="/s.gif"  onClick="last();"/> 
                        </span >
                    </apex:outputPanel>
                </span> 
                </span>                        
                <span  class="rightClass">                
                    {!$Label.Page}<input id="currPage" type="text" name="currentpage" value="{!currentpage}" maxlength="4" size="1" class="left2pxPadding" onkeypress="return goOnKeyPress(event,this.value)"/> {!$Label.Of} {!totalNumberOfPages}
                </span >
          
        </div>
        </div>
        </apex:pageBlock>          
    </apex:form>   
	</body>
    <script>
		var isForNormalizationExcep = {!isForNormalizationExcep};
	    var parentWindow = '';
    	if(getUrlParameter('isCalledFromConsole')=='true') {
            if((window.opener != null) && (window.opener.parent!= null) && (window.opener.location!= null) && (window.opener.location.pathname.toLowerCase().indexOf('relatedlist') > -1)&& (window.opener.parent.parent.addTab != null))
				parentWindow = window.opener.parent.parent;
			else if((window.opener != null) && (window.opener.parent!= null) && (window.opener.location!= null) && (window.opener.location.pathname.toLowerCase().indexOf('console') > -1)&& (window.opener.parent.addTab != null))
				//For Incident Matching Popup
				parentWindow = window.opener.parent;
        }
		var objAPINm = '{!childObjectAPIName}';
        var isRFConsoleEnabled = '{!isRFConsoleEnabled}';
        var isConsoleEnabled = '{!isConsoleEnabled}';
    	var isLookUp = '{!JSENCODE($CurrentPage.parameters.isLookUp)}';
    	var parentName = '{!parentName}';
         var Account="{!JSENCODE($Label.LinkedToAccount)}";
        var Client ="{!JSENCODE($Label.LinkedToClient)}";
        var All ="{!JSENCODE($Label.All)}";
        var childObjectName ="{!JSENCODE($CurrentPage.parameters.childName)}";
		var isServiceRequest = '{!JSENCODE($CurrentPage.parameters.isServiceRequest)}';
		var isFromQV='{!JSENCODE($CurrentPage.parameters.isFromQV)}';
		var isFromEmailPage ='{!JSENCODE($CurrentPage.parameters.fromEmailPage)}';
            
		var isFromSS={!isFromSS};
		var searchRecordsFor='';
		var isCalledFromSearchConfig = '{!JSENCODE($CurrentPage.parameters.isCalledFromSearchConfig)}';
		//Kanhaiya
		var lblAllClasses = '{!JSENCODE($Label.AllClasses)}';
		var lblAssetClasses = '{!JSENCODE($Label.AssetClasses)}';
		var lblCIClasses = '{!JSENCODE($Label.CIClasses)}';
		var lblFilterBy = '{!JSENCODE($Label.ShowClasses)}';
		var isAssetManagementEnabled = {!isAssetMgtEnabled};
		var isCIManagementEnabled = {!isCIMgtEnabled};
		var isApplyInstanceFilter = false;
		var selectedInstanceTypeFilter = '';
		var isInstanceTypeFilterShown = isAssetManagementEnabled && isCIManagementEnabled;
		var pleaseWaitMsg = '{!JSENCODE($Label.PleaseWait)}';
		var LKFId = '{!JSENCODE($CurrentPage.parameters.idValstr)}';
		var isLightningExperience = {!IF(isLightningExperience,true,false)};
		var namespacePrefix = 'BMCServiceDesk__';
		//Kanhaiya
        if (parentName=='Matching') {
            
		    var filterMenus = new Array({!fieldsMatchingIncidents.size});
			var fieldSize = {!fieldsMatchingIncidents.size};
			var filterItemLabel = new Array(fieldSize);
			var filterItemValue = new Array(fieldSize);
			
			if (fieldSize > 0) {
				var i=0;
			<apex:repeat value="{!fieldsMatchingIncidents}" var="f">
					filterItemLabel[i] = '{!JSENCODE(f.Label)}';
					filterItemValue[i] = '{!f}';
				i++;
			</apex:repeat>
			}
			else {
				if ('{!clientId}' != '' && '{!categoryId}' != '') {
					filterItemLabel = new Array(2);
					filterItemValue = new Array(2);
					filterItemLabel[0] = '{!JSENCODE($ObjectType.Incident__c.fields.FKClient__c.label)}';
					filterItemValue[0] = 'FKClient__c';
					filterItemLabel[1] = '{!JSENCODE($ObjectType.Incident__c.fields.FKCategory__c.label)}';
					filterItemValue[1] = 'FKCategory__c';
				}
				else if ('{!clientId}' != '') {
					filterItemLabel = new Array(1);
					filterItemValue = new Array(1);
					filterItemLabel[0] = '{!JSENCODE($ObjectType.Incident__c.fields.FKClient__c.label)}';
					filterItemValue[0] = 'FKClient__c';
				}
				else if ('{!categoryId}' != '') {
					filterItemLabel = new Array(1);
					filterItemValue = new Array(1);
					filterItemLabel[0] = '{!JSENCODE($ObjectType.Incident__c.fields.FKCategory__c.label)}';
					filterItemValue[0] = 'FKCategory__c';
				}
				else {
					filterItemLabel = new Array(3);
					filterItemValue = new Array(3);
					filterItemLabel[0] = '{!JSENCODE($ObjectType.Incident__c.fields.FKAccount__c.label)}';
					filterItemValue[0] = 'FKAccount__c';
					filterItemLabel[1] = '{!JSENCODE($ObjectType.Incident__c.fields.FKClient__c.label)}';
					filterItemValue[1] = 'FKClient__c';
					filterItemLabel[2] = '{!JSENCODE($ObjectType.Incident__c.fields.FKCategory__c.label)}';
					filterItemValue[2] = 'FKCategory__c';
				}
			}
        }
        if({!objNotSupported}){
        	var goButton = document.getElementById('goButton');
            if (goButton != null)
            	goButton.disabled = true;
        }
		var ConfigurationItems = '{!JSENCODE($Label.ConfigurationItems)}';
        var SDEFStyles = '{!$Resource.SDEFStyles}';
        var statusValue = '{!objStatus.Name}';
		var mergeStatus = '{!objStatus.ID}';
        enableMerge = {!enableMerge};
        var mergeSuccessful;
        var filterObjectId = '{!filterObjectId}';
        function setResetButtons() {
            //Ext.getCmp('linkBtn').setDisabled(!enableMerge);
        }
		var isNewLookup = {!isNewLookup};
		var lblMatchBy = '{!JSENCODE($Label.MatchBy)}';
        var lblFilterMenuTooltip  = '{!JSENCODE($Label.Configure_fields_for_Matching_Incidents)}';
        var lblFilterMenuErrMsg  = '{!JSENCODE($Label.Matching_Incidents_error_msg_for_filter)}';
        var lblApply  = '{!JSENCODE($Label.Apply)}';
        var lblChild  = '{!JSENCODE($Label.Child)}';
        var lblParent  = '{!JSENCODE($Label.bmcservicedesk__parent)}';        
        var lblLinkasChild  = '{!JSENCODE($Label.LinkasChild)}';
        var lblLinkasParent  = '{!JSENCODE($Label.LinkasParent)}';
        var lblUpdatestatusoflinkedrecords  = '{!JSENCODE($Label.Updatestatusoflinkedrecords)}';
        var lblLinkandupdatestatus  = '{!JSENCODE($Label.Linkandupdatestatus)}';
        var lblLink  = '{!JSENCODE($Label.Link)}';
        var lblStatus  = '{!JSENCODE($Label.SetSelectionsTo)}';
        var lblSearch  = '{!JSENCODE($Label.Search)}';
        var lblClear  = '{!JSENCODE($Label.Clear)}';
        var lblOpenItems='{!JSENCODE($Label.OpenItems)}';
        var lblClosedItems='{!JSENCODE($Label.ClosedItems)}';
        var lblValidateMinimumCharsSearchPage  = '{!JSENCODE($Label.GsErrorMsg)}';
        var lblReMergeValidationErrorMsg  = '{!JSENCODE($Label.ReMergeValidationErrorMsg)}';
        var atleastOneRecord  = '{!JSENCODE($Label.Please_select_at_least_one_record_to_link)}';
        var functionCalled = 'false';        
        var selectedCIids='';
        var unSelectedCIids='';
        var NewLookUpType = '{!JSENCODE($CurrentPage.parameters.NewLookUpType)}'
        window.document.title = '{!JSENCODE(windowTitle)}'; 
        var title = '{!JSENCODE(title)}';   
        var atleastOneSelected;                 
        var param = '{!JSENCODE($Component.theForm.thepageblock.tableOutputpanel)}';
        var param1 = '{!JSENCODE($Component.theForm.messagePanel)}';
		var selectedLookUpID='';	
		var selectedLookUpName = '';
		var selectedUserEmail = '';
		var selectedFKLookUpID='';	
		var selectedFKLookUpName = '';
        var texttag = '{!JSENCODE(TextBox)}'; 
        var isBusinessServiceObj = {!isBusinessServiceObj}; 
        var dataSeparator='ф';
		var lblfilterBy ='{!JSENCODE($Label.FilterBy)}';
		var isCheckedAccount={!isCheckedAccount},isCheckedClient={!isCheckedClient},isCheckedAll={!isCheckedAll};
        var filteredFiledForMatchingCI='{!JSENCODE(filteredFieldsForMatching)}';
        var hasParent = '{!JSENCODE(hasParent)}';
        var hasParentName = '{!JSENCODE(hasParentName)}';
        var childCount = '{!childCount}';
        var lblParentLabel = '{!JSENCODE($Label.ParentLabel)}';
        var lblParentChildError = '{!JSENCODE($Label.ParentChildError)}';
        var lblChildLabel = '{!JSENCODE($Label.ChildLabel)}';
        var lblParentMsg = '{!JSENCODE($Label.ParentMsg)}';
        var lblChildMsg = '{!JSENCODE($Label.ChildMsg)}';
		var lblLink = '{!JSENCODE($Label.Link)}';
		var lblLinkParentError = '{!JSENCODE($Label.linkParentError)}';
		var lblThe = '{!JSENCODE($Label.The)}';
        var selectedIds = '';
        SearchStringVal='{!JSENCODE(searchString)}';       
        
        function getUrlParameter( param ){
            param = param.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
            var r1 = "[\\?&]"+param+"=([^&#]*)";
            var r2 = new RegExp( r1 );
            var r3 = r2.exec( window.location.href );
            if( r3 == null ){return ""}
            else {return r3[1]};
        }  
        function  searchCI(strFilterValue){
        	document.getElementById("clearLink").style.display="block";
        	var searchString = '';
        	var searchTextId = Ext.getCmp('searchTextId');
        	if (typeof(strFilterValue) !='undefined' && strFilterValue != null &&  strFilterValue !=''){
	        	searchString = strFilterValue;
            }else if(searchTextId && childObjectName == 'BMC_BaseElement__c'){
             	searchString = searchTextId.getValue();
            }else{
                searchString = document.getElementById('{!JSENCODE($Component.theForm.searchField)}').value;               
        	}
        	
            var isCJK=false;
			searchString=searchString.trim();
            if(searchString!='' && searchString.length<2){
          		isCJK=isCJKChar(searchString);
          	}	           
            var pageSize = document.getElementById('{!JSENCODE($Component.theForm.thepageblock.choosePageSize)}').value;        
            searchCIs(searchString,pageSize,selectedCIids,unSelectedCIids,isCJK);                       
            clearLists();
        }  
        function createNewClient(){
           window.opener.createNewClient();
           window.close();
        }     
        function  sortDataJSFunc(){
            var searchString;
            if ('{!parentName}'=='Matching'|| ('{!parentName}' == 'Problem__c' &&  '{!JSENCODE($CurrentPage.parameters.childName)}'=='Incident__c')) searchString = Ext.getCmp('searchTextId').value;
            else {
             searchString = document.getElementById('{!JSENCODE($Component.theForm.searchField)}').value;var pageSize = document.getElementById('{!JSENCODE($Component.theForm.thepageblock.choosePageSize)}').value;
            } 
			var isCJK=false;
			searchString=searchString.trim();
            if(searchString!='' && searchString.length<2){
          		isCJK=isCJKChar(searchString);
          	}
			var pageSize = document.getElementById('{!JSENCODE($Component.theForm.thepageblock.choosePageSize)}').value;                 
            sortData(searchRecordsFor,pageSize,selectedCIids,unSelectedCIids,isCJK);   
            clearLists();                                                  
        }
		function clearText(){
			document.getElementById('{!JSENCODE($Component.theForm.searchField)}').value='';
			var searchTextId = Ext.getCmp('searchTextId');
			if(searchTextId && childObjectName == 'BMC_BaseElement__c')
				searchTextId.setValue('');
			searchCI();
			document.getElementById("clearLink").style.display="none";
		}
		function enableClearBtn(){
			var searchString = document.getElementById('{!JSENCODE($Component.theForm.searchField)}').value;
		 	if(searchString!=null && searchString!='undefined' && searchString !=''){
				document.getElementById("clearLink").style.display="block";
		 	}
		}
		function selectClientAccountDtls(accountId, accountName){
			selectedFKLookUpID= accountId;	
			selectedFKLookUpName = accountName;
		}
		function setIdOnClick(sId,sName,sEmailId){
            selectedLookUpID = sId;
            selectedLookUpName = sName;
            if(isFromEmailPage)
            	selectedUserEmail = sEmailId;
        }
        function setIdOnDBClick(sId,sName){
        	selectedLookUpID = sId;
            selectedLookUpName = sName;
            if(selectedLookUpID != ''&& texttag != 'SRLookup'){
            	if (window.opener == null) {
            		var win = window.parent;
            		win.document.getElementById('statusLookUpId-inputEl').value = selectedLookUpName;
            		win.mergeStatus = selectedLookUpID;
            		win.popUpWindow.close();
            	}
            	else {
                    if(texttag == 'customLookup'){
                        window.opener.clientfields(selectedLookUpID , selectedLookUpName);
                		window.close();
                	}else{
						window.opener.lookupPick2('{!JSENCODE(FormTag)}','{!JSENCODE(TextBox)}_lkid','{!JSENCODE(TextBox)}',selectedLookUpID,selectedLookUpName, false);
                        if(isLookUp=='Contact'){
                            if (parentName == 'Incident__c')
                            	window.opener.contactFieldId = selectedLookUpID;
                            else if (parentName == 'Task__c') 
                                window.opener.contactFieldId = selectedLookUpID;
                        }
                        if(isLookUp=='Account'){
                            if( parentName == 'Incident__c')
                            	window.opener.isAccountByClient = false;
                            window.opener.accountFieldId = selectedLookUpID;
                        }
                        if('{!JSENCODE($CurrentPage.parameters.type)}' =='service'){
                            window.opener.buisnessServiceId = selectedLookUpID;
                        }
					}
				}  
			}
        }
        
        var srcCIID;
        function setSrcCIIDFromReport(tempSrcCIID){
            srcCIID = tempSrcCIID;
        }
        
		function checkVIPClient(isVIP)
        {
        	var IsOOTBUserField=isVIP;
	        if(texttag != undefined && texttag !='customLookup' &&!isBusinessServiceObj && window.opener.isConsoleUI != undefined && window.opener.isConsoleUI == true  ){
	        	IsOOTBUserField=false;
	        } 
	        if(window.opener.VIPClientIcon!=undefined){
				window.opener.VIPClientIcon(IsOOTBUserField);
			}
       }
      
      
		function callLinkJS1(){
			if(isForNormalizationExcep){
				return ;
			}
			
            var linkButton = document.getElementById('linkButton');
            if (linkButton != null)
            	linkButton.disabled = true;
			if(isFromQV == 'true'){
			   window.opener.setLookUpField('{!JSENCODE(TextBox)}',selectedLookUpID , selectedLookUpName);
               window.close();
            }else if(isFromEmailPage){
        		var addressType =  '{!JSENCODE($CurrentPage.parameters.addressType)}';
        		window.opener.setValueAsEmailAddress(selectedUserEmail, addressType);
        		window.close();
            }else if(parentName == 'Normalization'){
            	if(typeof(window.parent) != null && typeof(window.parent) != 'undefined')
            		window.parent.setMasterValue(selectedLookUpName);
            }else if(selectedLookUpID!=undefined && selectedLookUpID!=null && selectedLookUpID != ''){
				if(isCalledFromSearchConfig == 'true' && parentName == 'Incident__c' && childObjectName == 'BMC_BaseElement__c') {
					window.parent.setPrimaryCI(selectedLookUpID,selectedLookUpName);
					window.parent.reloadIncidentform();
				}
                else if (window.opener == null) {
            		var win = window.parent;
            		win.document.getElementById('statusLookUpId-inputEl').value = selectedLookUpName;
            		win.mergeStatus = selectedLookUpID;
            		win.popUpWindow.close();
            	}
            	else if ('{!JSENCODE(TextBox)}' == 'modelattrlookup') {
            		window.opener.document.getElementById('thePage:modelForm:inputTxt').value = selectedLookUpName;
            		window.opener.document.getElementById('referenceID').value = selectedLookUpID;
					window.opener.lookupSelectedValue = selectedLookUpName;
                    window.opener.lookupSelectedId = selectedLookUpID;
            		window.close();
            	}
            	else{
                    if(texttag == 'customLookup'){
                     var linkIncidentFromChat ="{!JSENCODE($CurrentPage.parameters.linkIncidentFromChat)}";
                    
                    	if(linkIncidentFromChat == 'true'){
                    	var linkIncidentAndActionData = [];
                    	linkIncidentAndActionData[0] = selectedLookUpID ;
                    	linkIncidentAndActionData[1] = selectedLookUpName;
                    	linkIncidentAndActionData[2] = 'true';
                    	
                		 window.opener.ChatAction_Link(linkIncidentAndActionData);
                		 window.close();
                		}else{
                        window.opener.clientfields(selectedLookUpID , selectedLookUpName, selectedFKLookUpID, selectedFKLookUpName);
                         	
                		window.close();
                    }    
                    }    
                    else if(texttag =='SRLookup')
                    {
                        var idname=selectedLookUpID+dataSeparator+selectedLookUpName;
                        window.opener.lookupValue(idname);
                        window.close();   
                    }else if(texttag =='calledFromReport'){                
                        window.open('/apex/CMDBManager?cmdbRecordId='+srcCIID+'&isCalledFromReport=true');
                    }else if(texttag =='changelookupValues'){
                        var opener = window.dialogArguments; 
                        if(opener != null && typeof(opener) != 'undefined') 
                               opener.changelookupValues(selectedLookUpID,selectedLookUpName);
                        else
                         window.opener.changelookupValues(selectedLookUpID,selectedLookUpName);
                         window.close();
                    }
                    
                    else{
                		
						// it should be set before calling vf remoting function for applying template.
						window.opener.lookupPick2('{!JSENCODE(FormTag)}','{!JSENCODE(TextBox)}_lkid','{!JSENCODE(TextBox)}',selectedLookUpID,selectedLookUpName, false);
						
                    	if(isLookUp=='SYSTemplate__c'){
                    			
               					window.opener.applyTemplateToRecord(selectedLookUpID);
               			}
                        if(isLookUp=='Contact'){
                            if (parentName == 'Incident__c')
                            	window.opener.contactFieldId = selectedLookUpID;
                            else if (parentName == 'Task__c') 
                                window.opener.contactFieldId = selectedLookUpID;
                        }
                        if(isLookUp=='Account'){
                            if( parentName == 'Incident__c'){
                            	window.opener.isAccountByClient = false;
                            	if(window.opener.checkSmartSuggestionHandler)
	                            	window.opener.checkSmartSuggestionHandler('FKAccount__c');
                            }
                            
                            window.opener.accountFieldId = selectedLookUpID;
                        }else if(isLookUp == 'SRM_RequestDefinition__c'){
						  window.opener.setReqDefId(selectedLookUpID);
						}
                        if('{!JSENCODE($CurrentPage.parameters.type)}' =='service'){
                            window.opener.buisnessServiceId = selectedLookUpID;
                        }
                        
                    	
                    }
                }
            }else if(isLookUp == 'fklocation__c'){
            	var strSelectedId = '';
            	if(document.getElementById("selectAllcheckBox").checked){
            		for(var i=0; i < Ext.select('#checkedone').elements.length; i++){
            			strSelectedId += Ext.select('#checkedone').elements[i].name+'==';
            		}
            	}else if( selectedCIids != ''){
            		strSelectedId = selectedCIids;
            	}
            	if(strSelectedId != '')
            		window.parent.setPopUpVar(strSelectedId,unSelectedCIids);
            	window.parent.popUpWindow.close();
            }            
            else{
                link(selectedCIids,unSelectedCIids);
            }   
			clearLists();	
		}
		setResultListHeightJS();
		if(navigator.userAgent.toLowerCase().indexOf("msie") > -1){
			document.getElementById('tdSearch').style.width = '40%';
		}
	</script>
	<apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/HTML_ENCODE_DECODE.js" />	
	<apex:includeScript value="{!$Resource.BMCServiceDesk__BMCRFCommonJS}/LinkMultipleCIPage.js"/>
	<script type="text/javascript" src="{!$Resource.SDEFCommonJS}/OpenPopupRecordUtility.js"/>
</apex:page>