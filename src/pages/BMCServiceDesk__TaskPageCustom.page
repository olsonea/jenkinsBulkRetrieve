<apex:page cache="true" controller="BMCServiceDesk.StandardTaskController" sidebar="false" showHeader="false" contentType="{!contetnTypeForIE}" extensions="BMCServiceDesk.ClientInfo,BMCServiceDesk.JSRemoteActions">
<c:CommonIncludes />
 <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/JSTemplate.js"/>
 <link rel="Stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/TaskPage.css" />
 <link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/CustomViews.css" />    
 <apex:includeScript value="{!$Resource.BMCServiceDesk__SDEFCommonJS}/TaskPageCustom.js"/>
<style>
    .infoBtnDiv{
		float: left; 
		position: absolute; 
		margin-left: 22px; 
		*margin-left:2px; 
		vertical-align: top; 
		padding-right: 0px;    
    }
    a {
	    color: #0000FF;
	}
	body a:hover {
	    color: #0000FF;
	}
</style> 
 <apex:outputPanel id="myButtonPanel">
     <script>
    var copymetrue = {!copyme};
	var automaticupdateduedate = {!recalculateDueDate};
    var stageHTMLPrev = '{!JSENCODE(StageHTML)}';
    var closedStage  = '{!JSENCODE(statusName)}';
    var taskState;
    var savedone;
    var isCustomPage = true;
    var durationError = 0;
    var taskstart = '{!taskstarttime}',
    wid = '{!JSENCODE($CurrentPage.parameters.wid)}';
    wid2 = '{!JSENCODE($CurrentPage.parameters.wid)}';
    labelSavedSuccessfully = '{!JSENCODE($Label.SavedSuccessfully)}',
    labelCloseTask = '{!JSENCODE($Label.CloseTask)}',
    labelPM_netwokLatency = '{!JSENCODE($Label.PM_netwokLatency)}',
    labelTaskWindowHeaderSearchPage = '{!JSENCODE($ObjectType.Task__c.label)}',
    labelCIExpCIExplorer = '{!JSENCODE($Label.CIExpCIExplorer)}',
    labelEmailMessage = '{!JSENCODE($Label.Email)}',
    labelComposeEmailPageHeader = '{!JSENCODE($Label.ComposeEmailTaskPageHeader)}',
    labelConfigurationItemsExplorer = '{!JSENCODE($Label.ConfigurationItemsExplorer)}',
    labelValidDateTime = '{!JSENCODE($Label.ValidDateTime)}',
    labelDelete = '{!JSENCODE($Label.Delete)}',
    labelDeleteTaskPage = '{!JSENCODE($Label.DeleteConfirmMessage)}',
    labelInactive = '{!JSENCODE($ObjectType.Task__c.fields.inactive__c.label)}',
    labelNew = '{!JSENCODE($Label.New)}',
    labelSave = '{!JSENCODE($Label.Save)}',
    labelCopy = '{!JSENCODE($Label.Copy)}',
    labelReset = '{!JSENCODE($Label.Refresh)}',
    labelAssignTo = '{!JSENCODE($Label.AssignTo)}',
    labelIncidentsStaff = '{!JSENCODE($Label.IncidentsStaff)}',
    labelIncidentsSuggestedStaff = '{!JSENCODE($Label.IncidentsSuggestedStaff)}',
    labelIncidentMyself = '{!JSENCODE($Label.IncidentMyself)}',
    labelIncidentMemberofProfName = '{!JSENCODE($Label.IncidentMemberof)} {!userProfileName}',
    labelQueue = '{!JSENCODE($Label.Queue)}',
    labelActions = '{!JSENCODE($Label.Actions)}',
    labelIncidentClose = '{!JSENCODE($Label.Close)}',
    labelIncidentQuickClose = '{!JSENCODE($Label.IncidentQuickClose)}',
    labelReopenTask = '{!JSENCODE($Label.ReopenTask)}',
    labelTemplate = '{!JSENCODE($Label.Template)}',
    labelLaunchCIExplorer = '{!JSENCODE($Label.LaunchCIExplorer)}',
    labelAPMTaskInactive = '{!JSENCODE($ObjectType.Task__c.fields.inactive__c.label)}',
    labelPreviousRecord = '{!JSENCODE($Label.PreviousRecord)}',
    labelNextRecord = '{!JSENCODE($Label.NextRecord)}',
    labelDragResizeClickCollapse = '{!JSENCODE($Label.DragResizeClickCollapse)}',
    labelClickToExpand = '{!JSENCODE($Label.ClickToExpand)}',
    labelMsgNoAccessPerm = '{!JSENCODE($Label.MsgNoAccessPerm)}',
    labelPM_PageLoad = '{!JSENCODE($Label.PM_PageLoad)}',
    labelSuggestedExperts = '{!JSENCODE($Label.SuggestedExperts)}',
    labelSelectFrom = '{!JSENCODE($Label.SelectFrom)}';
    profileId = '{!$Profile.Id}',
    DeletedRecord = '{!JSENCODE($Label.DeletedRecord)}',
    Information = '{!JSENCODE($Label.Information)}',
    saveState = {!saveState},
    assignStaffState = {!assignStaffState},
    assignSuggestedStaffState = {!assignSuggestedStaffState},
    assignMyselfState = {!assignMyselfState},
    assignSuggestedStaffState = {!assignSuggestedStaffState},
    closeState = {!closeState},
    reOpenState = {!reOpenState},
    templateFlag = {!templateFlag},
    taskFormComponent = '{!$Component.taskForm}',
    cookieName= 'ConfigureSI'+'{!currentUserId}',
    cookieValue = Ext.util.Cookies.get(cookieName),
    labelIncidentPlural = "{!JSENCODE($ObjectType.Incident__c.LabelPlural)}",
    labelCRPlural = "{!JSENCODE($ObjectType.Change_Request__c.LabelPlural)}",
    ClosedStage = '{!JSENCODE($Label.ClosedStage)}',
    labelProblemPlural = "{!JSENCODE($ObjectType.Problem__c.LabelPlural)}";
    var iFrameSrc;
    var currentTaskId;
    var isTaskInactive= '{!task.inactive__c}';
    var pageUrl= document.location.href.split('apex/');
    var userId = '{!$Component.taskForm.User_id_id}';
    var contactId = '{!$Component.taskForm.Contact_id_id}';
    var leadId = '{!$Component.taskForm.Lead_id_id}';
    var clientSearchPageFlag = '{!showClientSearch}';
    var popupInprogress = false;
    var firstName, lastName, userName, remoteCallFlag = false,accName = '',tooltipforclient=null;
    var orgNamespace = '{!orgNamespace}';
    var OverwriteWarning ='{!JSENCODE($Label.OverwriteWarning)}';
    var replaceUnsaved = '{!JSENCODE($Label.replaceUnsaved)}';
    var categoryRequired = '{!categoryRequired}';
    Ext.ns("TaskPageComp");
    TaskPageComp.ComponentVars = {
    	additionalFieldsPanelId: '{!$Component.taskForm.pbarId.AdditionalFieldspanelBar}'
    }
    function completeDelete(){
                if(errormsg == '{!JSENCODE($Label.InsufficentDeletePrivilege)}'){
                    showError();
                }else{
                    var modName = "{!JSENCODE($CurrentPage.parameters.moduleName)}";  
                    var parentWid = "{!JSENCODE($CurrentPage.parameters.parentWid)}";
                    if(modName != null && modName != '' && typeof(modName) != 'undefined' && parentWid != null && parentWid != '' && typeof(parentWid) != 'undefined'){
                        window.parent.parent.refreshSupportingInformation(parentWid,modName);                       
                    }else{
                    updateTitle();
                    }
                    closeWindow();
                }
     }
     function getIsCreateable(){
            return '{!JSENCODE($CurrentPage.parameters.isCreateable)}';
     }
     function getIsDeletable(){
            return '{!JSENCODE($CurrentPage.parameters.isDeletable)}';
     }
     function getIsUpdateable(){
         return '{!JSENCODE($CurrentPage.parameters.isUpdateable)}';
     }
    function getapplyTemplateCheckboxvalue(){
 		setcheckboxvalueforTemplate = '{!showtemplatecheckboxvalue}'; 
 		overwrite = '{!overwrite}';
	}
    function getSDFStylesResPath(){
        var resPath = '{!$Resource.SDEFStyles}';
        return resPath;
    }
    function getModuleName(){
        var moduleName = '{!JSENCODE($CurrentPage.parameters.moduleName)}';
        return moduleName;
    }
    function getParentWid(){
        var parentWid = '{!JSENCODE($CurrentPage.parameters.parentWid)}';
        return parentWid;
    }
    function getCategoryNameId(){
        var categoryName = '{!$Component.taskForm.Category__c_id_name}';
        return categoryName;
    }
    function getCategoryIdVal(){
        var categoryId = '{!$Component.taskForm.Category__c_id_id}';
        return categoryId;
    }
    function getCategoryFKUrgency(){
        var categoryFKUrgency = '{!$Component.taskForm.Category__c_id_fkurgency__c}';
        return categoryFKUrgency;
    }
    function getTaskDuedatetimeId(){
        var taskDuedatetime = '{!$Component.taskForm.pbarId.taskdetail.Task__c_id_duedatetime__c}';
        return taskDuedatetime;
    }       
    function getImpactNameId(){
        var impactNameId = '{!$Component.taskForm.pbarId.taskdetail.Impact__c_id_name}';
        return impactNameId;
    }
    function getUrgencyNameId(){
        var urgencyNameId = '{!$Component.taskForm.pbarId.taskdetail.Urgency__c_id_name}';
        return urgencyNameId;
    }
    function getImpactIdVal(){
        var impactId = '{!$Component.taskForm.pbarId.taskdetail.Impact__c_id_id}';
        return impactId;
    }
    function getUrgencyIdVal(){
        var urgencyId = '{!$Component.taskForm.pbarId.taskdetail.Urgency__c_id_id}';
        return urgencyId;
    }
    function getPriorityNameVal(){
        var pName = '{!$Component.taskForm.pbarId.taskdetail.Priority__c_id_name}';
        return pName;
    }
    function getPriorityIdVal(){
        var pId = '{!$Component.taskForm.pbarId.taskdetail.Priority__c_id_id}';
        return pId;
    }
    function getStaffHiddeninput(){
        var staffHiddeninput = '{!$Component.taskForm.staffHiddeninput}';
        return staffHiddeninput;
    }
    function getTaskResolutionId(){
        var taskResolution = '{!$Component.taskForm.task_taskResolution__c}';
        return taskResolution;
    }
    function getIsPriorityChangedValId(){
        var isPriorityChangedVal = '{!$Component.taskForm.pbarId.taskdetail.Priority__c__isPriorityChanged}';
        return isPriorityChangedVal;
    }
    function getDueDateCalculationOptionId(){
        var dueDateCalculationOptionId = '{!$Component.taskForm.pbarId.taskdetail.dueDateCalculationOption}';
        return dueDateCalculationOptionId;
    }
    function getNoRightsToViewEditVal(){
        var noRightsToViewEdit = {!NoRightsToViewEdit};
        return noRightsToViewEdit;
    }
    function getUserLastname(){
        var userLastname = '{!$Component.taskForm.User_id_lastname}';
        return userLastname;
    }
    function getNoteIdVal(){
        var noteId = document.getElementById('{!$Component.taskForm.task_taskNote__c}');
        return noteId;
    }
    function isRecordDeleted(){
        return {!isRecDeleted};
    }
     function getWID(){
            return '{!JSENCODE($CurrentPage.parameters.wid)}';
     }
    function getIncId(){
    	return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Incident__c_id_id}').value;
    }
    function getIncNameEle(){
    	//return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Incident__c_id_name}');
    	return document.getElementById('Incident__c_id_name');
    }
    function getIncidentName(){
    	return "{!JSENCODE(incidentName)}";
    }
    function getCRId(){
    	return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Change_Request__c_id_id}').value;
    }
    function getCRNameEle(){
    	//return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Change_Request__c_id_name}');
    	return document.getElementById('Change_Request__c_id_name');
    }
    function getCRName(){
    	return "{!JSENCODE(changeRequestName)}";
    }
    function getProblemId(){
    	return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Problem__c_id_id}').value;
    }
    function getProblemNameEle(){
    	//return document.getElementById('{!$Component.taskForm.pbarId.taskdetail.Problem__c_id_name}');
    	return document.getElementById('Problem__c_id_name');
    }
    function getProblemName(){
    	return "{!JSENCODE(problemName)}";
    }
    function renderSIComponent(){
        
        if(cookieValue == true || cookieValue =='true')
            SIComp('/apex/SIContainerPage?oid='+getTaskId()+'&otype=Task__c&wid='+wid+'&stateofIncident='+taskState+'&isChangeCreatable=false'+'&isInactive='+isTaskInactive);
        else     
            removeSI('/apex/SIContainerPage?oid='+getTaskId()+'&otype=Task__c&wid='+wid+'&stateofIncident='+taskState+'&isChangeCreatable=false'+'&isInactive='+isTaskInactive);
     
     }
     function setCatData(catId, catName, catUrgency){
        document.getElementById('{!$Component.taskForm.Category__c_id_id}').value = catId; 
        document.getElementById('{!$Component.taskForm.Category__c_id_name}').value = catName;
        document.getElementById('{!$Component.taskForm.Category__c_id_fkurgency__c}').value = catUrgency;
        FetchUrgencyHTTP();
     }
     function FetchUrgencyHTTP() {
        var  catId ='';
       	if(document.getElementById('{!$Component.taskForm.Category__c_id_id}')!=null && document.getElementById('{!$Component.taskForm.Category__c_id_id}')!='')
       		catId = document.getElementById('{!$Component.taskForm.Category__c_id_id}').value;
        var  clientId = document.getElementById('{!$Component.taskForm.User_id_id}').value;
        if(clientId == '' || clientId == null){
           	clientId = document.getElementById('{!$Component.taskForm.Contact_id_id}').value;
        }
        var catUrgency = document.getElementById('{!$Component.taskForm.Category__c_id_fkurgency__c}').value;
        if(!(catId != '' && catUrgency == '' && clientId == '')) { 
                FetchUrgencyHTTPJS('{!JSENCODE(task.id)}', '{!$Component.taskForm.Category__c_id_id}',
                    '{!$Component.taskForm.User_id_id}', '{!$Component.taskForm.pbarId.taskdetail.Impact__c_id_id}',
                    null,
                    '{!$Component.taskForm.pbarId.taskdetail.Urgency__c_id_name}',
                    '{!$Component.taskForm.pbarId.taskdetail.Urgency__c_id_id}',
                    '{!$Component.taskForm.pbarId.taskdetail.Priority__c_id_name}',
                    '{!$Component.taskForm.pbarId.taskdetail.Priority__c_id_id}',
                    getIsPriorityChangedValId(),
                    '{!$Component.taskForm.pbarId.taskdetail.Priority__c_id_name}',
                    '{!$Component.taskForm.Contact_id_id}');
        }
        SetTaskCategory(catId);     
    } 
    function showDataForObjWithInactive(event){
    	showData(event, null, escape('inactive__c = false'));
    }    
    function FetchPriorityHTTP(){
        var impactId = document.getElementById(getImpactIdVal()).value;
        var urgencyId = document.getElementById(getUrgencyIdVal()).value;
        //alert('FetchPriorityHTTP ');
        FetchPriorityHTTPJS(impactId, urgencyId, getPriorityNameVal(), getPriorityIdVal(), getIsPriorityChangedValId());
    }
    function setIsPriorityChanged(val) {
        var prChangeVal = document.getElementById(getIsPriorityChangedValId());
        if(prChangeVal!=null) {
            prChangeVal.value = val;
        }
    }    
    </script> 
    <apex:outputPanel id="afterSavePanel">
            <script>
			print_url=pageUrl[0]+'{!task.Id}'+'/p';
            print_url_pdf='/apex/PrintObjectDetailPDF?id=' +'{!task.Id}';
            displayIncEle = {!OR(ISBLANK(TRIM(incidentName)),ISNULL(incidentName))};
		    displayChangeEle = {!OR(ISBLANK(TRIM(changeRequestName)),ISNULL(changeRequestName))};
		    displayProblemEle = {!OR(ISBLANK(TRIM(problemName)),ISNULL(problemName))};
		    hideIncChangeProbEle();
		    
                function enableCustomAction(){
        	var instanceId = "{!task.id}";
        	enableCustomActionJS(instanceId);
        }
               function handleSave(){
                     var id = "{!task.id}";
                    window.parent.handleSave(wid, id);
                }
        function renderAddNoteAfterClose(){
            var elem = document.getElementById('{!$Component.taskForm.task_taskNote__c}');
            var durationelem = document.getElementById('{!$Component.taskForm.task_taskDuration__c}');
             if(elem != null && durationelem != null){
                elem.disabled = true;
                elem.className = 'clsInputTextAreaDisabledNote';
                durationelem.disabled = true;
                durationelem.className = 'clsDurationTextBoxDisable';
                var btn = document.getElementById('addNoteBtn');
                btn.disabled= true; btn.className = 'AddButtonOff';
             }
        } 
        
        function validateDuration(){
            var taskDuration = document.getElementById('{!$Component.taskForm.task_taskDuration__c}').value;
            if(taskDuration != ''){
                var split = taskDuration.split(':');
                if(split[0].length == 1){
                    taskDuration = '0'+taskDuration;
                    document.getElementById('{!$Component.taskForm.task_taskDuration__c}').value = taskDuration;
                }
            }
            if(taskDuration != ''){
                var timePat = /^([0-9]{2}):([0-9]{2})$/;
                var matchArray = taskDuration.match(timePat);
                if (matchArray == null) {
                    durationError = 1;
                    Ext.MessageBox.show({ msg: '{!JSENCODE($Label.DurationError)}', buttons: Ext.MessageBox.OK});
                    document.getElementById('{!$Component.taskForm.task_taskDuration__c}').value = '00:00';
                }                  
            }
            
        }  
        function renderAddNoteButton(){
            var cid='{!JSENCODE($CurrentPage.parameters.copyId)}';
            taskState = '{!task.state__c}';
            var elem = document.getElementById('{!$Component.taskForm.task_taskNote__c}');
            var durationelem = document.getElementById('{!$Component.taskForm.task_taskDuration__c}');
            if(elem != null && durationelem != null){
                var btn = document.getElementById('addNoteBtn');
                var val = elem.value;
                if((taskId==null || taskId=='' || taskState == 'false')&&(cid=null||cid=='')){
                       
                    btn.disabled= true; btn.className = 'AddButtonOff';
                    elem.disabled = true;
                    elem.className = 'clsInputTextAreaDisabledNote';
                    durationelem.disabled= true;
                    durationelem.className = 'clsDurationTextBoxDisable';
                }else{
                    if(isNoteEnableFlag){
                     elem.value=' ';
                     isNoteEnableFlag=false;
                    }

                    elem.disabled = false;
                    elem.className = 'clsInputTextAreaNote';
                    durationelem.disabled = false;
                    durationelem.className = 'clsDurationTextBox';
                    if(val == null || val ==''){
                        btn.disabled= true; btn.className = 'AddButtonOff';
                    }else{
                        btn.disabled= false;  btn.className = 'AddButton';
                    }
                } 
                
            }
        } 
        function renderTaskNote(){
            var elem = document.getElementById('{!$Component.taskForm.task_taskNote__c}');
            var durationelem = document.getElementById('{!$Component.taskForm.task_taskDuration__c}');
            if (errormsg!='' && errormsg!=null){
				 Ext.MessageBox.show({ msg: errormsg, buttons: Ext.MessageBox.OK});
				 var btn = document.getElementById('addNoteBtn');
                 btn.disabled= false; btn.className = 'AddButton';             
	             elem = false;
                 elem.className = 'clsInputTextAreaNote';  
			}else if(elem != null && durationelem != null){
                    elem.disabled = false;
                    elem.className = 'clsInputTextAreaNote';
                    elem.value = '';   
                    durationelem.disabled = false;
                    durationelem.className = 'clsDurationTextBox'; 
                }
        }
        function disableAddNote() {
            validateDuration();     
            if(durationError != 1){             
                var taskNote = document.getElementById('{!$Component.taskForm.task_taskNote__c}').value;
				var taskDur = document.getElementById('{!$Component.taskForm.task_taskDuration__c}').value;
                if(taskNote.length > 32000){
                     Ext.MessageBox.show({ msg: '{!JSENCODE($ObjectType.Task__c.fields.note__c.label)}' + ': ' + '{!JSENCODE($Label.TextAreaOverflow)}', buttons: Ext.MessageBox.OK});
                } 
                else{
                    var btn = document.getElementById('addNoteBtn');
                    btn.disabled= true; btn.className = 'AddButtonOff';
                    saveNote(taskNote,taskDur);
                }               
            }
            document.getElementById('{!$Component.taskForm.task_taskDuration__c}').value = '00:00';
            durationError = 0;
        }
        var existCilink = '{!cilink}';
        </script>
        </apex:outputPanel>                             
    <script>    
    var cilink_record = '{!cilink}';
    var isLookup = "{!JSENCODE($CurrentPage.parameters.islookup)}";  
    var isInactive = "{!JSENCODE($CurrentPage.parameters.isinactive)}";   
    
    resizeGridProgressionJS('{!JSENCODE(StageHTML)}','{!JSENCODE(objPluralType)}'); 
    </script>
    </apex:outputPanel>
    <script>
        taskIdSetJS('{!JSENCODE($CurrentPage.parameters.isDirect)}','{!JSENCODE($CurrentPage.parameters.wid)}','{!JSENCODE($CurrentPage.parameters.id)}');    
    </script>
       <apex:outputPanel id="descResolutionPanel">
        <script>
            var taskDesc = "{!JSENCODE(task.taskDescription__c)}";
            var taskResolution = "{!JSENCODE(task.taskResolution__c)}";
            
        </script>
    </apex:outputPanel>
      <apex:outputPanel id="inactivePanel">
        <script>
           function updateInactive(){
          Ext.getCmp('task_inactive__c').setValue('{!task.inactive__c}');  
        }
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="checkUserAccessPanel">
        <script>
        function checkLoogedInUserHasAccess(){
            userHasAccesToInc = document.getElementById('{!$Component.taskForm.checkIncidnetAccess}').value;
            checkLoogedInUserHasAccessJS(userHasAccesToInc);    
        }
       </script>    
    </apex:outputPanel> 
    <apex:outputPanel id="varPanel">
            <script>
             //alert('IN varPanel');
             savedone = {!quickclosedone};
              function AssignNewTaskId(){
                currentTaskId = assignNewTaskIdJS('{!JSENCODE(taskId)}');
                return currentTaskId;              
              }
              function checkEnable(){                  
                  checkEnableJS({!assignMyselfState},{!assignToQueueState},{!assignStaffState},{!assignSuggestedStaffState},{!closeState},{!saveState},{!reOpenState});                  
              }
              //alert('Exit varPanel');
            </script>
      </apex:outputPanel>      
    <apex:outputPanel id="checkPriorityCalculationPanel">
        <script>
            calculatePriority();    
       </script>
    </apex:outputPanel>
    <apex:outputPanel id="panelId">
        <script>
        //alert('in panelId');
         objName = "{!JSENCODE(objName)}";
           initTaskJS("{!JSENCODE(task.name)}",'{!JSENCODE(fCategoryIdStr)}','{!JSENCODE(task.Id)}',"{!isPriorityChanged}","{!JSENCODE(impactName)}","{!JSENCODE(urgencyName)}",'{!iscalcPriority}','{!JSENCODE(priorityName)}',"{!JSENCODE(task.FKCategory__c)}","{!JSENCODE(task.taskResolution__c)}");
            function getTaskInactive(){
            var taskInactive = '{!task.inactive__c}';
            return taskInactive;
        }
        function getTaskId(){
            var taskId = '{! task.Id}';
            return taskId;
        }
        taskState = '{!task.state__c}';
        function getTaskState(){
            var taskState = '{!task.state__c}';
            return taskState;
        }
        cookieValue = Ext.util.Cookies.get(cookieName);
        iFrameSrc='/apex/SIContainerPage?oid={!JSENCODE(task.Id)}&otype=Task__c&wid='+wid+'&stateofIncident='+taskState+'&isChangeCreatable=false'+'&isInactive='+isTaskInactive;
        
        //alert('in exit');
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="errorId">
        <script>
           errormsg =  "{!JSENCODE(messageString)}";             
        </script>
        <script>
        	function showErrorMessageCust(){
        		var elem = document.getElementById('{!$Component.taskForm.validationErrMessages}');
        		if(elem != null && elem.firstChild != null){
        			var ulList = elem.firstChild;
        			var msgvalue = ulList.firstChild.innerHTML;
        			Ext.MessageBox.show({ msg: msgvalue, buttons: Ext.MessageBox.OK});
        		    isError = true;
        		}else{
        			isError= false;
        			updateTitle();	
        		}
        	}
        </script>
    </apex:outputPanel>
        <apex:outputPanel id="titlePanel">
                <script>
                //alert('in title ');
                var newTaskId;
                isTaskInactive= '{!task.inactive__c}';
                function refreshRelatedPortlets(){
                      if(typeof(window.parent.parent.refreshActionItemsPortlet) == 'function')
                            window.parent.parent.refreshActionItemsPortlet('Action Items','TASK');                       
                }
                function resetSupportingInformation(isSave){
                     var v1 = {!task.state__c};
                     var isDisplay = document.getElementById('SIIframeID').style.display;
                      var inactive = {!task.inactive__c}
                    if(!v1 || inactive){ 
                        if(isDisplay !='none' ){
                            window.frames.SIIframeID.disableAll();
                        }
                    }else{
                        if(isDisplay !='none'){
                            window.frames.SIIframeID.enableAll();
                        }
                    }
                }
                    function updateTitle(){
                        var newTitle = '#'+ taskName;  
                         var StageHTML = '{!JSENCODE(StageHTML)}';
                        if(StageHTML != null && StageHTML != '')
                			stageHTMLPrev = StageHTML;
                            if(newTitle == '#'){
                            newTitle = '{!JSENCODE($Label.Task)}';
                        }
                        changeTitleAddStageProgressionJS(newTitle,stageHTMLPrev,'{!JSENCODE($Label.Task)}# ','{!JSENCODE($Label.Task)}');
                        
                        if(taskState == 'false'){
                            renderAddNoteAfterClose();
                        }
                    }
                    
                    function renderAfterReopen(){
                        var elem = document.getElementById('{!$Component.taskForm.task_taskNote__c}');
                        var durationelem = document.getElementById('{!$Component.taskForm.task_taskDuration__c}');
                        if(elem != null && durationelem != null){
                            elem.disabled = false;
                            elem.className = 'clsInputTextAreaNote';
                            durationelem.disabled = false;
                            durationelem.className = 'clsDurationTextBox'; 
                        }
                    }
                    //alert('Ex title ');
            </script>
        </apex:outputPanel>
        <script>
    function callOpenPopup(txtfieldId){ 
        var elemId = null;
        if(txtfieldId == 'User_id_lastname'){
            elemId = '{!$Component.taskForm.User_id_lastname}';
        } else if(txtfieldId == 'User_id_firstname'){
            elemId = '{!$Component.taskForm.User_id_firstname}';        
        } else if(txtfieldId == 'User_id_username'){
            elemId = '{!$Component.taskForm.User_id_username}';     
        }
        var elem = document.getElementById(elemId);
        var txtToSearch = elem.value;
        if(clientSearchPageFlag == 'true'){
           	openPopupWithTitle('ClientSearchPage?str='+txtToSearch,setClientNext,'{!JSENCODE($Label.SelectClients)}');
        } else {
           	openPopup('SearchPage?popupId=Client&isLookup=true',setClientNext);
        } 
    }

    function taboutOpenPopup(objEle){
    	if(taboutFlag != true){
	        if(objEle.value != '' && !popupInprogress) {
	            var objEleId = objEle.id;
	            if(objEleId.indexOf('lastname')>0){
	                if(objEle.value != lastName){
	                    popupInprogress = true;
	                   	openPopupWithTitle('ClientSearchPage?str='+objEle.value,setClientNext,'{!JSENCODE($Label.SelectClients)}');
	                }
	            }
	            if(objEleId.indexOf('username')>0){
	                if(objEle.value != userName){
	                    popupInprogress = true;
	                   	openPopupWithTitle('ClientSearchPage?str='+objEle.value,setClientNext, '{!JSENCODE($Label.SelectClients)}');
	                }
	            }
	            if(objEleId.indexOf('firstname')>0){
	                if(objEle.value != firstName){
	                    popupInprogress = true;
	                   	openPopupWithTitle('ClientSearchPage?str='+objEle.value,setClientNext, '{!JSENCODE($Label.SelectClients)}');
	                }
	            }
	        }       	
    	}
    }

    function setElementValues(){
        popupInprogress = false;
        firstName = document.getElementById('{!$Component.taskForm.User_id_firstname}').value;    
        lastName = document.getElementById('{!$Component.taskForm.User_id_lastname}').value;  
        userName = document.getElementById('{!$Component.taskForm.User_id_username}').value;      
    }
    var stime = '{!serverstarttime}';
    var etime = '{!serverendtime}';
    taskdata += '{!JSENCODE($Label.PM_servertime)}';
    </script>
 <apex:outputPanel id="setClientId">
 	<script>
 	accName = '{!accountName}';
 	function setClient(){
 		remoteCallFlag = false;
 		if(document.getElementById('{!$Component.taskForm.User_id_id}') != null)
	 		document.getElementById('{!$Component.taskForm.User_id_id}').value = ('{!task.BMCServiceDesk__FKClient__c}');
 		if(document.getElementById('{!$Component.taskForm.Contact_id_id}') != null)
	 		document.getElementById('{!$Component.taskForm.Contact_id_id}').value = ('{!task.BMCServiceDesk__FKContact__c}');
 		if(document.getElementById('{!$Component.taskForm.Lead_id_id}') != null)
	 		document.getElementById('{!$Component.taskForm.Lead_id_id}').value = ('{!task.BMCServiceDesk__FKLead__c}');
 	}
 	</script>
 </apex:outputPanel>
    
 <apex:outputPanel id="dummy"></apex:outputPanel>
   
 <apex:outputPanel >
   <script>
    //Form customization
    function setReferenceFieldsId(){
     	<apex:repeat value="{!referenceFieldMap}" var="y">
                       var hiddenId = document.getElementById('{!referenceFieldMap[y].idForId}');
                       var referenceFieldNameEle = document.getElementById('{!referenceFieldMap[y].idForName}');
                       if(hiddenId!= null && typeof(hiddenId) != 'undefined'){
                                 hiddenId.nextSibling.value = hiddenId.value;
                                 referenceFieldNameEle.previousSibling.previousSibling.value = referenceFieldNameEle.value;
                        }
        </apex:repeat>
    }
  </script>
  <apex:form id="taskForm" onsubmit="setReferenceFieldsId();"> 
    <div id="capsule" class="CapsuleDiv1"> 
    <apex:outputpanel id="validationErrMessages" style="display: none;">
    	<apex:messages />
    </apex:outputpanel>
    <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
  
  <apex:actionregion > 
  	<apex:actionFunction action="{!setSelectedClientNext}" name="setClientNext"  
                rerender="User_id_id,Contact_id_id,Lead_id_id,Urgency__c_id_name,Urgency__c_id_id,User_id_username,User_id_lastname,User_id_firstname,setClientId" oncomplete="setClient();FetchUrgencyHTTP();converdisabletoreadonly();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
	  <apex:actionFunction name="calculatePriorityNext" action="{!calculatePriority}" 
                reRender="Priority__c_id_name,panelId,Priority__c__isPriorityChanged,Priority__c_id_id,Task__c_id_duedatetime__c" oncomplete="converdisabletoreadonly();checkSave();"/>
  </apex:actionregion>
  <apex:actionregion >
    <apex:actionFunction action="{!impactQuery}" name="setImpactNext" rerender="Impact__c_id_id,Impact__c_id_name" oncomplete="FetchPriorityHTTP();">
                <apex:param assignTo="{!savedID}" name="savedID" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction name="setCategoryNext" action="{!categoryQuery}" reRender="Category__c_id_name,Urgency__c_id_name,Urgency__c_id_id,priorityID,panelId" oncomplete="calculatePriority();converdisabletoreadonly();checkSave();"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction action="{!deleteTask}" name="deleteTask" reRender="errorId,validationComponent" onComplete="updateTitle();refreshRelatedPortlets();completeDelete();"/>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction action="{!reset}" name="resetTask" rerender="afterSavePanel,inactivePanel,dataPanel,taskdetail,AdditionalFieldspanelBar,staffHiddeninput,staffInfobtn,staffPopupID" oncomplete="renderAddNoteButton();updateInactive();handleResetChange();handleElemEvent();converdisabletoreadonly(); resetSupportingInformation(false);"/>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction action="{!resetClosedTask}" name="closeTaskNext" reRender="afterSavePanel,varPanel,dataPanel,titlePanel,panelId" onComplete="checkEnable();updateTitle();resetSupportingInformation(true);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets();justRerender();afterResetSI();"/>
  </apex:actionregion>	
  <apex:actionregion >
  <apex:actionFunction action="{!descriptionQuery}" name="setDescriptionNext" reRender="descResolutionPanel" oncomplete="refreshDesc();"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  </apex:actionFunction>
  </apex:actionregion>
  <apex:actionRegion >
  <apex:actionFunction name="fetchTaskTemplates" action="{!fetchTaskTemplates}"  rerender="repeatId" oncomplete="afterSavePanel,renderAddNoteButton();converdisabletoreadonly();"> 
         <apex:param assignTo="{!templateId}" name="savedName" value=""/>
  </apex:actionFunction> 
  </apex:actionRegion>
  <apex:actionregion >
  <apex:actionFunction action="{!resolutionQuery}" name="setResolutionNext" reRender="descResolutionPanel" oncomplete="refreshResolution();"> 
               <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  </apex:actionFunction>
  </apex:actionregion>   
  <apex:actionregion >   
	  <apex:actionFunction name="setStatusNext" action="{!statusQuery}" reRender="Status__c_id_name"> 
	         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
	  </apex:actionFunction>
  </apex:actionregion> 
  <apex:actionregion >
    <apex:actionFunction name="setUrgencyNext" action="{!urgencyQuery}" reRender="Urgency__c_id_id,Urgency__c_id_name" oncomplete="FetchPriorityHTTP();converdisabletoreadonly();">
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction name="assignTaskTOStaff" action="{!assignTaskTOStaff}" reRender="Task__c_id_firstname__c,Task__c_id_lastname__c,Task__c_id_profile__c,Task__c_id_phone__c,Task__c_id_extension__c,Task__c_id_queue__c, staffInfobtn, staffPopupID" oncomplete="waitMsg.hide();converdisabletoreadonly();refreshRelatedPortlets()"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction name="assignTaskTOSuggestedStaff" action="{!assignTaskTOSuggestedStaff}" reRender="Task__c_id_firstname__c,Task__c_id_lastname__c,Task__c_id_profile__c,Task__c_id_phone__c,Task__c_id_extension__c,Task__c_id_queue__c,staffHiddeninput, staffInfobtn, staffPopupID" oncomplete="waitMsg.hide();converdisabletoreadonly();refreshRelatedPortlets()"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction name="assignTaskTOQueue" action="{!assignTaskTOQueue}" rerender="staffHiddeninput,staffInfobtn,staffPopupID,Task__c_id_firstname__c,Task__c_id_lastname__c,Task__c_id_profile__c,Task__c_id_phone__c,Task__c_id_extension__c,Task__c_id_queue__c" oncomplete="waitMsg.hide();converdisabletoreadonly();refreshRelatedPortlets();"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>
  </apex:actionregion>
  <apex:actionregion >
  	<apex:actionFunction name="setAssignedTo" action="{!setAssignedTo}" rerender="staffHiddeninput,staffInfobtn,staffPopupID,Task__c_id_firstname__c,Task__c_id_lastname__c,Task__c_id_profile__c,Task__c_id_phone__c,Task__c_id_extension__c,Task__c_id_queue__c" oncomplete="converdisabletoreadonly();refreshRelatedPortlets()"> 
         <apex:param assignTo="{!savedId}" name="savedName" value=""/>
  	</apex:actionFunction>  
  </apex:actionregion>
  <apex:actionFunction action="{!save}" name="saveTask" reRender="validationErrMessages,datePanel1,datePanel2,datePanel3,closeDate1,closeDate2,closeDate3,checkIncidnetAccess,panelId,afterSavePanel,openDateTimeId,varPanel,validationComponent,titlePanel,errorId, pbarId, staffHiddeninput, staffInfobtn,staffPopupID,Priority__c_id_name,firstCol,secondCol" oncomplete="hideWaitMsg();enableCustomAction();showErrorMessageCust();hideIncChangeProbEle();handleSave(); window.parent.parent.refreshActionItemsPortlet('Action Items','TASK');showError();checkEnable();buttonValidator();renderAddNoteButton();resetSupportingInformation(true);converdisabletoreadonly();checkLoogedInUserHasAccess();refreshRelatedPortlets();siControlBack();">
   <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/>
  </apex:actionFunction>
   
   <apex:actionFunction action="{!save}" name="saveBeforeCloseTask" reRender="validationErrMessages,checkIncidnetAccess,panelId,afterSavePanel,openDateTimeId,varPanel,validationComponent,titlePanel,errorId,staffHiddeninput, staffInfobtn,staffPopupID" oncomplete="showErrorMessageCust();justRerender();checkEnable();buttonValidator();updateTitle();handleSave();afterSaveCloseAction();converdisabletoreadonly();checkLoogedInUserHasAccess();refreshRelatedPortlets();">
   <apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/>
   </apex:actionFunction>
   
   <apex:actionFunction name="justRerender" rerender="closeopId"/>
   <apex:actionregion >
   	<apex:actionFunction action="{!copyCommit}" name="copyCommit" reRender="afterSavePanel,dataPanel,openDateTimeId,varPanel,validationComponent,titlePanel,panelId,errorId, pbarId, staffHiddeninput, staffInfobtn,staffPopupID" oncomplete="enableCustomAction();checkEnable();resetSupportingInformation(false);buttonValidator();updateTitle();converdisabletoreadonly();refreshRelatedPortlets();renderAddNoteButton();">
   		<apex:param assignTo="{!chkBoxValue}" name="idSetString" value=""/> 
   	</apex:actionFunction>
   </apex:actionregion>
   <apex:actionregion > 
  		<apex:actionFunction action="{!assignTaskTOMyself}" name="assignTOMyself" reRender="Task__c_id_firstname__c,Task__c_id_lastname__c,Task__c_id_profile__c,Task__c_id_phone__c,Task__c_id_extension__c,Task__c_id_queue__c, staffInfobtn, staffPopupID" oncomplete="waitMsg.hide();converdisabletoreadonly();refreshRelatedPortlets();"/>       
   </apex:actionregion>
   <apex:actionFunction action="{!quickCloseTask}" name="quickCloseTaskNext" reRender="afterSavePanel,validationErrMessages,detailsPanel,varPanel,validationComponent,titlePanel,panelId,firstCol,secondCol,additionalCol" onComplete="if(savedone){renderAddNoteAfterClose();}showErrorMessageCust();checkEnable();updateTitle();showError();resetSupportingInformation(true);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets();justRerender();"/>
   <apex:actionregion > 	            
  		<apex:actionFunction action="{!reopenTask}" name="reopenTaskNext" reRender="varPanel,validationComponent,dataPanel,titlePanel,afterSavePanel,panelId" onComplete="checkEnable();updateTitle();showError();resetSupportingInformation(true);handleResetChange();handleElemEvent();converdisabletoreadonly();refreshRelatedPortlets();justRerender();renderAddNoteButton();renderAfterReopen();"/> 
   </apex:actionregion>
   <apex:actionregion >
   		<apex:actionFunction action="{!nextBtnHandler}" name="nextTaskBtnHandler" oncomplete="remoteCallFlag = false;renderAddNoteButton();renderSIComponent();checkEnable();updateTitle();updateInactive();handleSave();handleResetChange();handleElemEvent();converdisabletoreadonly();ChangeBtnStatus(existCilink);reloadSupportInfo();"
                                    rerender="notepanelid,panelId,afterSavePanel,dataPanel,openDateTimeId,varPanel,validationComponent,titlePanel,errorId, pbarId, staffHiddeninput, staffInfobtn,staffPopupID" > 
                                    <apex:param assignTo="{!tempString}" name="idSetString" value=""/>
  		</apex:actionFunction>
   </apex:actionregion>
   <apex:actionregion >
   		<apex:actionFunction action="{!previousBtnHandler}" name="previousTaskBtnHandler" oncomplete="remoteCallFlag = false;renderAddNoteButton();renderSIComponent();checkEnable();updateTitle();updateInactive();handleSave();handleResetChange();handleElemEvent();converdisabletoreadonly();ChangeBtnStatus(existCilink);reloadSupportInfo();"
                                    rerender="notepanelid,panelId,afterSavePanel,dataPanel,openDateTimeId,closePanel,varPanel,validationComponent,titlePanel,errorId, pbarId, staffHiddeninput, staffInfobtn,staffPopupID" > 
                                    <apex:param assignTo="{!tempString}" name="idSetString" value=""/>
   		</apex:actionFunction>      
   </apex:actionregion>
   <apex:actionregion >
   		<apex:actionFunction name="saveNote" action="{!saveNote}" rerender="validationErrMessages,validationComponent,panelId,errorId" oncomplete="renderTaskNote(); afterAddNote();showErrorMessageCust();">
   			<apex:param assignTo="{!incnote}" name="incnote" value=""/>
   			<apex:param assignTo="{!incDuration}" name="taskDur" value=""/> 
   		</apex:actionFunction>
   </apex:actionregion>
        <table cellpadding="0" cellspacing="0" class="clsMainTableSI">
            <tr class="clsRowGreyBg">
                <td >
                    <div id="btnToolbar"  ></div>
                 </td>
                 </tr>
                 <tr >
                     <td >
                         <apex:outputPanel id="dataPanel">
    <!-- 2 -->              <table  cellpadding="0" cellspacing="0" class="clsTable">  
                                <tr >
                                    <td class="clsTopAlignment75">
                                        <apex:outputPanel id="tablePanel">
                      <!-- 3 -->             <table cellpadding="0" cellspacing="0" class="clsTable">
                                                 <tr>
                                                    <td colspan="3" ><div class="div15pxVspacing"></div></td>
                                                 </tr>
                                                 <tr>
                                                 	<td valign="top">
                                                 		<table class="clsTable" cellspacing="0" cellpadding="0">
                                                 			<tr>
                                                    			<td><apex:inputhidden id="checkIncidnetAccess" value="{!userHasAccessToInc}" /></td>
                                                 			</tr>
                                                 			<tr>
			                                                    <td class="clsInputLabelTD" ><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__Client_Last_Name__c.label}"/></td>
			                                                    <td class="clsInputTextBoxTD"><apex:inputText disabled="false" title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__Client_Last_Name__c.InlineHelpText}" value="{!clientLastName}" id="User_id_lastname" StyleClass="clsInputTextBox"  tabindex="501" onkeyup="popupInprogress = false;" onblur="if(clientSearchPageFlag == 'true'){taboutOpenPopup(this)} else {showData(event,FetchUrgencyHTTP,escape('IsActive = true'));}" /></td>
			                                                    <td class="lookupIconTD">
			                                                    	<div class="lookUpIconDiv">
			                                                        	<input id="lastnameLookup" type="button" onclick="if(!inProgress) { callOpenPopup('User_id_lastname'); }" class="lookupIconOn"  tabindex="502" />
			                                                        </div>
			                                                        <script>lastName = document.getElementById('{!$Component.taskForm.User_id_lastname}').value;</script>
			                                                    </td>
			                                                </tr>
						                                     <tr>
			                                                      <td class="clsInputLabelTD" ><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__Client_First_Name__c.label}"/></td>
			                                                      <td class="clsInputTextBoxTD"><apex:inputText disabled="false" title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__Client_First_Name__c.InlineHelpText}" value="{!clientFirstName}"  id="User_id_firstname" StyleClass="clsInputTextBox"  tabindex="503" onkeyup="popupInprogress = false;" onblur="if(clientSearchPageFlag == 'true'){taboutOpenPopup(this)} else {showData(event,FetchUrgencyHTTP,escape('IsActive = true'));}"/></td>
			                                                      <td class="lookupIconTD">
			                                                        <div class="lookUpIconDiv">
			                                                            <input id="firstnameLookup" type="button" onclick="if(!inProgress) {callOpenPopup('User_id_firstname');}" class="lookupIconOn"  tabindex="504"  />
			                                                        </div>
			                                                        <script>firstName = document.getElementById('{!$Component.taskForm.User_id_firstname}').value;</script>
			                                                       </td>
			                                                 </tr>
                                                 			<tr>
			                                                    <td class="clsInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKClient__c.label}" /><span class="clsRequiredBlack">&nbsp;*</span></td>
			                                                    
			                                                        <td class="clsInputTextBoxTD">
			                                                        <apex:inputText title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKClient__c.InlineHelpText}" value="{!clientName}" styleClass="clsInputTextBox"  id="User_id_username" tabindex="505" onkeyup="popupInprogress = false;" onblur="if(clientSearchPageFlag == 'true'){taboutOpenPopup(this)} else {showData(event,FetchUrgencyHTTP,escape('IsActive = true'));}">
			                                                        <apex:inputhidden value="{!task.BMCServiceDesk__FKClient__c}" id="User_id_id"/>  
			                                                        <apex:inputhidden value="{!task.BMCServiceDesk__FKContact__c}" id="Contact_id_id"/>  
			                                                        <apex:inputhidden value="{!task.BMCServiceDesk__FKLead__c}" id="Lead_id_id"/>  
			                                                        </apex:inputText> 
			                                                        </td>
			                                                        <td class="lookupIconTD">
			                                                        <div class="lookUpIconDiv" style="float:left;">
			                                                            <input id="clientLookup" type="button" onclick="if(!inProgress) {callOpenPopup('User_id_username');}" class="lookupIconOn"  tabindex="506"  />
			                                                        </div>
							                                      <div class="infoBtnDiv">
							                                        <button  type = "button" id="infoBtn" Class="bmcUserInfoPopup" style="background-color:#ffffff;" onmouseover="showClientDetails(event);"/>
							                                      </div> 
			                                                        <script>userName = document.getElementById('{!$Component.taskForm.User_id_username}').value;</script>			                                                        
			                                                       </td>
			                                                 </tr>
			                                                 <tr style="{!categoryShowStyle}">
			                                                    <td class="clsInputLabelTD" >
			                                                        <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKCategory__c.label}"/><apex:outputLabel value=" *" styleClass="clsRequiredBlack" rendered="{!categoryRequired}"/></td>
			                                          
			                                                     <td class="clsInputTextBoxTD">
			                                                         <apex:inputText id="Category__c_id_name" title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKCategory__c.InlineHelpText}" value="{!fCategoryIdStr}" onblur="showData(event,FetchUrgencyHTTP,escape('inactive__c = false'));"  styleClass="clsInputTextBox" tabindex="507"/>
			                                                         <apex:inputhidden value="{!task.BMCServiceDesk__FKCategory__c}" id="Category__c_id_id" />
			                                                         <apex:inputhidden id="Category__c_id_fkurgency__c" /> 
			                                                      </td>
			                                                      <td class="lookupIconTD">
			                                                         <div class="lookUpIconDiv"><input type="button" id="categoryLookup" class="lookupIconOn"  onClick="if(!inProgress) {openPopup('CategorySearchPage?isLookup=true&isSD=true',openCategoryLookup);}" tabindex="508"/></div>
			                                                      </td>
			                                                 </tr>	  
                                                 		</table>
                                                 	</td>
                                                 	<td valign="top">
                                                 	 <apex:outputpanel id="secondCol">
                                                 		<apex:repeat value="{!$ObjectType.BMCServiceDesk__Task__c.FieldSets.BMCServiceDesk__MainPanSecCol}" var="fsVar">
							                             	<apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Task__c.fields[fsVar].accessible}" >
														 	<apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" >
							                             	<apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area'))}" >
							                             	<table  width="340"  cellspacing="0" cellpadding="0" style="margin-left:5px;" class="clsFieldSetMainFormTable" >
							                                    <tr >
							                                            <td class="clsFieldSetMainFormLabelTD">{!$ObjectType.Task__c.fields[fsVar].label}
							                                            <apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
							                                            <span class="clsRequiredBlack">*</span>
							                                            </apex:outputPanel></td>
							                                            <td class="clsFieldSetMainFormTextBoxTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}" >
							                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference')}">
																				<apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].localname].value}"   style="display:none"/>
																				<input type="text"  value="{!task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" onblur="{!IF(referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].hasInActiveField, 'showDataForObjWithInactive(event);' , 'showData(event,null,null);')}"  class="clsInputTextBox" />
																				<input type="text"  value="{!task[fsVar]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForId}" style="display:none"/> 
																				<apex:inputText value="{!task[fsVar]}"   id="referenceId" style="display:none"/>
																			   <input type="button" class="lookupIconOn" style="{!IF(contains($ObjectType.Task__c.Fields[fsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openLookupPopup(this,'{!$ObjectType.Task__c.Fields[fsVar].localname}','Task__c'); return false" /> 
																			   <script>
																							var dorDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').previousSibling.previousSibling.value;
																							if(dorDetailEleValue  == "" || dorDetailEleValue == null)
																								document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = '{!JSENCODE(task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec])}';
																							else
																								document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = dorDetailEleValue; 
																				</script>
																			</apex:outputPanel>
							                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference'))}">
							                                                				<apex:outputpanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date')}">
										                                                		<apex:outputPanel id="datePanel1" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].localName, 'closeDateTime__c'))}">
                                                                                   					<apex:inputField rendered="{!NOT(readOnlyMap[fsVar])}" value="{!task[fsVar]}" styleClass="clsFieldSetMainFormTextBox" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].type}',event)" />
																									<apex:outputPanel rendered="{!readOnlyMap[fsVar]}" layout="block" styleClass="clsOutputPanelReadOnly">
																										<apex:inputField id="readOnlyDate1" value="{!task[fsVar]}" styleClass="clsCustomInputFieldReadOnly"/>
																										<script>var dateField = document.getElementById('{!$Component.readOnlyDate1}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																							 		</apex:outputPanel>
																								</apex:outputPanel>	
									                                                			<apex:outputPanel id="closeDate1" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].localName, 'closeDateTime__c')}">
																									<table cellpadding="0" cellspacing="0">
																										<tr><td>
																											<apex:inputField id="closeDateTime1" value="{!task.BMCServiceDesk__closeDateTime__c}" styleClass="clsFSMainPanTexBoxReadOnlyTask" />
																											<script>var dateField = document.getElementById('{!$Component.closeDateTime1}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																										</td></tr>
																									</table>	
																								</apex:outputPanel>
										                                                	</apex:outputpanel>
										                                                	<apex:outputpanel >
										                                                	<apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date'))}" >
							                                                                   	<apex:outputPanel layout="block" styleClass="{!IF(readOnlyMap[fsVar],'clsOutputPanelReadOnly','')}">
							                                                                       <input type="hidden"  value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true"/>
							                                                                       <apex:inputField value="{!task[fsVar]}" styleClass="{!IF(readOnlyMap[fsVar], 'clsCustomInputFieldReadOnly',IF(CONTAINS($ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].type,'boolean'),'clsInputCheckBoxCustom','clsInputTextBox'))}" />
							                                                                    </apex:outputPanel> 
							                                                                </apex:outputPanel>
										                                                	</apex:outputpanel>	
							                                                </apex:outputPanel>
							                                    </td>
							                                        </tr>           
							                              </table>          
							                             </apex:outputPanel>
							                              <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area')}">
							                             <table width="100%" cellspacing="0" cellpadding="0" style="margin-left:5px;" class="clsFieldSetMainFormTable">
							                                <tr>
							                                    <td colspan="2" class="clsInputBoldLabelTableFirstRowTD">{!$ObjectType.Task__c.fields[fsVar].label}
							                                    	<apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
							                                            <span class="clsRequiredBlack">*</span>
							                                		</apex:outputPanel>
							                                	</td>
							                                </tr>
							                                <tr>
							                                    <td class="clsInputTextAreaTD clsRightPadTD" colspan="2" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
							                                    <div class="clsRelativePosition">
							                                        <input type="hidden" value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true" styleClass="clsInputTextArea"  />
							                                        <apex:inputTextarea value="{!task[fsVar]}" styleClass="clsInputTextArea"  onBlur="" id="inputTextareaId"/>
							                                    </div>
							                                    </td>
							                                     <td  style="vertical-align:top;padding-left:3px;" >
							                                        <input type="button" id="inputTxtAreaButton" class="TextboxPopupIcon" style="display:inline" onclick="showTextEditor(Ext.isIE ? this.parentNode.previousSibling.childNodes[0].childNodes[1].id : this.parentNode.previousSibling.previousSibling.childNodes[1].childNodes[2].id,'{!JSENCODE($ObjectType.Task__c.fields[fsVar].label)}', '{!$ObjectType.Task__c.fields[fsVar].length}', '{!JSENCODE($Label.OK)}', '{!JSENCODE($Label.Cancel)}');"/>
							                                    </td>  
							                                </tr>
							                                </table> 
							                             </apex:outputPanel>
														  </apex:outputPanel>
							                             <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" >
							                              <table  cellspacing="0" cellpadding="0" style="margin-left:5px;" class="multiPickListClsTable" >
							                                <tr>
							                                    <td class="clsFieldSetMainFormLabelTD">{!$ObjectType.Task__c.fields[fsVar].label}</td>
							                                  
							                                </tr>
							                                <tr>
							                                    <td   class="multiPickListClsTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
							                                     	<apex:inputField value="{!task[fsVar]}" styleClass="multiPickListCls"/>
							                                    </td>
							                                </tr>
							                                </table> 
							                             </apex:outputPanel>
							                            </apex:outputPanel>
							                           </apex:repeat>
							                           </apex:outputpanel>
                                                 	</td>
                                                 </tr>
                                               </table>
                                               
                                               <table class="clsTable" cellpadding="0" cellspacing="0">
                                               	<tr>
                                               		<td>
                                               		  <apex:outputpanel id="firstCol" layout="block" style="padding :0px; margin: 0px;">
                                               			<apex:repeat value="{!$ObjectType.BMCServiceDesk__Task__c.FieldSets.BMCServiceDesk__MainPanFirstCol}" var="fsVar">
							                             <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Task__c.fields[fsVar].accessible}" layout="block" style="padding :0px; margin: 0px;">
							                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" layout="block" style="padding :0px; margin: 0px;">
							                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area'))}" layout="block" style="padding :0px; margin: 0px;">
							                             <table  width="340" cellspacing="0" cellpadding="0" class="clsFieldSetMainFormTable" >
							                                                                         
																	  <tr >
							                                            <td class="clsFieldSetMainFormLabelTD" >{!$ObjectType.Task__c.fields[fsVar].label}
							                                            <apex:outputPanel rendered="{!fieldIsRequired[fsVar]}" >
							                                             
							                                            <span class="clsRequiredBlack">*</span>
							                                            </apex:outputPanel></td>
							                                            <td class="clsFieldSetMainFormTextBoxTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
							                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference')}" layout="block" style="padding :0px; margin: 0px;">
																				<apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].localname].value}"   style="display:none"/>
																				<input type="text"  value="{!task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" onblur="{!IF(referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].hasInActiveField, 'showDataForObjWithInactive(event);' , 'showData(event,null,null);')}"  class="clsInputTextBox" />
																				<input type="text"  value="{!task[fsVar]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForId}" style="display:none"/> 
																				<apex:inputText value="{!task[fsVar]}"   id="referenceId" style="display:none"/>
																			   <input type="button" class="lookupIconOn" style="{!IF(contains($ObjectType.Task__c.Fields[fsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openLookupPopup(this,'{!$ObjectType.Task__c.Fields[fsVar].localname}','Task__c'); return false" /> 
																			   <script>
																							var dorDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').previousSibling.previousSibling.value;
																							if(dorDetailEleValue  == "" || dorDetailEleValue == null)
																								document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = '{!JSENCODE(task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec])}';
																							else
																								document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = dorDetailEleValue; 
																				</script>
																			</apex:outputPanel>
							                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference'))}" layout="block" style="padding :0px; margin: 0px;">
							                                                	<apex:outputpanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date')}" layout="block" style="padding :0px; margin: 0px;">
										                                        	<apex:outputPanel id="datePanel2" rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].localName, 'closeDateTime__c'))}" layout="block" style="padding :0px; margin: 0px;">
                                                                                		<apex:inputField rendered="{!NOT(readOnlyMap[fsVar])}" value="{!task[fsVar]}" styleClass="clsFieldSetMainFormTextBox" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].type}',event)" />
																							 <apex:outputPanel rendered="{!readOnlyMap[fsVar]}" layout="block" styleClass="clsOutputPanelReadOnly">
																								<apex:inputField id="readOnlyDate2" value="{!task[fsVar]}" styleClass="clsCustomInputFieldReadOnly"/>
																								<script>var dateField = document.getElementById('{!$Component.readOnlyDate2}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																							 </apex:outputPanel>
																						</apex:outputPanel>	
									                                                	<apex:outputPanel id="closeDate2" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].localName, 'closeDateTime__c')}" layout="block" style="padding :0px; margin: 0px;">
																							<table cellpadding="0" cellspacing="0">
																								<tr><td>
																									<apex:inputField id="closeDateTime2" value="{!task.BMCServiceDesk__closeDateTime__c}" styleClass="clsFSMainPanTexBoxReadOnlyTask" />
																									<script>var dateField = document.getElementById('{!$Component.closeDateTime2}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																								</td></tr>
																							</table>	
																						</apex:outputPanel>
										                                                </apex:outputpanel>
										                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date'))}" layout="block" style="padding :0px; margin: 0px;">
							                                                            	<apex:outputPanel layout="block" styleClass="{!IF(readOnlyMap[fsVar],'clsOutputPanelReadOnly','')}">
							                                                            		<input type="hidden"  value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true"/>
							                                                                	<apex:inputField value="{!task[fsVar]}" styleClass="{!IF(readOnlyMap[fsVar], 'clsCustomInputFieldReadOnly',IF(CONTAINS($ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].type,'boolean'),'clsInputCheckBoxCustom','clsInputTextBox'))}" />
							                                                               	</apex:outputpanel> 
							                                                            </apex:outputPanel>
										                                    </apex:outputPanel>
							                                            </td>
							                                           
							                                        </tr>           
							                              </table>          
							                             </apex:outputPanel>
							                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area')}" layout="block" style="padding :0px; margin: 0px;">
							                             <table width="100%" cellspacing="0" cellpadding="0" class="clsFieldSetMainFormTable">
							                                <tr>
							                                    <td class="clsInputBoldLabelTableFirstRowTD">{!$ObjectType.Task__c.fields[fsVar].label}<apex:outputPanel rendered="{!NOT($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].Nillable)}">
							                                            <span class="clsRequiredBlack">*</span>
							                                            </apex:outputPanel></td>
							                                    <td colspan="2">&nbsp;</td>
							                                </tr>
							                                <tr>
							                                    <td class="clsInputTextAreaTD clsRightPadTD" colspan="2" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
							                                    <div class="clsRelativePosition">
							                                        
							                                        <input type="hidden" value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true" styleClass="clsInputTextArea" />
							                                        <apex:inputTextarea value="{!task[fsVar]}" styleClass="clsInputTextArea"  id="inputTextareaId"/>
							                                    </div>
							                                    </td>
								                                <td  style="vertical-align:top;padding-left:3px;" >
							                                        <input type="button" id="inputTxtAreaButton" class="TextboxPopupIcon" style="display:inline" onclick="showTextEditor( Ext.isIE ? this.parentNode.previousSibling.childNodes[0].childNodes[1].id : this.parentNode.previousSibling.previousSibling.childNodes[1].childNodes[2].id,'{!JSENCODE($ObjectType.Task__c.fields[fsVar].label)}', '{!$ObjectType.Task__c.fields[fsVar].length}', '{!JSENCODE($Label.OK)}', '{!JSENCODE($Label.Cancel)}');"/>
							                                    </td>
							                                </tr>
							                                </table> 
							                             </apex:outputPanel>
														 </apex:outputPanel>
							                             <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" >
							                              <table class="multiPickListClsTable" cellspacing="0" cellpadding="0" >
							                                <tr>
							                                    <td class="clsFieldSetMainFormLabelTD">{!$ObjectType.Task__c.fields[fsVar].label}</td>
							                                    
							                                </tr>
							                                <tr>
							                                    <td   class="multiPickListClsTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
							                                    	<apex:inputField value="{!task[fsVar]}" styleClass="multiPickListCls"/>
							                                    </td>
							                                </tr>
							                                </table> 
							                             </apex:outputPanel>
							                            </apex:outputPanel>
							                           </apex:repeat>
							                           </apex:outputpanel>
                                               		</td>
                                               	</tr>
                                               </table>
                                               
                                               
												<table cellpadding="0" cellspacing="0" class="clsTable">
                                                    <tr>
                                                        <td class="clsInputBoldLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__TaskHistory__c.fields.BMCServiceDesk__note__c.label}" /></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="clsInputTextAreaTDNote">
                                                        <table cellpadding="0px" cellspacing="0px" class="width100">
                                                            <tr>
                                                                <td colspan="2" class="clsRightPadTD">
                                                                    <apex:inputTextarea title="{!$Label.bmcservicedesk__tooltipnote}" value="{!incNote}" styleClass="clsInputTextAreaNote"  tabindex="509" id="task_taskNote__c"  onkeyup="renderAddNoteButton();"/>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                               <td class="addNoteBtnStyle1">
                                                                    <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__TaskHistory__c.fields.BMCServiceDesk__duration__c.label}" styleClass="clsDurationLabel"/>
                                                                    <apex:inputText value="{!incDuration}" styleClass="clsDurationTextBox" id="task_taskDuration__c" title="{!$Label.bmcservicedesk__tooltipduration}" tabindex="511" onblur="validateDuration();" onfocus=""/><apex:outputLabel value="{!$Label.bmcservicedesk__hhmm}" styleClass="clsTimeLabel"/>
                                                                </td>
                                                                <td class="addNoteBtnStyle2" align="right">
                                                                    <input type="button" value="{!JSENCODE($Label.Add)}" class="AddButton" id="addNoteBtn" onclick="disableAddNote()" />                                                
                                                                </td> 
                                                            </tr>                                                             
                                                        </table>
                                                        </td>
                                                    </tr>
                                                   
                                                   
                                                   
                                                </table>
                                 </apex:outputPanel>
                             </td>
                             
                            
                            <td ><div class="div20pxHspacing"/></td>
                              <td class="clsTopAlignment25">
                                    <div class="panelCapsule">
                                        <apex:outputPanel id="PanelbarOutputPanel">
                                            <apex:panelBar headerClass="clsRowBlueBgPanel" switchType="ajax" id="pbarId" >
                                                <apex:panelBarItem label="{!$Label.bmcservicedesk__details}" expanded="true" id="taskdetail" headerClass="panelHeader" contentClass="panelContent">
                                                   	<div id="AccordionDiv"> 
                                                   		<apex:outputPanel id="detailsPanel">  
                                                        <table cellpadding="0" cellspacing="0" class="clsTable">
                                                            <tr>
                                                                <td height="15"></td>
                                                            </tr> 
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD">
                                                                    <apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKStatus__c.label}"/>
                                                                </td>
                                                                <td class="clsPanelInputTextboxTD1"> 
                                                                   <apex:inputText id="Status__c_id_name" value="{!statusName}"  title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKStatus__c.InlineHelpText}" styleClass="clsPanelInputTextbox" onblur="showData(event,'',escape('inactive__c = false and appliesToTask__c = true'))" tabindex="511"/>
                                                                </td>
                                                                <td class="lookupIconPanelTD">
                                                                    <div class="lookUpIconDiv"><input type="button" id="statusLookup" onClick="if(!inProgress) {openPopup('SearchPage?popupId=Status&isLookup=true&filterClause='+escape('inactive__c = false and appliesToTask__c = true'),setStatusNext);}" class="lookupIconOn" tabindex="512"/></div>
                                                                 </td>
                                                            </tr>
                                                            <tr>
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKImpact__c.label}" /></td>
                                                                <td class="clsPanelInputTextboxTD1" align="right"><apex:inputText id="Impact__c_id_name" value="{!impactName}" title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKImpact__c.InlineHelpText}" styleClass="clsPanelInputTextbox" onblur="showData(event,FetchPriorityHTTP,escape('inactive__c = false')); " tabindex="514"/>
                                                                                                                  <apex:inputhidden id="Impact__c_id_id" value="{!task.BMCServiceDesk__FKImpact__c}"/>  
                                                                </td>
                                                                <td class="lookupIconPanelTD">
                                                                      <div class="lookUpIconDiv"><input id="impactLookup" class="lookupIconOn" type="button" onclick="if(!inProgress) { openPopup('SearchPage?popupId=Impact&isLookup=true&filterClause='+escape('inactive__c = false'),openImpactLookup);}"  tabindex="515"/></div>
                                                                 </td>
                                                            </tr>
                                                            <tr>
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKUrgency__c.label}" /></td>
                                                                <td class="clsPanelInputTextboxTD1"><apex:inputText id="Urgency__c_id_name" value="{!urgencyName}"  title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKUrgency__c.InlineHelpText}" styleClass="clsPanelInputTextbox" onblur="showData(event,FetchPriorityHTTP,escape('inactive__c = false'),escape('urgencyflag')); " tabindex="516"/>
                                                                                                    <apex:inputhidden id="Urgency__c_id_id" value="{!task.BMCServiceDesk__FKUrgency__c}"/>
                                                                </td>
                                                                <td class="lookupIconPanelTD" >
                                                                    <div class="lookUpIconDiv">
                                                                        <!--<apex:commandButton onclick="openLookup('Urgency',setUrgencyNext);" oncomplete="calculatePriority();" styleClass="lookupIconOn" reRender="dummy,Priority__c_id_name" />-->
                                                                        <input class="lookupIconOn" id="urgencylookup" type="button" onclick="if(!inProgress) {openPopup('SearchPage?popupId=Urgency&isLookup=true&filterClause='+escape('inactive__c = false'),openUrgencyLookup);}"  tabindex="517"/>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKPriority__c.label}" /></td>
                                                                <td class="clsPanelInputTextboxTD1"><apex:inputText title="{!$ObjectType.BMCServiceDesk__Task__c.fields.BMCServiceDesk__FKPriority__c.InlineHelpText}" styleClass="clsPanelInputTextboxReadOnly" value="{!priorityName}"
                                                                    id="Priority__c_id_name" disabled="true" />
                                                                    <apex:inputhidden value="{!isPriorityChanged}" id="Priority__c__isPriorityChanged"/>
                                                                    <apex:inputhidden value="{!task.BMCServiceDesk__FKPriority__c}" id="Priority__c_id_id"/>
                                                                    <apex:inputhidden value="{!dueDateCalculationOption}" id="dueDateCalculationOption"/>
                                                                </td>
                                                            </tr>
															
                                                            <tr id="incidentEle">
                                                              <td class="clsPanelInputLabelTD" ><apex:outputLabel value="{!IF(isAssocistedToSR == $Label.bmcservicedesk__extjsmessageyes, $Label.bmcservicedesk__servicerequestnumber,$ObjectType.BMCServiceDesk__Incident__c.fields.Name.label)}"/></td>
                                                              <td class="clsHyperLinkTD" >
                                                              	<a  onclick="OpenRecord('IncidentPage')" id="Incident__c_id_name" href="#">{!JSENCODE(incidentName)}</a>
                                                              	<apex:inputhidden value="{!task.BMCServiceDesk__FKIncident__c}" id="Incident__c_id_id"/>
                                                              </td>
                                                            </tr>  
															<tr id="changeEle">
                                                              <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Change_Request__c.fields.Name.label}"/></td>
                                                              <td class="clsHyperLinkTD">
                                                              	<a  onclick="OpenRecord('ChangeRequestPage')" id="Change_Request__c_id_name" href="#">{!JSENCODE(changeRequestName)}</a>
                                                              	<!-- <apex:outputLink style="padding-left:15px;" title="Add tooltip here" onclick="OpenRecord('ChangeRequestPage')" id="Change_Request__c_id_name">{!JSENCODE(changeRequestName)}</apex:outputLink>  -->
                                                              	<apex:inputhidden value="{!task.BMCServiceDesk__FKChange__c}" id="Change_Request__c_id_id"/>
                                                              </td>
                                                            </tr>
															<tr id="problemEle">
                                                              <td class="clsPanelInputLabelTD" ><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Problem__c.fields.Name.label}"/></td>
                                                              <td class="clsHyperLinkTD">
                                                              	<a onclick="OpenRecord('ProblemPage')" id="Problem__c_id_name" href="#">{!JSENCODE(problemName)}</a>
                                                              	<!-- <apex:outputLink style="padding-left:15px;" title="Add tooltip here" onclick="OpenRecord('ProblemPage')" id="Problem__c_id_name">{!JSENCODE(problemName)}</apex:outputLink>  -->
                                                              	<apex:inputhidden value="{!task.BMCServiceDesk__FKProblem__c}" id="Problem__c_id_id"/>
                                                              </td>
                                                            </tr>
															<tr>
                                                              <td class="div5pxVspacingfortooltip"></td>
                                                            </tr>
                                                             <apex:outputPanel id="hideRelatedICP">
                                                            	<script>
                                                            		hideIncChangeProbEle();
                                                            	</script>
                                                            </apex:outputPanel>
                                                            </table>
                                                            <apex:outputpanel id="detailsCol">
                                                                <apex:repeat value="{!$ObjectType.BMCServiceDesk__Task__c.FieldSets.BMCServiceDesk__detailsFS}" var="detailsFsVar">                                      
										                          <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].accessible}" >
										                          <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'multipicklist'))}" >
										                             <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'area'))}" >
										                              <table cellpadding="0" cellspacing="0" class="clsFieldSetAccordianTable">
										                                    <tr >
										                                            <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Task__c.fields[detailsFsVar].label}
										                                            <apex:outputPanel rendered="{!fieldIsRequired[detailsFsVar]}">
										                                             <span class="clsRequiredBlack">*</span>
										                                             </apex:outputPanel></td>
										                                            <td class="clsFieldSetAccordianTextBoxTD clsCustomCR" title="{!$ObjectType.Task__c.fields[detailsFsVar].inlineHelpText}" >
										                                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'reference')}">
																							<apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Task__c.Fields[detailsFsVar].localname].value}"   style="display:none"/>
																							<input type="text"  value="{!task[referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}" onblur="{!IF(referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].hasInActiveField, 'showDataForObjWithInactive(event);' , 'showData(event,null,null);')}"  class="clsPanelInputTextbox" />
																							<input type="text"  value="{!task[detailsFsVar]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForId}" style="display:none"/> 
																							<apex:inputText value="{!task[detailsFsVar]}"   id="referenceId" style="display:none"/>
																						   <input type="button" class="lookupIconOn" style="{!IF(contains($ObjectType.Task__c.Fields[detailsFsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openLookupPopup(this,'{!$ObjectType.Task__c.Fields[detailsFsVar].localname}','Task__c'); return false" /> 
																						   <script>
																										var dorDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}').previousSibling.previousSibling.value;
																										if(dorDetailEleValue  == "" || dorDetailEleValue == null)
																											document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}').value = '{!JSENCODE(task[referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].referenceNameFieldSec])}';
																										else
																											document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}').value = dorDetailEleValue; 
																							</script>
																						</apex:outputPanel>
                                                                                        
										                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'reference'))}">
										                                                	
										                                                	<apex:outputpanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'date')}">
										                                                		<apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].localName, 'closeDateTime__c'))}">
                                                                                   					<apex:inputField id="datePanel3" rendered="{!NOT(readOnlyMap[detailsFsVar])}" value="{!task[detailsFsVar]}" styleClass="clsFieldSetAccordianTextBox" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Task__c.Fields[detailsFsVar].type}',event)" />
																									<apex:outputPanel rendered="{!readOnlyMap[detailsFsVar]}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																										<apex:inputField id="readOnlyDate3" value="{!task[detailsFsVar]}" styleClass="clsCustomInputFieldReadOnly" />
																										<script>var dateField = document.getElementById('{!$Component.readOnlyDate3}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																							 		</apex:outputPanel>
																								</apex:outputPanel>	
									                                                			<apex:outputPanel id="closeDate3" rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].localName, 'closeDateTime__c')}">
																									<table cellpadding="0" cellspacing="0">
																										<tr><td>
																											<apex:inputField id="closeDateTime3" value="{!task.BMCServiceDesk__closeDateTime__c}" styleClass="clsFieldSetAccordianTexBoxReadOnly" />
																											<script>var dateField = document.getElementById('{!$Component.closeDateTime3}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																										</td></tr>
																									</table>	
																								</apex:outputPanel>
										                                                	</apex:outputpanel>
										                                                	<apex:outputpanel >
										                                                	<apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'date'))}" >
										                                                		<apex:outputPanel layout="block" styleClass="{!IF(readOnlyMap[detailsFsVar],'clsAccordionOutputPanelReadOnly','')}">
							                                                                   	   <input type="hidden"  value="{!task[detailsFsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}" inFieldSet="true"/>
                                                                                                   <apex:inputField value="{!task[detailsFsVar]}" styleClass="{!IF(readOnlyMap[detailsFsVar], 'clsCustomInputFieldReadOnly',IF(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox'))}" />
							                                                                     </apex:outputPanel>  
							                                                                </apex:outputPanel>
										                                                	</apex:outputpanel>
										                                                </apex:outputPanel>
										                                            </td>
										                                            
										                                    </tr>           
										                                  </table>         
										                             </apex:outputPanel>
										                             <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'area')}">
										                             <table cellpadding="0" cellspacing="0" class="clsFieldSetAccordianTable">
										                                    <tr >
										                                            <td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Task__c.fields[detailsFsVar].label}
										                                            <apex:outputPanel rendered="{!fieldIsRequired[detailsFsVar]}">
										                                             <span class="clsRequiredBlack">*</span>
										                                             </apex:outputPanel></td>
										                                            <td class="clsFieldSetAccordianTextBoxTD clsCustomCR" title="{!$ObjectType.Task__c.fields[detailsFsVar].inlineHelpText}" >
										                                                <input type="hidden" value="{!task[detailsFsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[detailsFsVar].localname].idForName}" inFieldSet="true" />
										                                                <apex:inputTextarea value="{!task[detailsFsVar]}" styleClass="clsFieldSetAccordianTexArea"  />
											        	                           </td>
										                                           
										                                </tr>
										                                </table>
										                             </apex:outputPanel>
										                              </apex:outputPanel>
										                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[detailsFsVar].type,'multipicklist'))}" >
										                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
										                                <tr>
										                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Task__c.fields[detailsFsVar].label}</td>
										                                   
										                                </tr>
										                                <tr>
										                                    <td   class="multiPickListClsTD" title="{!$ObjectType.Task__c.fields[detailsFsVar].inlineHelpText}">
										                                     <apex:inputField value="{!task[detailsFsVar]}" styleClass="accordionMultiPickListCls"/>
										                                                   
										                                    
										                                    </td>
										                                        
										                                </tr>
										                                </table> 
										                             </apex:outputPanel>
										                        </apex:outputPanel>
	                                       					 </apex:repeat>
	                                       					 </apex:outputpanel>
                                       					 	
                                                    </apex:outputPanel>
                                                   	</div>
                                                  </apex:panelBarItem>
                                                  <apex:panelBarItem label="{!$Label.StaffAssignmentDetails }" headerClass="panelHeader staffAssignmentPanelHeader"  id="staffAssignmentPanel" contentClass="panelContent">
                                                  		<script>
                                                  			var staffPanelBar = document.getElementById('{!$Component.staffAssignmentPanel}');
                                                  			var i=0;
                                                  			if(staffPanelBar.childNodes != null || staffPanelBar.childNodes != 'undefined')
						                               			if(staffPanelBar.childNodes.length > 0){
							                               			for(i=0; i<staffPanelBar.childNodes.length;i++){
							                               				if(staffPanelBar.childNodes[i] != null)
							                               					if(staffPanelBar.childNodes[i].className.indexOf('staffAssignmentPanelHeader') > 0){
							                               						staffPanelBar.childNodes[i].title = '{!JSENCODE($Label.StaffAssignmentDetails)}';
							                               					}
							                               			}                               			
						                               			}
                                                  		</script>
                                                  		<table cellpadding="0" cellspacing="0" class="clsTable">
                                                            <tr>
                                                                    <td colspan="3" class="viewMoreDtlsBg">
                                                                    <button  type ="button" id="staffInfobtn" Class="bmcUserInfoPopup" onmouseover="showInfoPopup(event,'staffPopupDiv','staff');"/></td>
                                                            </tr>                                                            
                                                            <tr>
                                                                <td height="15"></td>
                                                            </tr> 
                                                            <tr>                    
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.FirstName.label}"/></td>
                                                                <td class="clsPanelInputTextboxTD1">
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_firstname}" value="{!firstName}" id="Task__c_id_firstname__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                                 <td class="lookupIconPanelTD">&nbsp;</td>
                                                            </tr>
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.LastName.label}"/></td>
                                                                <td class="clsPanelInputTextboxTD1">
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_lastname}" value="{!lastName}" id="Task__c_id_lastname__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                                 <td class="lookupIconPanelTD">&nbsp;</td>
                                                            </tr>
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.Profile.label}"/></td>
                                                                <td class="clsPanelInputTextboxTD1">
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_profile}" value="{!profile}" id="Task__c_id_profile__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                                 <td class="lookupIconPanelTD">&nbsp;</td>
                                                            </tr>
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Phone.label}"/></td>
                                                                <td class="clsPanelInputTextboxTD1">
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_phone}" value="{!phone}" id="Task__c_id_phone__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                                 <td class="lookupIconPanelTD">&nbsp;</td>
                                                            </tr>
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$ObjectType.User.fields.Extension.label}"/></td>
                                                                <td class="clsPanelInputTextboxTD1">
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_extension}" value="{!extension}" id="Task__c_id_extension__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                                 <td class="lookupIconPanelTD">&nbsp;</td>
                                                            </tr>
                                                            <tr >
                                                                <td class="clsPanelInputLabelTD"><apex:outputLabel value="{!$Label.bmcservicedesk__queue}" /></td>
                                                                <td class="clsPanelInputTextboxTD" >
                                                                    <apex:inputText title="{!$Label.bmcservicedesk__tooltip_staffassignment_queue}" value="{!queue}" id="Task__c_id_queue__c"   styleClass="clsPanelInputTextboxReadOnly" />
                                                                </td>
                                                            </tr>                                                     
                                                            
                                     						</table>
                                     				</apex:panelBarItem>
                                                    <apex:panelBarItem id="AdditionalFieldspanelBar" label="{!$Label.bmcservicedesk__additionaldetailscustomtask}" headerClass="panelHeader" contentClass="panelContent">
                                                    	<div id="AccordionDiv"> 
                                                    	<table cellpadding="0" cellspacing="0">
                                                    	<tr>
                                                           <td class="div15pxVspacing"></td>
                                                        </tr>
                                                        <tr>
                                                        <td>
                                                        <script>
                                                        	hideCustomFieldAccordion = true;
                                                        </script>
                                                        <apex:outputpanel id="additionalCol">
                                                    	<apex:repeat value="{!$ObjectType.BMCServiceDesk__Task__c.FieldSets.BMCServiceDesk__OtherFieldsSection}" var="fsVar">
			                                               <apex:outputPanel rendered="{!$ObjectType.BMCServiceDesk__Task__c.fields[fsVar].accessible}" >
			                                                <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" >
			                                                     <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area'))}" >
			                                                     	<table class="clsFieldSetAccordianTable" cellpadding="0" cellspacing="0">  
			                                                        	<tr >
			                                                            	<td class="clsFieldSetAccordianLabelTD" >{!$ObjectType.Task__c.fields[fsVar].label}
			                                                                	<apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
			                                                                      <span class="clsRequiredBlack">*</span>
			                                                                    </apex:outputPanel>
			                                                                </td>
			                                                                <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}" style="padding-bottom: 5px;">
			                                                                    <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference')}">
																					<apex:inputText value="{!referenceFieldMap[$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].localname].value}"   style="display:none"/>
																					<input type="text"  value="{!task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" onblur="{!IF(referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].hasInActiveField, 'showDataForObjWithInactive(event);' , 'showData(event,null,null);')}"  class="clsPanelInputTextbox" />
																					<input type="text"  value="{!task[fsVar]}" id="{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForId}" style="display:none"/> 
																					<apex:inputText value="{!task[fsVar]}"   id="referenceId" style="display:none"/>
																				   <input type="button" class="lookupIconOn" style="{!IF(contains($ObjectType.Task__c.Fields[fsVar].type, 'reference'), 'display:inline', 'display:none')}" onclick="openLookupPopup(this,'{!$ObjectType.Task__c.Fields[fsVar].localname}','Task__c'); return false" /> 
																				   <script>
																								var dorDetailEleValue = document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').previousSibling.previousSibling.value;
																								if(dorDetailEleValue  == "" || dorDetailEleValue == null)
																									document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = '{!JSENCODE(task[referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameField][referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].referenceNameFieldSec])}';
																								else
																									document.getElementById('{!referenceFieldMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}').value = dorDetailEleValue; 
																					</script>
																				</apex:outputPanel>
			                                                                    <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'reference'))}">
			                                                                    	<apex:outputpanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date')}">
			                                                                    			<!-- Close Date specific code is not present here because In this Fild set only Custom Field added by end user will be avaible -->
										                                                	<apex:inputField rendered="{!NOT(readOnlyMap[fsVar])}" value="{!task[fsVar]}" styleClass="clsFieldSetAccordianTextBox" onclick="setDatePickerPosition('{!$ObjectType.BMCServiceDesk__Task__c.Fields[fsVar].type}',event)" />
																							<apex:outputPanel rendered="{!readOnlyMap[fsVar]}" layout="block" styleClass="clsAccordionOutputPanelReadOnly">
																								<apex:inputField id="readOnlyDate4" value="{!task[fsVar]}" styleClass="clsCustomInputFieldReadOnly"/>
																								<script>var dateField = document.getElementById('{!$Component.readOnlyDate4}'); if(dateField != null && dateField != 'undefined'){dateField.disabled = true;}</script>
																							 </apex:outputPanel>	
																					</apex:outputpanel>
										                                            <apex:outputPanel rendered="{!NOT(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'date'))}" >
					                                                                   	<apex:outputPanel layout="block" styleClass="{!IF(readOnlyMap[fsVar],'clsAccordionOutputPanelReadOnly','')}">
					                                                                       <input type="hidden"  value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true"/>
                                                                                           <apex:inputField value="{!task[fsVar]}" styleClass="{!IF(readOnlyMap[fsVar], 'clsCustomInputFieldReadOnly',IF(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'boolean'),'clsAccordianCheckBoxCustom','clsFieldSetAccordianTextBox'))}" />
					                                                                     </apex:outputPanel>
					                                                                </apex:outputPanel>
								                                                </apex:outputPanel>
			                                                                </td>
			                                                          </tr>           
			                                                       </table>         
			                                                     </apex:outputPanel>
			                                                     <apex:outputPanel rendered="{!CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'area')}">
			                                                     <table class="clsFieldSetAccordianTable" cellpadding="0" cellspacing="0"> 
			                                                            <tr >
			                                                                    <td class="clsFieldSetAccordianLabelTD">{!$ObjectType.Task__c.fields[fsVar].label}
			                                                                    <apex:outputPanel rendered="{!fieldIsRequired[fsVar]}">
			                                                                      <span class="clsRequiredBlack">*</span>
			                                                                    </apex:outputPanel></td>
			                                                                    <td class="clsFieldSetAccordianTextBoxTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}" >
			                                                                        <input type="hidden" value="{!task[fsVar]}" id="{!otherFieldsMap[$ObjectType.Task__c.Fields[fsVar].localname].idForName}" inFieldSet="true" />
			                                                                        <apex:inputTextarea value="{!task[fsVar]}" styleClass="clsFieldSetAccordianTexArea"  onBlur="" />
			                                                                   </td>
			                                                                  
			                                                        </tr>
			                                                      </table>
			                                                     </apex:outputPanel>
			                                                     </apex:outputPanel>
			                                                      <apex:outputPanel rendered="{!(CONTAINS($ObjectType.BMCServiceDesk__Task__c.fields[fsVar].type,'multipicklist'))}" >
										                              <table class="accordionMultiPickListClsTable" cellspacing="0" cellpadding="0" >
										                                <tr>
										                                    <td class="clsAccordianMultiPickListLabelTD">{!$ObjectType.Task__c.fields[fsVar].label}</td>
										                                   
										                                </tr>
										                                <tr>
										                                    <td   class="multiPickListClsTD" title="{!$ObjectType.Task__c.fields[fsVar].inlineHelpText}">
										                                     <apex:inputField value="{!task[fsVar]}" styleClass="accordionMultiPickListCls"/>
										                                                   
										                                    
										                                    </td>
										                                        
										                                </tr>
										                                </table> 
										                             </apex:outputPanel>
										                            </apex:outputPanel>
										                            <script>
										                            
										                            if({!$ObjectType.BMCServiceDesk__Task__c.fields[fsVar].accessible}){
										                            	hideCustomFieldAccordion= false;
										                            }
										                            </script>
			                                        	</apex:repeat> 
			                                        </apex:outputpanel>
			                                        </td>
			                                        </tr>
			                                        </table>
			                                        </div>
			                                        <script>
			                                        	var additionalFieldAcc = document.getElementById(TaskPageComp.ComponentVars.additionalFieldsPanelId);
														if(additionalFieldAcc != null && hideCustomFieldAccordion){
															additionalFieldAcc.style.display = 'none';	
														}
			                                        </script>
                                                    </apex:panelBarItem>
                                               </apex:panelBar>    
                                        </apex:outputPanel>
                                  	   </div>
                                     </td>  
                            </tr>                             
 					</table>
                    </apex:outputPanel>
                    </td>
                    </tr>
				   </table>    
                   <div style="display:none">
                        <apex:outputpanel id="staffPopupID">
                       <div id="staffPopupDiv" >                           
                            <table  cellspacing="0" cellpadding ="0" >
                            <tr>
                                <td ><apex:inputHidden id="staffHiddeninput" value="{!user.Id}" /></td>
                                <td>
                                <table cellspacing="0" cellpadding ="0">
                                        <tr >
                                         <td style=" padding-top:5px; padding-left:4px; " class="clsInputBoldLabelTooltip1">                                        
                                         <div id="userNameforttdivId"></div> 
                                          </td>
                                        </tr>
                                        <tr style="{!IF(user.title=='','display:none','')}">
                                       
                                        <td style=" padding-top:1px; padding-bottom: 4px; padding-left:4px;" class="clsInputLabelTooltipTitle1">
                                       
                                        <div id="userTitleforttdivId"></div> 
                                        </td>
                                        </tr>
                                        <tr  style="{!IF(user.street=='','display:none','')}">
                                        <td style="padding-left:4px; padding-top:1px;" class="clsInputLabelTooltip1"> 
                                       
                                        <div id="userAddressforttdivId"> {!user.street} </div>  
                                       </td>
                                        </tr>
                                        
                                        <tr style=" {!IF(user.city =='' && user.state =='' && user.Postalcode =='','display:none','')}">
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userCSZforttdivId"></div></td>
                                                                               </tr>
                                        <tr style="{!IF(user.country=='','display:none','')}">
                                        <td style="padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userCountryforttdivId"></div> 
                                        </td>
                                        </tr>                                        
                                        <tr style=" {!IF(user.Phone=='','display:none','')}">
                                        <td  style=" padding-top:5px; padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userPhoneforttdivId"></div> 
                                        </td>
                                        </tr>
                                        <tr style=" {!IF(user.email=='','display:none','')}">
                                        <td style="padding-bottom: 5px; padding-top:1px; padding-left:4px;" class="clsInputLabelTooltip1">
                                        <div id="userEmailforttdivId"></div>
                                           </td>
                                         </tr>                                                                              
                                </table>
                                </td>
                            </tr>
                           </table>
                        
                        </div>
                        <script>
                          function tooltipforstaff(){
                          
                            var cszstringuser = formCSZString('{!JSENCODE(user.city)}','{!JSENCODE(user.state)}','{!JSENCODE(user.Postalcode)}');
                            tooltipforstaffJS('{!JSENCODE(user.Name)}','{!JSENCODE(user.title)} ',cszstringuser,'{!JSENCODE(user.country)}','{!JSENCODE(user.Phone)}','{!JSENCODE(user.email)}');
                          }
                        </script>
                     </apex:outputpanel>

                    </div>
        </div>
    <apex:outputPanel id="repeatId">
        <script> taboutFlag=true; </script>
             <apex:repeat value="{!keyValues}" var="mapkeys"> 
                 <script>
                        keyName='{!mapkeys.key}';
                        keyValue={!mapkeys.value};
                        if(keyName=='task_inactive__c'){
                            Ext.getCmp('task_inactive__c').setValue(keyValue);
                        }else if(keyName=='task_OwnerId'){
                            ownerIdString = keyValue;
                        }else{
                            setTaskTemplVal(keyName,keyValue); 
                        }
                </script>
             </apex:repeat>
            <script>
                    setAssignedToJS(ownerIdString);                 
             </script>
         </apex:outputPanel>       

       <!--  IE7-8 Related Changes -->
      
                              <div id="detailsDivSI">
                      <table  class="onDemandSITableCls" id="onDemandSITableId">
                          <tr>
                             <td id="noSIAvailTD">{!JSENCODE($Label.SIMessageForNewIncident)}</td>
                          </tr>  
                          <tr >
                              <td id="linkSIAvailTD">
                                 <table cellpadding="0"  cellspacing="0" class="SICheckboxLinkInnerTable">
                                    <tr>
                                        <td id="configureSITD">
                                            <input type="checkbox" title="{!JSENCODE($Label.ShowSupportingInformation)}" id="configureSIId" onClick="writeCookie();"/>&nbsp;{!JSENCODE($Label.SIMessageForConfiguration)}
                                            
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <a id="getSIUrl" href="JavaScript:void(0);" onClick="SIComp('/apex/SIContainerPage?oid='+getTaskId()+'&otype=Task__c&wid='+wid+'&stateofIncident='+taskState+'&isChangeCreatable=false'+'&isInactive='+isTaskInactive);" >{!JSENCODE($Label.SIMessageForExistingIncident)}</a>
                                        </td>
                                    </tr>
                                  </table>
                                
                              </td>
                          </tr>
                       </table>
                       <iframe name='SIIframeID' id='SIIframeID'  width='100%' height='100%' frameborder='0' style="display:none"/>
                        </div>
                      
                 <apex:outputPanel id="dummy"></apex:outputPanel>
                 <c:TabOutComponent ></c:TabOutComponent>
<!--  Ends IE7-8 Related Changes Taken div inside form-->
  </apex:form>
  </apex:outputPanel>
    <script>
    /*window.onload = function(){
    if({!copyMe}){  
         copyCommit({!chkBoxValue});
        }
     }*/
      customActionJsonString = {!customActionJsonString};
     document.getElementById('{!$Component.taskForm.task_taskDuration__c}').disabled = true;
     renderAddNoteButton();  
</script>
<apex:outputPanel id="closeopId">
        <script>
        </script>
    </apex:outputPanel>
<script>

    var taskend = '{!taskendtime}';
    servertime = taskend - stime;
    
    taskdata += servertime;
    taskdata += '<br>';
    var pageloaddate = new Date();
    var renderingstartitme = pageloaddate.getTime();
</script>    
<apex:outputPanel id="urlStringPanelId">
    <script>
    urlStringVar ="{!urlQueryString}" 
    </script>
    </apex:outputPanel>
 </apex:page>